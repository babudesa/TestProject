<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <!-- This file automatically generated from nvv_claim.xml -->
  <DetailViewPanel
    id="SubrogationPartyDetailDV">
    <Require
      name="subroadverseparty"
      type="SubroAdverseParty"/>
    <Variable
      initialValue="subroadverseparty.claim"
      name="claim"/>
    <InputColumn>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails"/>
      <ClaimContactInput
        claim="subroadverseparty.claim"
        editable="true"
        id="Adverse"
        label="displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails.Contact"
        onPick="subroadverseparty.claim.createClaimContact(subroadverseparty.AdverseParty)"
        required="true"
        validationExpression="                 if (subroadverseparty.AdverseParty != claim.Insured) {                   return null;                 } else {                   return displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails.Contact.Error;                 }"
        value="subroadverseparty.AdverseParty"
        valueRange="subroadverseparty.Claim.RelatedContacts"/>
      <Input
        id="AdverseParty_PrimaryPhone"
        label="displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails.PrimaryPhone"
        value="subroadverseparty.AdverseParty.PrimaryPhoneValue">
        <Reflect
          triggerIds="Adverse"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <TextAreaInput
        id="AdverseParty_Address"
        label="displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails.Address"
        numCols="35"
        numRows="2"
        value="subroadverseparty.AdverseParty.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="Adverse"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </TextAreaInput>
      <Input
        editable="true"
        formatType="percentagePoints"
        id="LiabilityPercentage"
        label="displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails.Liability"
        required="true"
        value="subroadverseparty.Fault"/>
      <Input
        editable="true"
        formatType="percentagePoints"
        id="expectedrecovery"
        label="displaykey.NVV.Claim.Subro.AdverseParty.PartyDetails.Expectedrecovery"
        required="true"
        value="subroadverseparty.expectedrecovery"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.POA"/>
      <Input
        editable="true"
        id="Classification"
        label="displaykey.NVV.Claim.Subro.AdverseParty.POA.Classification"
        postOnChange="true"
        required="false"
        value="subroadverseparty.classification"/>
      <Input
        editable="true"
        id="Strategy"
        label="displaykey.NVV.Claim.Subro.AdverseParty.POA.Strategy"
        postOnChange="true"
        required="false"
        value="subroadverseparty.Strategy"/>
      <Input
        editable="true"
        id="GovInvolved"
        label="displaykey.LV.Claim.Subro.AdversePartyList.GovInvolved"
        postOnChange="true"
        required="false"
        value="subroadverseparty.SubroGovernmentInvolved"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.KeyContact"/>
      <ClaimContactInput
        claim="subroadverseparty.claim"
        editable="true"
        id="SubroKeyContact"
        label="displaykey.NVV.Claim.Subro.AdverseParty.KeyContact.Name"
        required="false"
        value="subroadverseparty.AdverseParty.PrimaryContact"
        valueRange="subroadverseparty.Claim.RelatedContacts"/>
      <Input
        editable="true"
        id="RelationToAdverse"
        label="displaykey.NVV.Claim.Subro.AdverseParty.KeyContact.RelationToAdverse"
        value="subroadverseparty.MainContactType">
        <Reflect
          triggerIds="SubroKeyContact">
          <ReflectCondition
            condition="VALUE==subroadverseparty.AdverseParty"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        id="KeyContact_PrimaryPhone"
        label="displaykey.NVV.Claim.Subro.AdverseParty.KeyContact.PrimaryPhone"
        value="subroadverseparty.AdverseParty.PrimaryContact.PrimaryPhoneValue">
        <Reflect
          triggerIds="SubroKeyContact"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <TextAreaInput
        id="KeyContact_Address"
        label="displaykey.NVV.Claim.Subro.AdverseParty.KeyContact.Address"
        numCols="35"
        numRows="2"
        value="subroadverseparty.AdverseParty.PrimaryContact.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="SubroKeyContact"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </TextAreaInput>
      <InputDivider
        visible="subroadverseparty.Classification == &quot;insured&quot; OR subroadverseparty.AdverseParty.ThirdPartyInsurer != null"/>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.Insurer"
        visible="subroadverseparty.Classification == &quot;insured&quot; OR subroadverseparty.AdverseParty.ThirdPartyInsurer != null"/>
      <ClaimContactInput
        claim="subroadverseparty.claim"
        editable="true"
        id="Insurer"
        label="displaykey.NVV.Claim.Subro.AdverseParty.Insurer.Insurer"
        required="subroadverseparty.Classification == &quot;insured&quot;"
        value="subroadverseparty.AdverseParty.ThirdPartyInsurer"
        valueRange="subroadverseparty.Claim.RelatedCompanyArray"
        visible="subroadverseparty.Classification == &quot;insured&quot; OR subroadverseparty.AdverseParty.ThirdPartyInsurer != null"/>
      <Input
        id="Insurer_PrimaryPhone"
        label="displaykey.NVV.Claim.Subro.AdverseParty.Insurer.PrimaryPhone"
        value="subroadverseparty.AdverseParty.ThirdPartyInsurer.PrimaryPhone"
        visible="subroadverseparty.Classification == &quot;insured&quot; OR subroadverseparty.AdverseParty.ThirdPartyInsurer != null">
        <Reflect
          triggerIds="Insurer"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <ClaimContactInput
        claim="subroadverseparty.Claim"
        id="InsurerContact"
        label="displaykey.NVV.Claim.Subro.AdverseParty.Insurer.PrimaryContact"
        value="subroadverseparty.AdverseParty.Thirdpartyinsurer.PrimaryContact"
        valueRange="subroadverseparty.Claim.RelatedPersonArray"
        visible="subroadverseparty.Classification == &quot;insured&quot; OR subroadverseparty.AdverseParty.ThirdPartyInsurer != null"/>
      <InputDivider
        visible="subroadverseparty.Strategy == &quot;collection&quot; OR subroadverseparty.AdverseParty.Collectionagency != null"/>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.Collection"
        visible="subroadverseparty.Strategy == &quot;collection&quot; OR subroadverseparty.AdverseParty.Collectionagency != null"/>
      <ClaimContactInput
        claim="subroadverseparty.claim"
        editable="true"
        id="collectionagency"
        label="displaykey.NVV.Claim.Subro.AdverseParty.Collection.Collection"
        value="subroadverseparty.AdverseParty.collectionagency"
        valueRange="subroadverseparty.Claim.RelatedCompanyArray"
        visible="subroadverseparty.Strategy == &quot;collection&quot; OR subroadverseparty.AdverseParty.Collectionagency != null"/>
    </InputColumn>
    <InputColumn>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.Recoveries"
        visible="perm.Claim.viewrecoveries(subroadverseparty.claim)"/>
      <Input
        formatType="currency"
        id="CalcRecovFromPayee"
        label="displaykey.NVV.Claim.Subro.AdverseParty.Recoveries.CalcRecovFromPayee"
        value="subroadverseparty.getTotAmountRecoveredForParty()"
        visible="perm.Claim.viewrecoveries(subroadverseparty.claim)"/>
      <Input
        formatType="currency"
        id="TotClaimCostSubroRecoveryForParty"
        label="displaykey.NVV.Claim.Subro.AdverseParty.Recoveries.TotClaimCostSubroRecoveryForParty"
        value="subroadverseparty.getTotClaimCostSubroRecoveryForParty()"
        visible="perm.Claim.viewrecoveries(subroadverseparty.claim)"/>
      <Label
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment"/>
      <Input
        editable="true"
        id="ScheduleRecovery"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.PaymentScheduled"
        postOnChange="true"
        value="subroadverseparty.ScheduleRecovery"/>
      <Input
        editable="true"
        id="ScheduleRecoveryType"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.Type"
        postOnChange="true"
        value="subroadverseparty.ScheduleRecoveryType"
        visible="subroadverseparty.ScheduleRecovery"/>
      <DateInput
        editable="true"
        id="NoteSent"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.NoteSent"
        required="false"
        value="subroadverseparty.NoteSent"
        visible="subroadverseparty.ScheduleRecovery AND subroadverseparty.ScheduleRecoveryType == &quot;promissory&quot;"/>
      <DateInput
        editable="true"
        id="NoteReceived"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.NoteReceived"
        required="false"
        value="subroadverseparty.NoteReceived"
        visible="subroadverseparty.ScheduleRecovery AND subroadverseparty.ScheduleRecoveryType == &quot;promissory&quot;"/>
      <Input
        formatType="currency"
        id="TotalAmount"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.TotalAmount"
        required="false"
        value="subroadverseparty.TotPromissoryAmount()"
        visible="subroadverseparty.ScheduleRecovery"/>
      <Input
        formatType="currency"
        id="CalcOSForPayee"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.CalcOSForPayee"
        value="(subroadverseparty.TotPromissoryAmount() - subroadverseparty.getTotAmountRecoveredForParty())"
        visible="subroadverseparty.ScheduleRecovery"/>
      <Input
        formatType="currency"
        id="CalcExpectedOSFromPayee"
        label="displaykey.NVV.Claim.Subro.AdverseParty.ScheduledPayment.CalcExpectedOSFromPayee"
        value="(subroadverseparty.PromissoryAmountDueAsOf() - subroadverseparty.getTotAmountRecoveredForParty())"
        visible="subroadverseparty.ScheduleRecovery"/>
      <ListViewInput
        boldLabel="true"
        def="EditablePaymentScheduleLV(subroadverseparty)"
        editable="perm.Claim.createanytransaction(subroadverseparty.Claim)"
        id="PaymentPlan_ScheduledPayments"
        label="displaykey.LV.Claim.Subro.PaymentPlan.ScheduledPayments"
        labelAbove="true"
        visible="subroadverseparty.ScheduleRecovery">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
    </InputColumn>
    <InputFooterSection/>
  </DetailViewPanel>
</PCF>
