<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- This file automatically generated from nvv_claim.xml -->
  <DetailViewPanel
    id="QuickClaimDV"
    mode="AutoFirstAndFinal">
    <Require
      name="Claim"
      type="Claim"/>
    <Require
      name="Wizard"
      type="claim.NewClaimWizardInfo"/>
    <InputColumn>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.ReportedBy"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="ReportedBy_Name"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.ReportedBy.Name"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="true"
        value="Claim.Reporter"
        valueRange="Claim.RelatedPersonArray"/>
      <Input
        editable="true"
        id="Claim_ReportedByType"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.ReportedByType"
        required="true"
        value="Claim.ReportedByType">
        <Reflect
          triggerIds="ReportedBy_Name">
          <ReflectCondition
            condition="VALUE==null"
            value="&quot;&quot;"/>
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        id="ReportedBy_WorkPhone"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.ReportedBy.WorkPhone"
        value="Claim.Reporter.PrimaryPhoneValue">
        <Reflect
          triggerIds="ReportedBy_Name"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <Input
        id="ReportedBy_Address"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.ReportedBy.Address"
        value="Claim.Reporter.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="ReportedBy_Name"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </Input>
      <Label
        label="displaykey.NVV.Claim.NewQuickClaimClaimAutoFirstAndFinal.Claim.Policy"/>
      <Input
        id="Policy_PolicyNumber"
        label="displaykey.NVV.Claim.NewQuickClaimClaimAutoFirstAndFinal.Policy.PolicyNumber"
        value="Claim.Policy.PolicyNumber"/>
      <Input
        id="Policy_Status"
        label="displaykey.NVV.Claim.NewQuickClaimClaimAutoFirstAndFinal.Policy.Status"
        value="Claim.Policy.Status"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim"/>
      <Input
        editable="true"
        id="Claim_LOBCode"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.LOBCode"
        required="true"
        value="Claim.LOBCode"/>
      <Input
        id="Claim_LossType"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.LossType"
        required="false"
        value="Claim.LossType"/>
      <RangeInput
        editable="true"
        id="Catastrophe_CatastropheNumber"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Catastrophe.CatastropheNumber"
        required="false"
        value="Claim.Catastrophe"
        valueRange="gw.api.admin.CatastropheUtil.getCatastrophes()"/>
      <RangeInput
        editable="true"
        id="Claim_PermissionRequired"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.PermissionRequired"
        required="false"
        value="Claim.PermissionRequired"
        valueRange="gw.api.claim.ClaimUtil.getAvailableTypes()"/>
      <InputDivider/>
      <TextAreaInput
        boldLabel="true"
        editable="true"
        id="Claim_Description"
        label="displaykey.NVV.Claim.Subview.NewQuickClaimClaimAutoFirstAndFinal.Claim.Description"
        numCols="50"
        numRows="3"
        value="Claim.Description"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.LossDetails"/>
      <Input
        editable="true"
        id="Claim_LossCause"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.LossCause"
        required="true"
        value="Claim.LossCause"/>
      <Input
        editable="true"
        id="Notification_Fault"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Notification.Fault"
        postOnChange="true"
        value="claim.FaultRating"/>
      <DateInput
        dateFormat="short"
        id="Claim_LossDate"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.LossDate"
        timeFormat="short"
        validationExpression="Claim.LossDate == null || Claim.LossDate &lt; gw.api.util.DateUtil.currentDate() ? null : displaykey.Java.Validation.Date.ForbidFuture"
        value="Claim.LossDate"/>
      <Input
        editable="true"
        id="Notification_AtFaultPercentage"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Notification.AtFaultPercentage"
        value="Claim.Fault"
        visible=" Claim.FaultRating == &quot;1&quot; "/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Notification"/>
      <DateInput
        editable="true"
        id="Notification_ReportedDate"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Notification.ReportedDate"
        required="true"
        validationExpression="Claim.ReportedDate == null || Claim.ReportedDate &lt; gw.api.util.DateUtil.currentDate() ? null : displaykey.Java.Validation.Date.ForbidFuture"
        value="Claim.ReportedDate"/>
      <Input
        editable="true"
        id="Notification_FirstNoticeSuit"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Notification.FirstNoticeSuit"
        value="Claim.FirstNoticeSuit"/>
      <Input
        editable="true"
        id="Notification_HowReported"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Notification.HowReported"
        value="Claim.HowReported"/>
      <Input
        editable="true"
        id="Status_IncidentReport"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Status.IncidentReport"
        required="true"
        value="Claim.IncidentReport"/>
      <Input
        editable="true"
        id="Status_CoverageQuestion"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Status.CoverageQuestion"
        required="false"
        value="Claim.CoverageInQuestion"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.LossLocation"/>
      <InputSetRef
        def="AddressInputSet(Claim.AddressOwner)"
        mode="Claim.AddressOwner.InputSetMode"/>
    </InputColumn>
    <InputColumn>
      <ListViewInput
        boldLabel="true"
        def="EditableOfficialsLV(Claim)"
        editable="true"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Officials"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Title"/>
      <Input
        id="Exposure_LossParty"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.LossParty"
        required="true"
        value="Claim.OrderedExposures[0].LossParty"/>
      <RangeInput
        editable="Claim.New"
        id="Exposure_PrimaryCoverage"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.PrimaryCoverage"
        required="true"
        value="Claim.OrderedExposures[0].PrimaryCoverage"
        valueRange="Claim.OrderedExposures[0].getPossibleCoverageTypes()"/>
      <RangeInput
        editable="Claim.New"
        id="Exposure_CoverageSubtype"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.CoverageSubtype"
        required="true"
        value="Claim.OrderedExposures[0].CoverageSubtype"
        valueRange="Claim.OrderedExposures[0].getPossibleCoverageSubtypes(Claim.OrderedExposures[0].PrimaryCoverage)"/>
      <RangeInput
        editable="Claim.New"
        id="Exposure_Coverage"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Coverage"
        required="false"
        value="Claim.OrderedExposures[0].Coverage"
        valueRange="Claim.Policy.getCoveragesByCoverageType(Claim.OrderedExposures[0].PrimaryCoverage)"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Claimant"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Claimant_Picker"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Claimant.Picker"
        required="true"
        value="Claim.OrderedExposures[0].Claimant"
        valueRange="Claim.RelatedPersonArray">
        <Reflect
          triggerIds="Exposure_LossParty">
          <ReflectCondition
            condition="VALUE == &quot;insured&quot;"
            value="Claim.Insured"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </ClaimContactInput>
      <Input
        editable="true"
        id="Claimant_Type"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Claimant.Type"
        required="true"
        value="Claim.OrderedExposures[0].ClaimantType">
        <Reflect
          triggerIds="Claimant_Picker">
          <ReflectCondition
            condition="Claim.Insured==VALUE"
            value="&quot;insured&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        id="Claimant_Workphone"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Claimant.Workphone"
        value="Claim.OrderedExposures[0].Claimant.PrimaryPhoneValue">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <Input
        id="Claimant_Address"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Claimant.Address"
        value="Claim.OrderedExposures[0].Claimant.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </Input>
      <Input
        editable="true"
        id="Claimant_OtherCoverage"
        label="displaykey.NVV.Exposure.SubView.NewQuickClaimClaimAutoFirstAndFinal.Exposure.Claimant.OtherCoverage"
        required="false"
        value="Claim.OrderedExposures[0].OtherCoverage"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle"/>
      <RangeInput
        editable="true"
        id="Vehicle_Name"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.Name"
        newValue="new Vehicle(Claim)"
        required="true"
        sortValueRange="false"
        validationExpression="!(Claim.OrderedExposures[0].VehicleIncident.Vehicle.Vin == null and Claim.OrderedExposures[0].VehicleIncident.Vehicle.LicensePlate == null and (Claim.OrderedExposures[0].VehicleIncident.Vehicle.Model == null or Claim.OrderedExposures[0].VehicleIncident.Vehicle.Make == null)) ? null : displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.ValidationError"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle"
        valueRange="Claim.Vehicles"/>
      <Input
        editable="true"
        id="Vehicle_PolicyStatus"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.PolicyStatus"
        required="false"
        value="Claim.OrderedExposures[0].VehicleIncident.VehiclePolStatus"/>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Year"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.Year"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Year">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.Year"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Make"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.Make"
        required="false"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Make">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.Make"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Model"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.Model"
        required="false"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Model">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.Model"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Style"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.Style"
        postOnChange="true"
        required="false"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.Style"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Color"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.Color"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Color">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.Color"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_VIN"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.VIN"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Vin"
        visible="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style != &quot;boat&quot; and Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style != &quot;ATV&quot; and Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style != &quot;snowmobile&quot;">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.Vin"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_SerialNumber"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.SerialNumber"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.SerialNumber"
        visible="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style == &quot;boat&quot; or Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style == &quot;ATV&quot; or Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style == &quot;snowmobile&quot;">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.SerialNumber"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_State"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.State"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.State"
        visible="gw.api.address.CountryAddressFields.DefaultCountryHasStates">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.State"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_LicensePlate"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.LicensePlate"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.LicensePlate">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.LicensePlate"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_BoatType"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.BoatType"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.BoatType"
        visible="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style == &quot;boat&quot;">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.BoatType"/>
      </Input>
      <Input
        available="Claim.canEditVehicle(Claim.OrderedExposures[0].VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_OffRoadStyle"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Vehicle.OffRoadStyle"
        value="Claim.OrderedExposures[0].VehicleIncident.Vehicle.OffRoadStyle"
        visible="Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style == &quot;ATV&quot; or Claim.OrderedExposures[0].VehicleIncident.Vehicle.Style == &quot;snowmobile&quot;">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Name"
          value="VALUE.OffRoadStyle"/>
      </Input>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Driver"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Driver_Name"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Driver.Name"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="true"
        value="Claim.OrderedExposures[0].VehicleIncident.Driver"
        valueRange="Claim.RelatedPersonArray"/>
      <Input
        editable="true"
        id="Driver_ReasonForUse"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Driver.VehicleReasonForUse"
        value="Claim.OrderedExposures[0].VehicleIncident.VehicleUseReason"/>
      <Input
        editable="true"
        id="Claim_DriverRelation"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.DriverRelation"
        required="true"
        value="Claim.OrderedExposures[0].VehicleIncident.DriverRelation">
        <Reflect
          triggerIds="Driver_Name">
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="VALUE==Claim.Reporter"
            value="Claim.ReportedByType"/>
          <ReflectCondition
            condition="VALUE==Claim.MainContact"
            value="Claim.MainContactType"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        editable="true"
        id="Driver_Permission"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Driver.Permission"
        required="false"
        value="Claim.OrderedExposures[0].VehicleIncident.OwnersPermission">
        <Reflect
          triggerIds="Claim_DriverRelation">
          <ReflectCondition
            condition="VALUE == &quot;self&quot;"
            value="true"/>
        </Reflect>
      </Input>
      <Input
        editable="true"
        id="Driver_IsKidInPolicy"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Driver.IsKidInPolicy"
        postOnChange="true"
        value="Claim.OrderedExposures[0].VehicleIncident.MinorOnPolicy"
        visible="Claim.OrderedExposures[0].VehicleIncident.DriverRelToOwner == &quot;child&quot; "/>
      <Input
        editable="true"
        id="Driver_IsKidInPolicy_Percentagedriven"
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Driver.IsKidInPolicy.Percentagedriven"
        required="false"
        value="Claim.OrderedExposures[0].VehicleIncident.PercentagedrivenByMinor"
        visible="Claim.OrderedExposures[0].VehicleIncident.DriverRelToOwner == &quot;child&quot; and Claim.OrderedExposures[0].VehicleIncident.MinorOnPolicy == &quot;no&quot; "/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.SubView.NewQuickClaimClaimAutoFirstAndFinal.Claim.Assignment"/>
      <InputSet
        visible="true">
        <Choice
          option="true"
          value="Wizard.CommonAssignment">
          <CCAssigneeInput
            assignable="Claim"
            claim="Claim"
            editable="true"
            id="CommonAssign"
            label="displaykey.Web.NewClaimWizard.Assign.CommonAssign"
            showNoneSelected="false"
            sortValueRange="false"
            value="Wizard.CommonAssignee"
            valueRange="Claim.SuggestedAssignees"/>
        </Choice>
        <Choice
          option="false"
          value="Wizard.CommonAssignment">
          <Input
            id="IndividualAssign"
            label="displaykey.Web.NewClaimWizard.Assign.IndividualAssign"
            value="&quot;&quot;"/>
          <ListViewInput
            labelAbove="true">
            <Toolbar/>
            <ListViewPanel
              id="NewClaimWizardAssignLV">
              <RowIterator
                editable="true"
                elementName="Assignment"
                value="Wizard.IndividualAssignments">
                <Row>
                  <Cell
                    enableSort="false"
                    id="ForAssign"
                    label="displaykey.Web.NewClaimWizard.Assign.For"
                    value="Assignment.TargetName"/>
                  <AssigneeCell
                    assignable="Assignment.Target"
                    editable="true"
                    enableSort="false"
                    id="Assignee"
                    label="displaykey.Web.NewClaimWizard.Assign.ChooseUserGroup"
                    showNoneSelected="false"
                    sortValueRange="false"
                    value="Assignment.Assignee"
                    valueRange="Assignment.Target.SuggestedAssignees"/>
                </Row>
              </RowIterator>
            </ListViewPanel>
          </ListViewInput>
        </Choice>
      </InputSet>
    </InputColumn>
  </DetailViewPanel>
</PCF>
