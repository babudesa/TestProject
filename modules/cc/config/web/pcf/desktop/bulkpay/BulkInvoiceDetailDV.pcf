<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    editable="!bulkInvoice.PendingItemValidation"
    id="BulkInvoiceDetailDV">
    <Require
      name="bulkInvoice"
      type="BulkInvoice"/>
    <Require
      name="externalContactSource"
      type="contact.ExternalContactSource"/>
    <Require
      name="payeeLinkStatus"
      type="contact.LinkStatus"/>
    <Variable
      initialValue="bulkInvoice.PayeeChangeable"
      name="isPayeeChangeable"/>
    <InputColumn>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Basics"/>
      <Input
        editable="true"
        id="InvoiceNumber"
        label="displaykey.Web.Financials.BulkPay.Invoice.InvoiceNumber"
        numCols="15"
        value="bulkInvoice.InvoiceNumber"/>
      <DateInput
        editable="true"
        id="ReceivedDate"
        label="displaykey.Web.Financials.BulkPay.Invoice.DateReceived"
        requestValidationExpression="((util.DateUtil.compareIgnoreTime(util.DateUtil.currentDate(), (VALUE)) &lt; 0) ? displaykey.Web.Financials.BulkPay.Error.ReceivedDateAfterCurrentDate : null)"
        value="bulkInvoice.ReceivedDate"/>
      <BooleanRadioInput
        editable="true"
        falseLabel="displaykey.Web.Financials.BulkPay.Invoice.EnterIndividualAmounts"
        id="SplitEqually"
        label="displaykey.Web.Financials.BulkPay.Invoice.SplitEqually"
        onChange="bulkInvoice.recalculateSplitAmounts(); if (!bulkInvoice.SplitEqually) {bulkInvoice.BulkInvoiceAmountComponent.Amount = java.math.BigDecimal.ZERO}"
        postOnChange="true"
        stacked="true"
        trueLabel="displaykey.Web.Financials.BulkPay.Invoice.DistributeEvenly"
        value="bulkInvoice.SplitEqually"/>
      <Input
        available="true"
        editable="bulkInvoice.SplitEqually"
        formatType="currency"
        id="TotalAmount"
        label="displaykey.Web.Financials.BulkPay.Invoice.AmountToDistribute"
        numCols="15"
        onChange="bulkInvoice.recalculateSplitAmounts()"
        postOnChange="true"
        required="true"
        value="bulkInvoice.BulkInvoiceAmountComponent"
        visible="bulkInvoice.SplitEqually"/>
      <TypeKeyInput
        editable="true"
        id="Currency"
        label="displaykey.Financials.Multicurrency.Currency"
        postOnChange="true"
        value="bulkInvoice.Currency"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode()"/>
      <BooleanRadioInput
        available="bulkInvoice.Currency != gw.api.util.CurrencyUtil.getReportingCurrency()"
        editable="perm.ExchangeRate.edit"
        falseLabel="displaykey.Financials.Multicurrency.Automatic"
        id="ExchangeRateOverride"
        label="displaykey.Financials.Multicurrency.ExchangeRateMode"
        postOnChange="true"
        trueLabel="displaykey.Financials.Multicurrency.Manual"
        value="bulkInvoice.OverrideTransToReportingExchangeRate"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode() and bulkInvoice.Currency != gw.api.util.CurrencyUtil.getReportingCurrency()"/>
      <TextInput
        available="bulkInvoice.OverrideTransToReportingExchangeRate"
        editable="true"
        format="getExchangeRateFormatPattern( bulkInvoice.TransToReportingExchangeRate )"
        formatType="exactNumber"
        id="ExchangeRate"
        label="displaykey.Financials.Multicurrency.ExchangeRate"
        numCols="8"
        postOnChange="true"
        required="true"
        value="bulkInvoice.TransToReportingExchangeRateRate"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode() and bulkInvoice.Currency != gw.api.util.CurrencyUtil.getReportingCurrency()"/>
      <Input
        editable="bulkInvoice.OverrideTransToReportingExchangeRate"
        id="RateSet_Description"
        label="displaykey.Financials.Multicurrency.RateSetDescription"
        value="bulkInvoice.TransToReportingExchangeRate.ExchangeRateSet.Description"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode() and bulkInvoice.Currency != gw.api.util.CurrencyUtil.getReportingCurrency()"/>
      <Input
        id="RateSet_Date"
        label="displaykey.Financials.Multicurrency.ExchangeRateDate"
        value="bulkInvoice.TransToReportingExchangeRate.UpdateTime"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode() and bulkInvoice.Currency != gw.api.util.CurrencyUtil.getReportingCurrency()"/>
      <InputDivider/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Status"/>
      <TypeKeyInput
        id="Status"
        label="displaykey.Web.Financials.BulkPay.Invoice.Status"
        value="bulkInvoice.Status"/>
      <DateInput
        id="ApprovalDate"
        label="displaykey.Web.Financials.BulkPay.Invoice.DateApproved"
        value="bulkInvoice.ApprovalDate"/>
      <Input
        formatType="currency"
        id="TotalApprovedAmount"
        label="displaykey.Web.Financials.BulkPay.Invoice.TotalApprovedAmount"
        value="bulkInvoice.ApprovedCurrencyAmount"/>
      <DateInput
        id="IssueDate"
        label="displaykey.Web.Financials.BulkPay.Invoice.IssueDate"
        value="bulkInvoice.IssueDate"/>
      <InputDivider/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.InvoiceItemDefaults"/>
      <TypeKeyInput
        editable="true"
        id="DefaultCostType"
        label="displaykey.Web.Financials.BulkPay.Invoice.DefaultCostType"
        postOnChange="true"
        value="bulkInvoice.DefaultCostType"
        valueWidth="140"/>
      <TypeKeyInput
        editable="true"
        id="DefaultCostCategory"
        label="displaykey.Web.Financials.BulkPay.Invoice.DefaultCostCategory"
        postOnChange="true"
        value="bulkInvoice.DefaultCostCategory"
        valueWidth="140"/>
      <TypeKeyInput
        editable="true"
        id="DefaultPaymentType"
        label="displaykey.Web.Financials.BulkPay.Invoice.DefaultPaymentType"
        postOnChange="true"
        value="bulkInvoice.DefaultPaymentType"/>
    </InputColumn>
    <InputColumn>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.CheckDetails"/>
      <Label
        label="payeeLinkStatus.LinkStatusMessage"
        visible="!bulkInvoice.New"/>
      <Label
        hideIfReadOnly="true"
        label="displaykey.Web.Financials.BulkPay.Invoice.Alert.PayeeNotChangeable"
        visible="!isPayeeChangeable"/>
      <AddressBookContactInput
        editable="isPayeeChangeable"
        id="Payee"
        label="displaykey.Web.Financials.BulkPay.Invoice.Payee"
        newContactMenu="BlankNewContactPickerMenuItemSet()"
        onPick="reflectPayeeFields(bulkInvoice)"
        required="true"
        value="bulkInvoice.Payee"/>
      <TextAreaInput
        editable="isPayeeChangeable"
        id="PayTo"
        label="displaykey.Web.Financials.BulkPay.Invoice.PayTo"
        numCols="20"
        numRows="2"
        required="true"
        value="bulkInvoice.PayTo"/>
      <Input
        editable="true"
        id="CheckNumber"
        label="displaykey.Web.Financials.BulkPay.Invoice.CheckNumber"
        numCols="10"
        value="bulkInvoice.CheckNumber"/>
      <Input
        editable="true"
        id="DeliveryMethod"
        label="displaykey.Web.Financials.BulkPay.Invoice.DeliveryMethod"
        value="bulkInvoice.DeliveryMethod"/>
      <Input
        editable="isPayeeChangeable"
        id="MailToContact"
        label="displaykey.Web.Financials.BulkPay.Invoice.MailToContact"
        numCols="20"
        required="true"
        value="bulkInvoice.MailTo"/>
      <Input
        editable="isPayeeChangeable"
        id="MailingAddress"
        label="displaykey.Web.Financials.BulkPay.Invoice.MailToAddress"
        numCols="25"
        value="bulkInvoice.MailToAddress"/>
      <Input
        editable="true"
        id="Reportability"
        label="displaykey.Web.Financials.BulkPay.Invoice.Reportability"
        value="bulkInvoice.Reportability"/>
      <InputDivider/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Instructions"/>
      <TypeKeyInput
        editable="true"
        id="PaymentMethod"
        label="displaykey.Web.Financials.BulkPay.Invoice.PaymentMethod"
        value="bulkInvoice.PaymentMethod"/>
      <DateInput
        editable="true"
        id="ScheduledSendDate"
        label="displaykey.Web.Financials.BulkPay.Invoice.DateToSend"
        required="true"
        value="bulkInvoice.ScheduledSendDate"/>
      <TypeKeyInput
        editable="true"
        id="CheckInstructions"
        label="displaykey.Web.Financials.BulkPay.Invoice.CheckInstructions"
        numCols="10"
        value="bulkInvoice.CheckInstructions"
        valueWidth="50"/>
      <Input
        editable="true"
        id="Memo"
        label="displaykey.Web.Financials.BulkPay.Invoice.Memo"
        numCols="20"
        value="bulkInvoice.Memo"/>
      <InputDivider/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Comments"/>
      <Input
        id="Comments"
        value="bulkInvoice.Comments"/>
    </InputColumn>
    <InputFooterSection>
      <InputDivider/>
      <Input
        boldLabel="true"
        id="BulkInvoiceValidLabel"
        label="displaykey.Web.Financials.BulkPay.Invoice.Validation.IsValid"
        value="null"
        visible="bulkInvoice.Valid"/>
      <Input
        boldLabel="true"
        id="BulkInvoiceInvalidLabel"
        label="displaykey.Web.Financials.BulkPay.Invoice.Validation.IsNotValid"
        value="null"
        visible="!bulkInvoice.Valid"/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Validation.ResultsTitle(getLastValidatedDateString(bulkInvoice.LastValidatedDate))"
        visible="bulkInvoice.LastValidatedDate != null and (bulkInvoice.Valid or (!bulkInvoice.Valid and bulkInvoice.ValidationAlerts.length &gt; 0))"/>
      <TextInput
        align="center"
        id="ValidationSuccess"
        value="displaykey.Web.Financials.BulkPay.Invoice.Validation.ResultsSuccess"
        visible="bulkInvoice.Valid and bulkInvoice.LastValidatedDate != null"/>
      <ListViewInput
        visible="bulkInvoice.LastValidatedDate != null and !bulkInvoice.Valid and bulkInvoice.ValidationAlerts.length &gt; 0">
        <Toolbar/>
        <ListViewPanel
          id="BulkInvoiceValidationAlertsLV">
          <RowIterator
            editable="false"
            elementName="validationAlert"
            pageSize="5"
            value="bulkInvoice.ValidationAlerts">
            <Row>
              <Cell
                id="AlertType"
                label="displaykey.Web.Financials.BulkPay.Invoice.Validation.AlertType"
                value="validationAlert.AlertType"/>
              <Cell
                id="AlertMsg"
                label="displaykey.Web.Financials.BulkPay.Invoice.Validation.AlertMsg"
                value="validationAlert.AlertMsg"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <InputDivider/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Approval.History"
        visible="!bulkInvoice.New"/>
      <TextInput
        id="NoApprovalHistory"
        value="displaykey.Web.Financials.BulkPay.Invoice.Approval.NoHistory"
        visible="!bulkInvoice.New and (bulkInvoice.ApprovalHistory as Activity[]).length == 0"/>
      <ListViewInput
        visible="!bulkInvoice.New and (bulkInvoice.ApprovalHistory as Activity[]).length != 0">
        <Toolbar/>
        <ListViewPanel
          id="BulkInvoiceApprovalHistoryLV">
          <RowIterator
            editable="false"
            elementName="approvalHistory"
            pageSize="5"
            value="bulkInvoice.ApprovalHistory as Activity[]">
            <Row>
              <DateCell
                dateFormat="short"
                id="ApprovalHistory_Date"
                label="displaykey.LV.Financials.ApprovalHistory.Listview.ApprovalHistory.Date"
                sortDirection="descending"
                sortOrder="1"
                timeFormat="short"
                value="approvalHistory.CloseDate"
                wrap="false"/>
              <Cell
                id="User"
                label="displaykey.LV.Financials.ApprovalHistory.User"
                value="getApprovalUserOrGroupString( approvalHistory )"
                wrap="false"/>
              <Cell
                id="Approved"
                label="displaykey.LV.Financials.ApprovalHistory.Approved"
                value="getApprovalString(approvalHistory)"
                wrap="false"/>
              <Cell
                id="ApprovalIssue"
                label="displaykey.LV.Financials.ApprovalHistory.ApprovalIssue"
                value="approvalHistory.ApprovalIssue"
                wrap="false"/>
              <Cell
                id="ApprovalRationale"
                label="displaykey.LV.Financials.ApprovalHistory.ApprovalRationale"
                value="approvalHistory.ApprovalRationale"
                wrap="false"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputFooterSection>
    <Code><![CDATA[function reflectPayeeFields(bi : BulkInvoice) {
  var payee = bi.Payee;
  if (null !=  payee) {
    bi.PayTo = payee.DisplayName;
    bi.MailTo = payee.DisplayName;
    bi.MailToAddress = payee.PrimaryAddressDisplayValue;
    if (gw.api.util.CurrencyUtil.isMultiCurrencyMode() and null != payee.PreferredCurrency and bi.InvoiceItems.length == 0) {
      bi.Currency = payee.PreferredCurrency;
    }
  }
}

function getExchangeRateFormatPattern( rate : ExchangeRate ) : String {
  return "1 " + rate.BaseCurrency.DisplayName + " = #.###### " + rate.PriceCurrency.DisplayName;
}

function getLastValidatedDateString(date : java.util.Date) : String{
  var result : String = ""
  result = result + (date == null ? "" : date.format( "medium"))
  result = result + " "
  result = result + (date == null ? "" : date.format( "short"))
  return result
  
}

function getApprovalUserOrGroupString(approvalHistory : Activity) : String {
  var closeUser = approvalHistory.CloseUser
  var assignedUser = approvalHistory.AssignedUser
  var assignedGroup = approvalHistory.AssignedGroup
  
  if( closeUser != null )  {
    return closeUser.DisplayName
  } 
  else if( assignedUser != null ) {
    return assignedUser.DisplayName
  }  
  else if( assignedGroup != null ) {
    return assignedGroup.DisplayName
  } 
  else {
    return ""
  }
}

function getApprovalString( activity : Activity ) : String {
  if (activity.Approved == null) {
    return displayKey.Java.ApprovalHistory.PendingApproval
  } else if (activity.Approved) {
    return displayKey.Java.ApprovalHistory.Approved
  } else {
    return displayKey.Java.ApprovalHistory.Rejected
  }
}]]></Code>
  </DetailViewPanel>
</PCF>
