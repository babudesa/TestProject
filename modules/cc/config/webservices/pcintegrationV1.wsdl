<?xml version="1.0"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://api.webservices.pc.guidewire.com/" xmlns:intf="http://api.webservices.pc.guidewire.com/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns1="http://entity.webservices.pc.guidewire.com/" xmlns:tns2="http://fault.webservices.pc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://api.webservices.pc.guidewire.com/">
  <wsdl:binding name="CCPolicySearchIntegrationV1SoapBinding" type="impl:CCPolicySearchIntegrationV1">
    <wsdl:operation name="retrievePolicy">
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="BadIdentifierException" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="PermissionException" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ServerStateException" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:input name="retrievePolicyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="retrievePolicyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:output>
      <wsdlsoap:operation soapAction=""/>
    </wsdl:operation>
    <wsdl:operation name="searchForPolicies">
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="BadIdentifierException" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="PermissionException" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ServerStateException" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:input name="searchForPoliciesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="searchForPoliciesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.pc.guidewire.com/" use="encoded"/>
      </wsdl:output>
      <wsdlsoap:operation soapAction=""/>
    </wsdl:operation>
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
  </wsdl:binding>
  <wsdl:message name="BadIdentifierException">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionException">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ServerStateException">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrievePolicyRequest">
    <wsdl:part name="asOfDate" type="xsd:dateTime">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policyNumber" type="soapenc:string">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrievePolicyResponse">
    <wsdl:part name="retrievePolicyReturn" type="tns1:Policy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForPoliciesRequest">
    <wsdl:part name="criteria" type="tns1:PCSearchCriteria">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForPoliciesResponse">
    <wsdl:part name="searchForPoliciesReturn" type="tns1:ArrayOfCCPolicySummary">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CCPolicySearchIntegrationV1">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">WebService for CC to search and retrieve policies.</wsdl:documentation>
    <wsdl:operation name="retrievePolicy" parameterOrder="policyNumber asOfDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"/>
      <wsdl:fault message="impl:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="impl:PermissionException" name="PermissionException"/>
      <wsdl:fault message="impl:ServerStateException" name="ServerStateException"/>
      <wsdl:input message="impl:retrievePolicyRequest" name="retrievePolicyRequest"/>
      <wsdl:output message="impl:retrievePolicyResponse" name="retrievePolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="searchForPolicies" parameterOrder="criteria">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"/>
      <wsdl:fault message="impl:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="impl:PermissionException" name="PermissionException"/>
      <wsdl:fault message="impl:ServerStateException" name="ServerStateException"/>
      <wsdl:input message="impl:searchForPoliciesRequest" name="searchForPoliciesRequest"/>
      <wsdl:output message="impl:searchForPoliciesResponse" name="searchForPoliciesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:service name="CCPolicySearchIntegrationV1Service">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">WebService for CC to search and retrieve policies.</wsdl:documentation>
    <wsdl:port binding="impl:CCPolicySearchIntegrationV1SoapBinding" name="CCPolicySearchIntegrationV1">
      <wsdlsoap:address location="http://localhost:8180/pc/soap/CCPolicySearchIntegrationV1"/>
    </wsdl:port>
  </wsdl:service>
  <!-- WSDL
       created
       by Apache
       Axis
       version:
       1.2.1
Built
       on Mar
       05,
       2007
       (11:15:56
       PST) -->
  <wsdl:types>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://entity.webservices.pc.guidewire.com/">
      <complexType name="Address">
        <sequence>
          <element name="AddressLine1" nillable="true" type="soapenc:string"/>
          <element name="AddressLine2" nillable="true" type="soapenc:string"/>
          <element name="AddressLine3" nillable="true" type="soapenc:string"/>
          <element name="AddressType" nillable="true" type="soapenc:string"/>
          <element name="City" nillable="true" type="soapenc:string"/>
          <element name="Country" nillable="true" type="soapenc:string"/>
          <element name="County" nillable="true" type="soapenc:string"/>
          <element name="Description" nillable="true" type="soapenc:string"/>
          <element name="HTMID" nillable="true" type="soapenc:decimal"/>
          <element name="PostalCode" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
          <element name="ValidUntil" nillable="true" type="xsd:dateTime"/>
        </sequence>
      </complexType>
      <complexType name="Adjudicator">
        <complexContent>
          <extension base="tns1:Person">
            <sequence>
              <element name="AdjudicativeDomain" nillable="true" type="soapenc:string"/>
              <element name="AdjudicatorLicense" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfAddress">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:Address[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfBuilding">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:Building[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfCCPolicySummary">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:CCPolicySummary[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfCCPolicySummaryProperty">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:CCPolicySummaryProperty[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfCCPolicySummaryVehicle">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:CCPolicySummaryVehicle[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfClassCode">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:ClassCode[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfContact">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:Contact[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfContactAddress">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:ContactAddress[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfCovTerm">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:CovTerm[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfEndorsement">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:Endorsement[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfOfficialID">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:OfficialID[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfPerson">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:Person[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfPolicyCoverage">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:PolicyCoverage[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfPolicyLocation">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:PolicyLocation[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfPropertyItem">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:PropertyItem[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfPropertyOwner">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:PropertyOwner[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfRUCoverage">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:RUCoverage[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfRiskUnit">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:RiskUnit[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfStatCode">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:StatCode[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfVehicleOwner">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute wsdl:arrayType="tns1:VehicleOwner[]" ref="soapenc:arrayType"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="Building">
        <sequence>
          <element name="BuildingNumber" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="BuildingRU">
        <complexContent>
          <extension base="tns1:LocationBasedRU">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CCPolicySummary">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Properties" nillable="true" type="tns1:ArrayOfCCPolicySummaryProperty"/>
          <element maxOccurs="1" minOccurs="0" name="Vehicles" nillable="true" type="tns1:ArrayOfCCPolicySummaryVehicle"/>
          <element name="Address" nillable="true" type="soapenc:string"/>
          <element name="City" nillable="true" type="soapenc:string"/>
          <element name="EffectiveDate" nillable="true" type="xsd:dateTime"/>
          <element name="ExpirationDate" nillable="true" type="xsd:dateTime"/>
          <element name="InsuredName" nillable="true" type="soapenc:string"/>
          <element name="PolicyNumber" nillable="true" type="soapenc:string"/>
          <element name="PolicyType" nillable="true" type="soapenc:string"/>
          <element name="PostalCode" nillable="true" type="soapenc:string"/>
          <element name="ProducerCode" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
          <element name="Status" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="CCPolicySummaryProperty">
        <sequence>
          <element name="Address" nillable="true" type="soapenc:string"/>
          <element name="BuildingNumber" nillable="true" type="soapenc:string"/>
          <element name="City" nillable="true" type="soapenc:string"/>
          <element name="Location" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
          <element name="PropertyNumber" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="CCPolicySummaryVehicle">
        <sequence>
          <element name="Color" nillable="true" type="soapenc:string"/>
          <element name="LicensePlate" nillable="true" type="soapenc:string"/>
          <element name="Make" nillable="true" type="soapenc:string"/>
          <element name="Model" nillable="true" type="soapenc:string"/>
          <element name="Vin" nillable="true" type="soapenc:string"/>
          <element name="VehicleNumber" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="ClassCode">
        <sequence>
          <element name="Code" nillable="true" type="soapenc:string"/>
          <element name="Comments" nillable="true" type="soapenc:string"/>
          <element name="Description" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="Company">
        <complexContent>
          <extension base="tns1:Contact">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="Caze" nillable="true" type="tns1:ArrayOfContact"/>
              <element maxOccurs="1" minOccurs="0" name="Employees" nillable="true" type="tns1:ArrayOfPerson"/>
              <element maxOccurs="1" minOccurs="0" name="Thirdpartyinsured" nillable="true" type="tns1:ArrayOfContact"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CompanyVendor">
        <complexContent>
          <extension base="tns1:Company">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Contact">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="AllAddresses" nillable="true" type="tns1:ArrayOfAddress"/>
          <element maxOccurs="1" minOccurs="0" name="ContactAddresses" nillable="true" type="tns1:ArrayOfContactAddress"/>
          <element maxOccurs="1" minOccurs="0" name="ContactCompany" nillable="true" type="tns1:Company"/>
          <element maxOccurs="1" minOccurs="0" name="OfficialIDs" nillable="true" type="tns1:ArrayOfOfficialID"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryAddress" nillable="true" type="tns1:Address"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryContact" nillable="true" type="tns1:Contact"/>
          <element name="BureauIDOfficialID" nillable="true" type="soapenc:string"/>
          <element name="DOLIDOfficialID" nillable="true" type="soapenc:string"/>
          <element name="DUNSOfficialID" nillable="true" type="soapenc:string"/>
          <element name="EmailAddress1" nillable="true" type="soapenc:string"/>
          <element name="EmailAddress2" nillable="true" type="soapenc:string"/>
          <element name="FEINOfficialID" nillable="true" type="soapenc:string"/>
          <element name="FaxPhone" nillable="true" type="soapenc:string"/>
          <element name="HomePhone" nillable="true" type="soapenc:string"/>
          <element name="NCCIIDOfficialID" nillable="true" type="soapenc:string"/>
          <element name="Name" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
          <element name="OrganizationType" nillable="true" type="soapenc:string"/>
          <element name="Preferred" nillable="true" type="soapenc:boolean"/>
          <element name="PreferredCurrency" nillable="true" type="soapenc:string"/>
          <element name="PrimaryLanguage" nillable="true" type="soapenc:string"/>
          <element name="PrimaryPhone" nillable="true" type="soapenc:string"/>
          <element name="PrimaryPhoneValue" nillable="true" type="soapenc:string"/>
          <element name="SSNOfficialID" nillable="true" type="soapenc:string"/>
          <element name="STAXOfficialID" nillable="true" type="soapenc:string"/>
          <element name="STUNOfficialID" nillable="true" type="soapenc:string"/>
          <element name="Score" nillable="true" type="soapenc:int"/>
          <element name="SpecialtyType" nillable="true" type="soapenc:string"/>
          <element name="TUNSOfficialID" nillable="true" type="soapenc:string"/>
          <element name="TaxID" nillable="true" type="soapenc:string"/>
          <element name="TaxStatus" nillable="true" type="soapenc:string"/>
          <element name="VendorNumber" nillable="true" type="soapenc:string"/>
          <element name="VendorType" nillable="true" type="soapenc:string"/>
          <element name="W9Received" nillable="true" type="soapenc:boolean"/>
          <element name="W9ReceivedDate" nillable="true" type="xsd:dateTime"/>
          <element name="W9ValidFrom" nillable="true" type="xsd:dateTime"/>
          <element name="W9ValidTo" nillable="true" type="xsd:dateTime"/>
          <element name="WithholdingRate" nillable="true" type="soapenc:decimal"/>
          <element name="WorkPhone" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ContactAddress">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns1:Address"/>
        </sequence>
      </complexType>
      <complexType name="CovTerm">
        <sequence>
          <element name="AggregationModel" nillable="true" type="soapenc:string"/>
          <element name="RestrictionModel" nillable="true" type="soapenc:string"/>
          <element name="Type" nillable="true" type="soapenc:string"/>
          <element name="Value" nillable="true" type="soapenc:decimal"/>
          <element name="ValueType" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="Coverage">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="CovTerms" nillable="true" type="tns1:ArrayOfCovTerm"/>
          <element name="Deductible" nillable="true" type="soapenc:decimal"/>
          <element name="EffectiveDate" nillable="true" type="xsd:dateTime"/>
          <element name="ExpirationDate" nillable="true" type="xsd:dateTime"/>
          <element name="ExposureLimit" nillable="true" type="soapenc:decimal"/>
          <element name="IncidentLimit" nillable="true" type="soapenc:decimal"/>
          <element name="LimitsIndicator" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
          <element name="Type" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="Endorsement">
        <sequence>
          <element name="Comments" nillable="true" type="soapenc:string"/>
          <element name="Description" nillable="true" type="soapenc:string"/>
          <element name="EffectiveDate" nillable="true" type="xsd:dateTime"/>
          <element name="ExpirationDate" nillable="true" type="xsd:dateTime"/>
          <element name="FormNumber" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="GeneralLiabilityRU">
        <complexContent>
          <extension base="tns1:LocationBasedRU">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InlandMarineRU">
        <complexContent>
          <extension base="tns1:LocationBasedRU">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LegalVenue">
        <complexContent>
          <extension base="tns1:Place">
            <sequence>
              <element name="VenueType" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LocationBasedRU">
        <complexContent>
          <extension base="tns1:RiskUnit">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="Building" nillable="true" type="tns1:Building"/>
              <element maxOccurs="1" minOccurs="0" name="PolicyLocation" nillable="true" type="tns1:PolicyLocation"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OfficialID">
        <sequence>
          <element name="OfficialIDInsuredAndType" nillable="true" type="soapenc:string"/>
          <element name="OfficialIDType" nillable="true" type="soapenc:string"/>
          <element name="OfficialIDValue" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="PCSearchCriteria">
        <sequence>
          <element name="AccountNumber" nillable="true" type="soapenc:string"/>
          <element name="AsOfDate" nillable="true" type="xsd:dateTime"/>
          <element name="CompanyName" nillable="true" type="soapenc:string"/>
          <element name="FirstName" nillable="true" type="soapenc:string"/>
          <element name="LastName" nillable="true" type="soapenc:string"/>
          <element name="NonRenewalCode" nillable="true" type="soapenc:string"/>
          <element name="PolicyNumber" nillable="true" type="soapenc:string"/>
          <element name="PolicyStatus" nillable="true" type="soapenc:string"/>
          <element name="ProducerCodeString" nillable="true" type="soapenc:string"/>
          <element name="ProducerString" nillable="true" type="soapenc:string"/>
          <element name="Product" nillable="true" type="soapenc:string"/>
          <element name="ProductCode" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
          <element name="TaxID" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="Person">
        <complexContent>
          <extension base="tns1:Contact">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="Employer" nillable="true" type="tns1:Company"/>
              <element maxOccurs="1" minOccurs="0" name="Guardian" nillable="true" type="tns1:Person"/>
              <element maxOccurs="1" minOccurs="0" name="Wards" nillable="true" type="tns1:ArrayOfPerson"/>
              <element name="CellPhone" nillable="true" type="soapenc:string"/>
              <element name="DateOfBirth" nillable="true" type="xsd:dateTime"/>
              <element name="FirstName" nillable="true" type="soapenc:string"/>
              <element name="FormerName" nillable="true" type="soapenc:string"/>
              <element name="Gender" nillable="true" type="soapenc:string"/>
              <element name="LastName" nillable="true" type="soapenc:string"/>
              <element name="LicenseNumber" nillable="true" type="soapenc:string"/>
              <element name="LicenseState" nillable="true" type="soapenc:string"/>
              <element name="MaritalStatus" nillable="true" type="soapenc:string"/>
              <element name="MiddleName" nillable="true" type="soapenc:string"/>
              <element name="NumDependents" nillable="true" type="soapenc:int"/>
              <element name="NumDependentsU18" nillable="true" type="soapenc:int"/>
              <element name="NumDependentsU25" nillable="true" type="soapenc:int"/>
              <element name="Occupation" nillable="true" type="soapenc:string"/>
              <element name="Prefix" nillable="true" type="soapenc:string"/>
              <element name="Suffix" nillable="true" type="soapenc:string"/>
              <element name="TaxFilingStatus" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PersonVendor">
        <complexContent>
          <extension base="tns1:Person">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Place">
        <complexContent>
          <extension base="tns1:Contact">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Policy">
        <xsd:annotation>
          <xsd:documentation>Represents a ClaimCenter Policy</xsd:documentation>
        </xsd:annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Agent" nillable="true" type="tns1:Contact"/>
          <element maxOccurs="1" minOccurs="0" name="AltContact" nillable="true" type="tns1:ArrayOfPerson"/>
          <element maxOccurs="1" minOccurs="0" name="ClassCodes" nillable="true" type="tns1:ArrayOfClassCode"/>
          <element maxOccurs="1" minOccurs="0" name="Coverages" nillable="true" type="tns1:ArrayOfPolicyCoverage"/>
          <element maxOccurs="1" minOccurs="0" name="CoveredParty" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="DoingBusinessAs" nillable="true" type="tns1:Company"/>
          <element maxOccurs="1" minOccurs="0" name="Endorsements" nillable="true" type="tns1:ArrayOfEndorsement"/>
          <element maxOccurs="1" minOccurs="0" name="ExcludedParty" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerAgent" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerCoveredParty" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerDoingBusinessAs" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerExcludedParty" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerInsured" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerPolicyHolder" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="FormerUnderwriter" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="Insured" nillable="true" type="tns1:Contact"/>
          <element maxOccurs="1" minOccurs="0" name="InsuredRep" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="MainContact" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="Other" nillable="true" type="tns1:ArrayOfContact"/>
          <element maxOccurs="1" minOccurs="0" name="PolicyHolder" nillable="true" type="tns1:Contact"/>
          <element maxOccurs="1" minOccurs="0" name="PolicyLocations" nillable="true" type="tns1:ArrayOfPolicyLocation"/>
          <element maxOccurs="1" minOccurs="0" name="RiskUnits" nillable="true" type="tns1:ArrayOfRiskUnit"/>
          <element maxOccurs="1" minOccurs="0" name="StatCodes" nillable="true" type="tns1:ArrayOfStatCode"/>
          <element maxOccurs="1" minOccurs="0" name="Underwriter" nillable="true" type="tns1:Person"/>
          <element maxOccurs="1" minOccurs="0" name="WCCarrier" nillable="true" type="tns1:ArrayOfContact"/>
          <element name="Account" nillable="true" type="soapenc:string"/>
          <element name="CancellationDate" nillable="true" type="xsd:dateTime"/>
          <element name="CoverageForm" nillable="true" type="soapenc:string"/>
          <element name="Currency" nillable="true" type="soapenc:string"/>
          <element name="EffectiveDate" nillable="true" type="xsd:dateTime"/>
          <element name="ExpirationDate" nillable="true" type="xsd:dateTime"/>
          <element name="FinancialInterests" nillable="true" type="soapenc:string"/>
          <element name="InsuredSICCode" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
          <element name="OriginalEffectiveDate" nillable="true" type="xsd:dateTime"/>
          <element name="OtherInsuranceInfo" nillable="true" type="soapenc:string"/>
          <element name="Participation" nillable="true" type="soapenc:decimal"/>
          <element name="PolicyNumber" nillable="true" type="soapenc:string"/>
          <element name="PolicyRatingPlan" nillable="true" type="soapenc:string"/>
          <element name="PolicySource" nillable="true" type="soapenc:string"/>
          <element name="PolicySuffix" nillable="true" type="soapenc:string"/>
          <element name="PolicyType" nillable="true" type="soapenc:string"/>
          <element name="ProducerCode" nillable="true" type="soapenc:string"/>
          <element name="ReportingDate" nillable="true" type="xsd:dateTime"/>
          <element name="RetroactiveDate" nillable="true" type="xsd:dateTime"/>
          <element name="Status" nillable="true" type="soapenc:string"/>
          <element name="UnderwritingCo" nillable="true" type="soapenc:string"/>
          <element name="UnderwritingGroup" nillable="true" type="soapenc:string"/>
          <element name="WCOtherStates" nillable="true" type="soapenc:string"/>
          <element name="WCStates" nillable="true" type="soapenc:string"/>
          <element name="ForeignCoverage" type="xsd:boolean"/>
          <element name="OtherInsurance" type="xsd:boolean"/>
          <element name="ReturnToWorkPrgm" type="xsd:boolean"/>
          <element name="TotalProperties" type="xsd:int"/>
          <element name="TotalVehicles" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="PolicyCoverage">
        <complexContent>
          <extension base="tns1:Coverage">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PolicyLocation">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns1:Address"/>
          <element maxOccurs="1" minOccurs="0" name="Buildings" nillable="true" type="tns1:ArrayOfBuilding"/>
          <element maxOccurs="1" minOccurs="0" name="HighValueItems" nillable="true" type="tns1:ArrayOfPropertyItem"/>
          <element maxOccurs="1" minOccurs="0" name="Lienholders" nillable="true" type="tns1:ArrayOfPropertyOwner"/>
          <element name="LocationNumber" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
          <element name="PrimaryLocation" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <complexType name="PropertyCoverage">
        <complexContent>
          <extension base="tns1:RUCoverage">
            <sequence>
              <element name="Coinsurance" nillable="true" type="soapenc:decimal"/>
              <element name="CoverageBasis" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PropertyItem">
        <sequence>
          <element name="AppraisedValue" nillable="true" type="soapenc:decimal"/>
          <element name="Description" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="PropertyOwner">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Lienholder" nillable="true" type="tns1:Contact"/>
          <element name="OwnerType" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="PropertyRU">
        <complexContent>
          <extension base="tns1:LocationBasedRU">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RUCoverage">
        <complexContent>
          <extension base="tns1:Coverage">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RiskUnit">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ClassCode" nillable="true" type="tns1:ClassCode"/>
          <element maxOccurs="1" minOccurs="0" name="Coverages" nillable="true" type="tns1:ArrayOfRUCoverage"/>
          <element name="RUNumber" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="StatCode">
        <sequence>
          <element name="BuildingNumber" nillable="true" type="soapenc:string"/>
          <element name="ClassCode" nillable="true" type="soapenc:string"/>
          <element name="InsuranceLine" nillable="true" type="soapenc:string"/>
          <element name="InsuranceSubLine" nillable="true" type="soapenc:string"/>
          <element name="MajorPeril" nillable="true" type="soapenc:string"/>
          <element name="Notes" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
          <element name="VehicleNumber" nillable="true" type="soapenc:string"/>
          <element name="LineNumber" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="Vehicle">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Lienholders" nillable="true" type="tns1:ArrayOfVehicleOwner"/>
          <element name="BoatType" nillable="true" type="soapenc:string"/>
          <element name="Color" nillable="true" type="soapenc:string"/>
          <element name="LicensePlate" nillable="true" type="soapenc:string"/>
          <element name="LoanMonthlyPayment" nillable="true" type="soapenc:decimal"/>
          <element name="LoanPayoffAmount" nillable="true" type="soapenc:decimal"/>
          <element name="Make" nillable="true" type="soapenc:string"/>
          <element name="Manufacturer" nillable="true" type="soapenc:string"/>
          <element name="Model" nillable="true" type="soapenc:string"/>
          <element name="OffRoadStyle" nillable="true" type="soapenc:string"/>
          <element name="SerialNumber" nillable="true" type="soapenc:string"/>
          <element name="State" nillable="true" type="soapenc:string"/>
          <element name="Style" nillable="true" type="soapenc:string"/>
          <element name="Vin" nillable="true" type="soapenc:string"/>
          <element name="Loan" type="xsd:boolean"/>
          <element name="LoanMonthsRemaining" type="xsd:int"/>
          <element name="Year" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="VehicleCoverage">
        <complexContent>
          <extension base="tns1:RUCoverage">
            <sequence>
              <element name="ClaimAggLimit" nillable="true" type="soapenc:decimal"/>
              <element name="NonmedAggLimit" nillable="true" type="soapenc:decimal"/>
              <element name="PersonAggLimit" nillable="true" type="soapenc:decimal"/>
              <element name="ReplaceAggLimit" nillable="true" type="soapenc:decimal"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="VehicleOwner">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Lienholder" nillable="true" type="tns1:Contact"/>
          <element name="OwnerType" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="VehicleRU">
        <complexContent>
          <extension base="tns1:RiskUnit">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="Vehicle" nillable="true" type="tns1:Vehicle"/>
              <element maxOccurs="1" minOccurs="0" name="VehicleLocation" nillable="true" type="tns1:PolicyLocation"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WCCovEmpRU">
        <complexContent>
          <extension base="tns1:LocationBasedRU">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <import namespace="http://fault.webservices.pc.guidewire.com/"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
    </schema>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://fault.webservices.pc.guidewire.com/">
      <complexType name="AlreadyExecutedException">
        <complexContent>
          <extension base="tns2:SOAPSenderException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BadIdentifierException">
        <xsd:annotation>
          <xsd:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect).</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:DataConversionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BatchProcessException">
        <xsd:annotation>
          <xsd:documentation>SOAP Exception specific to batch process operations</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPServerException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DataConversionException">
        <xsd:annotation>
          <xsd:documentation>Thrown by many APIs when they encounter a problem translating a SOAP data object into
an internal system object.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPSenderException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DuplicateKeyException">
        <xsd:annotation>
          <xsd:documentation>Throws if a duplicate data exception is detected in the database. I.e. a unique index violation.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:DataConversionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="EntityStateException">
        <xsd:annotation>
          <xsd:documentation>Thrown when an attempt is made to manipulate an object that is in a state
that prevents the operation from being performed. An example is trying to
modify a Claim that is marked as closed.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPSenderException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FieldConversionException">
        <xsd:annotation>
          <xsd:documentation>Thrown when a data type cannot be converted into the native data type.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:DataConversionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FieldFormatException">
        <xsd:annotation>
          <xsd:documentation>Thrown when the input type does not match the format specified in the metadata. I.e. a string is too long.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:DataConversionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LoginException">
        <xsd:annotation>
          <xsd:documentation>Class of exceptions thrown when a user tries to log in and an authentication failure occurs.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:PermissionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PermissionException">
        <xsd:annotation>
          <xsd:documentation>Thrown when the authenticated SOAP user does not have permission to
perform the requested operation</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPSenderException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredFieldException">
        <xsd:annotation>
          <xsd:documentation>Thrown when required data is missing from a bean.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:DataConversionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SOAPException">
        <xsd:annotation>
          <xsd:documentation>A generic SOAP exception.</xsd:documentation>
        </xsd:annotation>
        <sequence>
          <element name="Message" nillable="true" type="soapenc:string">
            <xsd:annotation>
              <xsd:documentation>The message associated with this exception</xsd:documentation>
            </xsd:annotation>
          </element>
          <element name="OtherMessages" nillable="true" type="soapenc:string">
            <xsd:annotation>
              <xsd:documentation>Other messages attached to this exception. This message may contain information
related to other exceptions that occurred during a SOAP call, but not directly
associated with this particular exception.</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="SOAPSenderException">
        <xsd:annotation>
          <xsd:documentation>SOAPSenderException is the base class for all exceptions that resulted from
a sender error. This usually means that required data was not properly encoded
or was absent. Senders should not send the message again unless some steps have
been taken to make the encoded data valid.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SOAPServerException">
        <xsd:annotation>
          <xsd:documentation>SOAPServerException is the base class for all exceptions that resulted from
a server error. This is something of a catch-all exception type insofar as
some things which might in fact be considered SOAPSenderExceptions are reported
as SOAPServerExceptions. Perhaps a rule failed or something else. Generally it
indicates a problem in the server that is likely retryable at some future time.
The database being down, an unavailable plugin, etc would fall into this catagory.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServerStateException">
        <xsd:annotation>
          <xsd:documentation>ServerStateException is thrown when a request is made at a time the
server is in a state that disallows the request. An example is if
an attempt is made to add a claim and the server is in maintenance
mode.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:SOAPServerException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnknownTypeKeyException">
        <xsd:annotation>
          <xsd:documentation>Thrown when a typekey value isn't available on the server. This exception can only
happen if the SOAP WSDL that is being used on the remote side is invalid.</xsd:documentation>
        </xsd:annotation>
        <complexContent>
          <extension base="tns2:DataConversionException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <import namespace="http://entity.webservices.pc.guidewire.com/"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
    </schema>
  </wsdl:types>
</wsdl:definitions>
