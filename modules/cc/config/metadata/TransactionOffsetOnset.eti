<?xml version="1.0"?>
<entity
  xmlns="http://guidewire.com/datamodel"
  desc="Represents the relationship between a transaction and its offset and onset."
  entity="TransactionOffsetOnset"
  exportable="true"
  javaClass="com.guidewire.cc.domain.financials.TransactionOffsetOnset"
  overwrittenInStagingTable="false"
  platform="false"
  table="transactionoffsetonset"
  type="joinarray">
  <implementsEntity
    name="Extractable"/>
  <fulldescription><![CDATA[A TransactionOffsetOnset relates a transaction to its offsetting and onsetting
    transactions (if any).  It contains three links, one to the original transaction, one to its offsetting
    transaction and one to the new onset transaction.  A TransactionOffsetOnset is created whenever a user
    recodes or transfers a payment in ClaimCenter, and also when a user voids/stops a payment, though in this
    latter case the onset transaction link is null as long as the void/stop is successful.  In the case of a
    recode or transfer the Offsetting transaction is just a negative copy of the original payment, and the
    onset payment has the same line items as the original payment but a different ReserveLine coding.
    
    ]]></fulldescription>
  <foreignkey
    columnName="TransactionID"
    desc="The transaction being offset or onset."
    exportable="false"
    fkentity="Transaction"
    importableagainstexistingobject="false"
    name="Transaction"
    nullok="false"/>
  <foreignkey
    columnName="OffsetID"
    desc="The offset transaction, to negate the original transaction."
    exportable="true"
    fkentity="Transaction"
    importableagainstexistingobject="false"
    name="Offset"
    nullok="false"
    triggersValidation="true"/>
  <foreignkey
    columnName="OnsetID"
    desc="The onset (recode or transfer) transaction, same as the original but on the new ReserveLine/Claim."
    exportable="true"
    fkentity="Transaction"
    importableagainstexistingobject="false"
    name="Onset"
    nullok="true"
    triggersValidation="true"/>
  <column
    desc="PublicID of the onset, used when the FK to the onset has been severed for archiving."
    name="OnsetPublicID"
    nullok="true"
    setterScriptability="hidden"
    type="publicid"/>
  <!-- The transaction, offset, onset must be different transactions. -->
  <index
    name="transactionoffseu1"
    unique="true">
    <indexcol
      keyposition="1"
      name="TransactionID"/>
    <indexcol
      keyposition="2"
      name="OffsetID"/>
    <indexcol
      keyposition="3"
      name="OnsetID"/>
  </index>
  <index
    desc="A transaction can have at most one offset/onset pair."
    name="transactionoffseu2"
    unique="true">
    <indexcol
      keyposition="1"
      name="TransactionID"/>
  </index>
  <index
    desc="A transaction can be the offset transaction to only one transaction."
    name="transactionoffseu3"
    unique="true">
    <indexcol
      keyposition="1"
      name="OffsetID"/>
  </index>
  <!-- Ensures that if more than one offset has no onset (i.e., the OnsetID is null) then they must be different offsets -->
  <index
    name="transactionoffseu4"
    unique="true">
    <indexcol
      keyposition="1"
      name="OffsetID"/>
    <indexcol
      keyposition="2"
      name="OnsetID"/>
  </index>
  <index
    desc="Restoring archived claims requires searching for TransactionOffsetOnsets with matching OnsetPublicIDs"
    name="transactionoffseu5"
    unique="true">
    <indexcol
      keyposition="1"
      name="OnsetPublicID"/>
  </index>
</entity>
