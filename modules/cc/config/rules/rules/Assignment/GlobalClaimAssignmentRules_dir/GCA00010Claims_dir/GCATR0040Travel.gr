package rules.Assignment.GlobalClaimAssignmentRules_dir.GCA00010Claims_dir

@gw.rules.RuleName("GCATR0040 - Travel")
internal class GCATR0040Travel {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*/claim.LossType == "TRAV"/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/uses gw.api.assignment.AssignmentEngineUtil
uses gw.api.util.StringUtil

var losstype = Claim.LossType
var segment = Claim.Segment
var result = libraries.Claimassignment.getGroupTypeBasedOnClaimSegment(losstype, segment)
var primarygrouptype = result[0]
var secondarygrouptype = result[1]

if (Claim.LossLocation <> null)
{
  if (Claim.CurrentAssignment.assignGroupByLocation( primarygrouptype, Claim.LossLocation, false, AssignmentEngineUtil.getDefaultGroupFromExecutionSession()))
  {
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.Global.Claim(StringUtil.substring(actions.getRule().DisplayName, 0, 8)))
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.AssignedGroupIs(Claim.AssignedGroup))
    actions.exit()
  }
  if (Claim.CurrentAssignment.assignGroupByLocation( secondarygrouptype, Claim.LossLocation, false, AssignmentEngineUtil.getDefaultGroupFromExecutionSession() ))
  {
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.Global.Claim(StringUtil.substring(actions.getRule().DisplayName, 0, 8)))
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.AssignedGroupIs(Claim.AssignedGroup))
    actions.exit()
  }
}
if (Claim.Insured.PrimaryAddress <> null) 
{
  if (Claim.CurrentAssignment.assignGroupByLocation( primarygrouptype, Claim.Insured.PrimaryAddress, false, AssignmentEngineUtil.getDefaultGroupFromExecutionSession() )) 
  {
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.Global.Claim(StringUtil.substring(actions.getRule().DisplayName, 0, 8)))
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.AssignedGroupIs(Claim.AssignedGroup))
    actions.exit()
  }
  if (Claim.CurrentAssignment.assignGroupByLocation( secondarygrouptype, Claim.Insured.PrimaryAddress, false, AssignmentEngineUtil.getDefaultGroupFromExecutionSession() )) 
  {
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.Global.Claim(StringUtil.substring(actions.getRule().DisplayName, 0, 8)))
    gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.AssignedGroupIs(Claim.AssignedGroup))
    actions.exit()
  }
}

//If the loss location is isn't one of the area covered by any travel group, which is common for travel claims,
//assign the claim to the group to which the claim creator belongs to.
//Since the claim creator can belong to multiple groups, assign the claim to the first group.
var allGroups = Claim.CreateUser.AllGroups
Claim.CurrentAssignment.assignGroup( allGroups == null ? null : allGroups.first() as Group )
gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.Global.Claim(StringUtil.substring(actions.getRule().DisplayName, 0, 8)))
gw.api.util.Logger.logDebug( displaykey.Rules.Assignment.AssignedGroupIs(Claim.AssignedGroup))
actions.exit()/*end00rule*/
  }
}
