package rules.Segmentation.ClaimSegmentationRules_dir.CSG05000Travel_dir

@gw.rules.RuleName("CSG05100 - Travel")
internal class CSG05100Travel {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*/true/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/var setHigh = Claim.Exposures.firstWhere( \ e -> e.Segment == ClaimSegment.TC_TRAVEL_HIGH )
var setMid = Claim.Exposures.firstWhere( \ e -> e.Segment == ClaimSegment.TC_TRAVEL_MID )
var setLow = Claim.Exposures.firstWhere( \ e -> e.Segment == ClaimSegment.TC_TRAVEL_LOW )

if(setHigh != null)
{
  Claim.Segment = ClaimSegment.TC_TRAVEL_HIGH
  gw.api.util.Logger.logDebug( displaykey.Rules.Segmentation.Claim(gw.api.util.StringUtil.substring(actions.getRule().DisplayName,0, 8)))
  gw.api.util.Logger.logDebug( displaykey.Rules.Segmentation.Claim.SegmentedTo(Claim.Segment))
  actions.exitToNext();			
}

else if(setMid != null)
{
  Claim.Segment = ClaimSegment.TC_TRAVEL_MID
  gw.api.util.Logger.logDebug( displaykey.Rules.Segmentation.Claim(gw.api.util.StringUtil.substring(actions.getRule().DisplayName,0, 8)))
  gw.api.util.Logger.logDebug( displaykey.Rules.Segmentation.Claim.SegmentedTo(Claim.Segment))
  actions.exitToNext();			
}

else if(setLow != null)
{
  Claim.Segment = ClaimSegment.TC_TRAVEL_LOW
  gw.api.util.Logger.logDebug( displaykey.Rules.Segmentation.Claim(gw.api.util.StringUtil.substring(actions.getRule().DisplayName,0, 8)))
  gw.api.util.Logger.logDebug( displaykey.Rules.Segmentation.Claim.SegmentedTo(Claim.Segment))
  actions.exitToNext();			
}/*end00rule*/
  }
}
