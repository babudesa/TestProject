package gw.api.address
uses gw.entity.IEntityPropertyInfo

/**
 * CCAddressOwner object for the Claim entity.
 * See AddressOwner and CCAddressOwner for details of what an
 * AddressOwner object does.
 */
@Export
class ClaimAddressOwner extends ClaimRelatedAddressOwner {

  final static var OMITTED_ADDRESSFIELDS
          = {"Country", "GeocodeStatus"}.map(\ s -> getAddressProperty(entity.Address, s))
   
  construct(inClaim : Claim) {
    super(getAddressProperty(entity.Claim, "LossLocation"), inClaim)
  }

  override property get Owner() : KeyableBean {
    return RelatedClaim
  }

  /**
   * Should we preselect the "new" address, if possible?  We typically do this
   * whenever we're creating a new claim (i.e. if state is draft). This is true
   * even for homeowner's, where we handle the common case of the primary
   * dwelling being the loss address via a special custom control.
   */
  override property get PreselectNewAddress() : boolean {
    return Claim.State == "draft"
  }

  /**
   * Create a new address. This method does not always allocate a brand new
   * address. It first tries to determine if a loss location has already been
   * created but with empty fields. If so, we return the empty address as the new
   * asddress. Otherwise it calls the super class method.
   */
  override function getOrCreateNewAddress() : Address {
    if(Claim.State == "draft") {
      if(Claim.LossLocation != null) {
        var isEmpty = true
        for (prop in entity.Address.Type.TypeInfo.Properties) {
          if (prop typeis IEntityPropertyInfo
              and (prop as com.guidewire.commons.entity.type2.IEntityPropInfoInternal).ColumnInDMFile
              and not (prop as com.guidewire.commons.entity.type2.IEntityPropInfoInternal).Autogenerated
              and !OMITTED_ADDRESSFIELDS.contains(prop)) {
                if(Claim.LossLocation.getOriginalValue(prop.Name) != null) {
                  isEmpty = false
                }
              }
        }
        if(isEmpty) {
          return Claim.LossLocation
        }
      }
    }
    return super.getOrCreateNewAddress()
  } 
}
