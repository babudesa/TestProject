package rules.EventMessage.EventFired_dir.Destination12AutoGeneratedDocuments_dir

@gw.rules.RuleName("Create Auto Medicare Letter")
internal class CreateAutoMedicareLetter {
  static function doCondition(messageContext : entity.MessageContext) : boolean {
    return /*start00rule*/// Generates Auto Medicare Letters for non-incident only, WC and EL claims 
messageContext.Root typeis Claim &&
!gaic.conversion.util.ConversionStatusChecker.isCurrentlyConverting(messageContext.Root.LoadCommandID) &&
messageContext.Root.AutoMedicareFlagExt != true &&
messageContext.Root.IncidentReport == false &&
util.WCHelper.isWCorELLossType(messageContext.Root) &&
!messageContext.Root.isConvertedExt() && 
messageContext.Root.AssignmentStatus == AssignmentStatus.TC_ASSIGNED &&
(messageContext.Root.ExternalHandlingExt == null || 
(messageContext.Root.ExternalHandlingExt != null && messageContext.Root.ExternalHandlingExt.MedLetterExt)) &&
(!exists(
doc in messageContext.Root.Documents where (doc.FormIDExt=="SC0002" || doc.FormIDExt=="ENT0041")
&& (doc.Name!=null && doc.Name.containsIgnoreCase("Auto Medicare Letter"))
//doc.ex_SubType == "Correspondence" and 
//(doc.Description == "Automated Medicare Letter" || doc.Description == "Auto Medicare Letter")
)) &&
messageContext.Root.claimant.PrimaryAddress != null &&
util.admin.ExternalUserAdminUtil.createLetters(messageContext.Root)/*end00rule*/
  }

  static function doAction(messageContext : entity.MessageContext, actions : gw.rules.Action) {
/*start00rule*/try{
  var claim = (messageContext.Root as Claim)

  if (!claim.Policy.Verified and util.document.AutoMedLetter.autoMedLetterController(claim.LossType)){
    if(!exists(var note in claim.Notes where note.Subject=="Medicare Letter Not Generated")){
      var note : Note
      note = claim.addNote ( "general", "This claim is on an unverified policy; no Automated Medicare Letter was generated.")
      note.Subject = "Medicare Letter Not Generated"
      note.Author = util.custom_Ext.finders.getUserOb("batchsu")
      note.addEvent("NoteAdded")
    }
  } 
  else {
    if (util.document.AutoMedLetter.autoMedLetterController(claim.LossType) && util.document.AutoMedLetter.createdAfterEffDate(claim)){
      if (!claim.checkDisconnectedFeatures() && !claim.Policy.isPolicyInRefresh(1)){
        var msg = messageContext.createMessage(messageContext.toString())
        // setting description, so the AutoDocsGeneratorPlugin can differentiate which document(s) should be created
        msg.Description = "AutoMedicare"
        // setting flag, so no other Auto Medicare Letters will be generated
        claim.AutoMedicareFlagExt = true
      }
    }
  }
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError(messageContext, actions.getRule() as java.lang.String, e, null )
}/*end00rule*/
  }
}
