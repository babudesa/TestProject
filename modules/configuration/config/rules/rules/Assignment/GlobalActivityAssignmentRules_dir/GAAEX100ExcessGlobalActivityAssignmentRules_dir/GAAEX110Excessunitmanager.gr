package rules.Assignment.GlobalActivityAssignmentRules_dir.GAAEX100ExcessGlobalActivityAssignmentRules_dir

@gw.rules.RuleDisabled
@gw.rules.RuleName("GAAEX110-Excess unit manager")
internal class GAAEX110Excessunitmanager {
  static function doCondition(activity : entity.Activity) : boolean {
    return /*start00rule*/activity.ActivityPattern.Code=="manager_reserve_review"/*end00rule*/
  }

  static function doAction(activity : entity.Activity, actions : gw.rules.Action) {
/*start00rule*/var user = util.GlobalParameters.ParameterFinder.getUserParameter( "unitmanager", activity.Claim.LossType )
var group = util.GlobalParameters.ParameterFinder.getGroupParameter( "excessliability", activity.Claim.LossType )

try{
  activity.CurrentAssignment.assign( group, user )
  actions.exit()
}catch(aex:gw.rules.AbortExecutionException){
  throw aex
}catch(e){
  var body = "stack trace: " + e.StackTraceAsString
  var emailAddy = java.lang.System.getProperty( "gw.cc.env" ) == "prod" 
                   ? ScriptParameters.ClaimCenterProdEmail
                   : ScriptParameters.ClaimCenterDevEmail
  
  gw.api.util.Logger.logError(body)
  
  util.Email.sendMail(emailAddy, 
    "An error has occurred in rule " + actions.getRule().DisplayName 
    + " - ENV: " + gw.api.system.server.ServerUtil.getEnv(), body)
}

/*end00rule*/
  }
}
