package rules.Assignment.GlobalActivityAssignmentRules_dir.GAAXX100AllBUsGlobalActivityAssignmentRules_dir

@gw.rules.RuleName("GAAXX110 - Bulk Recoveries")
internal class GAAXX110BulkRecoveries {
  static function doCondition(activity : entity.Activity) : boolean {
    return /*start00rule*///Stephanie Przygocki
//EM 14.1
//4/1/09

activity.ActivityPattern==util.custom_Ext.finders.findActivityPattern("bulk_recov_not_comp_ext")/*end00rule*/
  }

  static function doAction(activity : entity.Activity, actions : gw.rules.Action) {
/*start00rule*///finds the bulk recovery associated with the cash ticket the activity was created from
//DO NOT CHANGE THE SUBSTRING INFORMATION WITHOUT CHECKING THE OTHER RULES
//CEXX1E00 RULESET
var cashTicketNum = activity.Description.substring( 41, 50 )
var query = find(x in BulkRecoveryExt where x.CashReceiptNumberExt==cashTicketNum).getAtMostOneRow()

//Grabs the supervisor and supervisor's group of the person who created the recovery
try {
  var supervisor = (query.CreateUser.AllGroups.first() as Group).Supervisor
  var group = (query.CreateUser.AllGroups.first() as Group).Supervisor.AllGroups.first() as Group
  //If the person who created the cash ticket is a supervisor, it grabs their supervisor
  if(supervisor == query.CreateUser and (supervisor.AllGroups.first() as Group).Parent!=null){
    supervisor = (supervisor.AllGroups.first() as Group).Parent.Supervisor
    group = (supervisor.AllGroups.first() as Group).Parent.Supervisor.AllGroups.first() as Group
  }
  activity.CurrentAssignment.assign(group, supervisor)
} catch (e){
  gw.api.util.Logger.logError("Unable to create activity: either supervisor or group was null", e)
}
actions.exit()/*end00rule*/
  }
}
