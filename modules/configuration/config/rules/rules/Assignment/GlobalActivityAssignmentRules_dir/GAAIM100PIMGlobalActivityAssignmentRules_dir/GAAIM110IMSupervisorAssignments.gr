package rules.Assignment.GlobalActivityAssignmentRules_dir.GAAIM100PIMGlobalActivityAssignmentRules_dir

@gw.rules.RuleName("GAAIM110 - IM Supervisor Assignments")
internal class GAAIM110IMSupervisorAssignments {
  static function doCondition(activity : entity.Activity) : boolean {
    return /*start00rule*//*Author: erawe
Date:7/16/10
*/
activity.ActivityPattern.Code=="30_day_reserve_man" ||
activity.ActivityPattern.Code=="review_clm_status_man" ||
activity.ActivityPattern.Code=="ab_no_activity_manager"/*end00rule*/
  }

  static function doAction(activity : entity.Activity, actions : gw.rules.Action) {
/*start00rule*/try{
var unitManager:User = util.GlobalParameters.ParameterFinder.getUserParameter( "unitmanager", activity.Claim.LossType);
var unitManagerGroup:Group = unitManager.AllGroups.first() as Group;

if(activity.Claim.AssignedUser != activity.Claim.AssignedGroup.Supervisor){
  activity.CurrentAssignment.assign(activity.Claim.AssignedGroup, activity.Claim.AssignedGroup.Supervisor);
  actions.exit()
  }else if (activity.Claim.AssignedUser == activity.Claim.AssignedGroup.Supervisor) {
    activity.CurrentAssignment.assign(activity.Claim.AssignedGroup,activity.Claim.AssignedGroup.Parent.Supervisor)
  }else{
    activity.CurrentAssignment.assign( unitManagerGroup, unitManager );
    actions.exit()
}
}catch(aex:gw.rules.AbortExecutionException){
  throw aex; 
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( activity, actions.getRule().getDisplayName(), e, "" ) 
}/*end00rule*/
  }
}
