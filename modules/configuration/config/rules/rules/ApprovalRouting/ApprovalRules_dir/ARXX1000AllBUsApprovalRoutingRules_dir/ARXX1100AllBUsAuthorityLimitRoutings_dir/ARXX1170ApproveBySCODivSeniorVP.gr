package rules.ApprovalRouting.ApprovalRules_dir.ARXX1000AllBUsApprovalRoutingRules_dir.ARXX1100AllBUsAuthorityLimitRoutings_dir

@gw.rules.RuleName("ARXX1170 - Approve By SCO Div.Senior VP")
internal class ARXX1170ApproveBySCODivSeniorVP {
  static function doCondition(transactionSet : entity.TransactionSet) : boolean {
    return /*start00rule*/(util.user.SCOHelper.isAnSCO(transactionSet.LastApprovingUser) or
transactionSet.getLastApprovingGroup()==util.GlobalParameters.ParameterFinder.getGroupParameter( "gaicclaims", null)) and
transactionSet.LastApprovingUser != util.user.SCOHelper.CorpClaimsTwoUser and 
transactionSet.LastApprovingUser != util.user.SCOHelper.CorpClaimsOneUser/*end00rule*/
  }

  static function doAction(transactionSet : entity.TransactionSet, actions : gw.rules.Action) {
/*start00rule*/try{
  var user:User = util.user.SCOHelper.CorpClaimsTwoUser
  var group:Group = util.GlobalParameters.ParameterFinder.getGroupParameter( "gaicclaims", null );
  var approvalHistory = transactionSet.BeanVersion != null ? util.approvals.ApprovalHelper.getApprovalHistory(transactionSet) : null
  var currentApprovalAssignedToUser = transactionSet.BeanVersion != null ? util.approvals.ApprovalHelper.getLastAssignedToUserInHistory(approvalHistory) : null
  
  //If the activity is already assigned to the CorpClaimsOneUser then do not reassign. 
  if(currentApprovalAssignedToUser == util.user.SCOHelper.CorpClaimsOneUser) {
    var nextApprovingUser = currentApprovalAssignedToUser
    var nextApprovingUsersGroup  = util.user.GroupsHelper.getUsersGroup(nextApprovingUser)
    transactionSet.setApprovingUser(nextApprovingUser, nextApprovingUsersGroup)
    actions.exit()
  //else continue normal assignment
  }else if(transactionSet.LastApprovingUser != user){
    transactionSet.setApprovingUser( user, group );
    gw.api.util.Logger.logInfo( actions.getRule().DisplayName );
    actions.exit();
  }
}catch(aex:gw.rules.AbortExecutionException){
  throw aex; 
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( transactionSet, actions.getRule().toString(), e, null );
}/*end00rule*/
  }
}
