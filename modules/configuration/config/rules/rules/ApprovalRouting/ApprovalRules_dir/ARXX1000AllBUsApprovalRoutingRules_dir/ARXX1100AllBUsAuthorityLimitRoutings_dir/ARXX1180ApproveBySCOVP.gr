package rules.ApprovalRouting.ApprovalRules_dir.ARXX1000AllBUsApprovalRoutingRules_dir.ARXX1100AllBUsAuthorityLimitRoutings_dir

@gw.rules.RuleName("ARXX1180 - Approve By SCO VP")
internal class ARXX1180ApproveBySCOVP {
  static function doCondition(transactionSet : entity.TransactionSet) : boolean {
    return /*start00rule*/transactionSet.LastApprovingUser == util.user.SCOHelper.CorpClaimsTwoUser or
transactionSet.getLastApprovingGroup()==util.GlobalParameters.ParameterFinder.getGroupParameter( "gaicclaims", null )/*end00rule*/
  }

  static function doAction(transactionSet : entity.TransactionSet, actions : gw.rules.Action) {
/*start00rule*/try{
  var user:User = util.user.SCOHelper.CorpClaimsOneUser
  var group:Group = util.GlobalParameters.ParameterFinder.getGroupParameter( "gaicclaims", null );

  transactionSet.setApprovingUser( user, group )  
  gw.api.util.Logger.logInfo( actions.getRule().DisplayName );
  actions.exit(); 

}catch(aex:gw.rules.AbortExecutionException){
  throw aex; 
}catch(e){
  
  util.ErrorHandling.GAICErrorHandling.logError( transactionSet, actions.getRule().toString(), e, null );
}/*end00rule*/
  }
}
