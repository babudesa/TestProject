package rules.Exception.ClaimExceptionRules_dir.CEXX1000AExclusionfilters_dir.CEEN1000ENVClaimExceptionRules_dir.CEEN1100RULESTHATCREATEACTIVITES_dir

@gw.rules.RuleDisabled
@gw.rules.RuleName("CEEN1110 - 30 Day Reserve Needed")
internal class CEEN111030DayReserveNeeded {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*/(claim.LevelOfReserveExt==null && claim.ReserveLines.length==0) and
((!exists(act in claim.Activities where act.ActivityPattern.Code=="30_day_reserve_adj")))
and claim.State != "closed"

// rule moved to Activity Generator Batch Rules/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/var ap1 = util.custom_Ext.finders.findActivityPattern( "30_day_reserve_adj" )
var ap1desc = "Initial Reserve Review"
try{
  if(claim.Exposures.length==0){
    if(gw.api.util.DateUtil.currentDate() > gw.api.util.DateUtil.addDays( claim.CreateTime, 23 ))
     {  
       claim.createActivity(null, ap1, ap1desc , "File Must Be Reserved at 30 Days.",null, null, null , null)
      }
  }
  else{
     for(exp in claim.Exposures){
      if((exp.ReserveLines.getCount()==0) and (!exists(act in claim.Activities where act.ActivityPattern.Code=="30_day_reserve_adj"))){ 
              if(gw.api.util.DateUtil.currentDate() > gw.api.util.DateUtil.addDays( claim.CreateTime, 23 ) ){
          claim.createActivity(null, ap1, ap1desc, "File Must Be Reserved at 30 Days." , null, null, null, null)}
        }
      }
    }
  }
catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( claim, actions.getRule().DisplayName, e, "" )
}/*end00rule*/
  }
}
