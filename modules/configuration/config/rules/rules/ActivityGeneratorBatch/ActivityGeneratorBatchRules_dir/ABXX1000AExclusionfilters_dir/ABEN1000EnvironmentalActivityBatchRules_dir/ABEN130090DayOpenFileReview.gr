package rules.ActivityGeneratorBatch.ActivityGeneratorBatchRules_dir.ABXX1000AExclusionfilters_dir.ABEN1000EnvironmentalActivityBatchRules_dir

@gw.rules.RuleName("ABEN1300 - 90 Day Open File Review")
internal class ABEN130090DayOpenFileReview {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*/!exists(act in claim.Activities where act.ActivityPattern.Code=="3_month_reserve")
&& gw.api.util.DateUtil.currentDate() > gw.api.util.DateUtil.addDays(claim.CreateTime, 90)/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/var latestUpdate:DateTime;
try{
    //create the activity
    //var res = gw.api.util.StringUtil.formatNumber(gw.api.financials.FinancialsCalculationUtil.getOpenReserves().getAmount(claim), "$#,##0.00")
    var ap = util.custom_Ext.finders.findActivityPattern( "3_month_reserve" )
    claim.createActivity(null, ap, "90 Day open file review","Open file must be reviewed at 90 Days.", 
              null, null, gw.api.util.DateUtil.addDays( gw.api.util.DateUtil.currentDate(), -14 ) , null)
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError(claim, actions.getRule().DisplayName, e, "")
}/*end00rule*/
  }
}
