package rules.ActivityGeneratorBatch.ActivityGeneratorBatchRules_dir.ABXX1000AExclusionfilters_dir.ABEN1000EnvironmentalActivityBatchRules_dir

@gw.rules.RuleName("ABEN1400 - Verify Acknowledge Letter")
internal class ABEN1400VerifyAcknowledgeLetter {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*/!exists(act in claim.Activities where act.ActivityPattern.Code=="acknowledge_letter") 
&& !exists(document in claim.Documents where document.ex_Type.toLowerCase()==("correspondence") 
    && document.ex_SubType.toLowerCase()=="claim acknowledgement")
&& gw.api.util.DateUtil.currentDate() > gw.api.util.DateUtil.addDays(claim.CreateTime, 10)/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/try{
  var ap = util.custom_Ext.finders.findActivityPattern("acknowledge_letter")
  claim.createActivity(null, ap, "Acknowledgement Letter must be sent", "An Acknowledgement Letter must be sent within 10 days of claim opening.", 
          null, null, null, null)
}catch(e){
    util.ErrorHandling.GAICErrorHandling.logError( claim, actions.getRule().DisplayName, e, "" )
}
//claim.createActivity(null, nn, null, "Claim has been open 10 days. Please enter note.", null, null, null, null)
//replacing claim.createActivityFromPattern(null, ap) due to specific wording desired /*end00rule*/
  }
}
