package rules.Preupdate.ActivityPreupdate_dir.APUXX1000AllBUsActivityPreUpdateRules_dir

@gw.rules.RuleName("APUXX1500 - Notify SCO of Approval Activity")
internal class APUXX1500NotifySCOofApprovalActivity {
  static function doCondition(activity : entity.Activity) : boolean {
    return /*start00rule*//*Defect # 5235 - kepage 5/2/2012 - Moved rule from activity post-setup
* to activity pre-update. Original rule in place was in a rule set that was 
* being called before the check number was generated
* 
*/
User.util.CurrentUser!= activity.AssignedUser and  
activity.AssignedGroup==util.GlobalParameters.ParameterFinder.getGroupParameter( "gaicclaims", activity.Claim.LossType )and
(activity.ActivityPattern == util.custom_Ext.finders.findActivityPattern("approve_payment")  and activity.Status!="complete" or
activity.ActivityPattern == util.custom_Ext.finders.findActivityPattern("approve_reserve_change")) and activity.Status!="complete"
/*end00rule*/
  }

  static function doAction(activity : entity.Activity, actions : gw.rules.Action) {
/*start00rule*///Send e-mail notification to that SCO user
var environmentInformation : String = util.custom_Ext.finders.getEnvironment();
var body = templates.email.ApprovalActivity.renderToString(activity)

if(java.lang.System.getProperty( "gw.cc.env" ) == "prod"){
  //Send e-mail to that SCO user
  gw.api.email.EmailUtil.sendEmailWithBody(null, 
        activity.AssignedUser.Contact.EmailAddress1, activity.AssignedUser.DisplayName, 
        "ClaimCenterSupport@gaig.com", "ClaimCenter Notification", 
        "Approval Activity Notification", body)
  gw.api.util.Logger.logInfo(actions.getRule().DisplayName);
}
else{
  //Send e-mail to that SCO user
  gw.api.email.EmailUtil.sendEmailWithBody(null, 
        ScriptParameters.ClaimCenterDevEmail, activity.AssignedUser.DisplayName, 
        "ClaimCenterSupport@gaig.com", environmentInformation, 
        "Approval Activity Notification", body)
  gw.api.util.Logger.logInfo(actions.getRule().DisplayName);
}/*end00rule*/
  }
}
