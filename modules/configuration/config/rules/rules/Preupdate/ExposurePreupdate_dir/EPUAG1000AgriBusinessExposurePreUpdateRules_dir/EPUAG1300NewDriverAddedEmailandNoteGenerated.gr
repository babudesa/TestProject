package rules.Preupdate.ExposurePreupdate_dir.EPUAG1000AgriBusinessExposurePreUpdateRules_dir

@gw.rules.RuleName("EPUAG1300 - New Driver Added - Email and Note Generated")
internal class EPUAG1300NewDriverAddedEmailandNoteGenerated {
  static function doCondition(exposure : entity.Exposure) : boolean {
    return /*start00rule*/(exposure.OriginalVersion as Exposure).DriverExt!=exposure.DriverExt and
exposure.Claim.State!="draft" and exposure.Claim.LossType == LossType.TC_AGRIAUTO
/*end00rule*/
  }

  static function doAction(exposure : entity.Exposure, actions : gw.rules.Action) {
/*start00rule*/uses util.custom_Ext.EmailHelper
try{
  var subject:String="Risk Impression - Unlisted Driver"
  var emailHelper=new EmailHelper()
  var note : Note;
  var environmentInfo : String = gw.api.system.server.ServerUtil.getEnv();
  var environmentInformation : String = util.custom_Ext.finders.getEnvironment();
  
  if(!exposure.contactHasDriverRole()and exposure.DriverExt!=null){
    var body : String = templates.email.UnlistedDriver.renderToString(exposure)
    var noteBody : String = "Email notification for Unlisted Driver has been sent to the Underwriter for claim number "+exposure.Claim.ClaimNumber+ "." ;
    var emailSent : Boolean = false;

    //body = "An unlisted driver has been added to claim number " + exposure.Claim.ClaimNumber + " with policy number " +exposure.Claim.Policy.PolicyNumber 
    exposure.addRole( "driver", exposure.DriverExt )//add the role of driver when adding a person on the feature screen.
    if(environmentInfo == "prod"){
      emailHelper.sendEmailWithBodyEcf(exposure.Claim, 
        ScriptParameters.AgribusinessClaims_Email, ScriptParameters.AgribusinessClaims_Name, 
        "ClaimCenterSupport@GAIG.com", "ClaimCenter Notification",
        subject, body)
      emailSent = true;
    }
    else{
      var recipient = exposure.Claim.AssignedUser.DisplayName
      emailHelper.sendEmailWithBodyEcf(exposure.Claim, 
        ScriptParameters.ClaimCenterDevEmail, recipient, 
        "ClaimCenterSupport@GAIG.com", environmentInformation,
        subject, body)
      emailSent = true;
    }
  
    if(emailSent){
      note = exposure.Claim.addNote( "general", noteBody );
      note.Subject = "Unlisted Driver Notification";
    }
  }
}catch(e){
 util.ErrorHandling.GAICErrorHandling.logError( exposure.Claim, actions.getRule().DisplayName, e, "" )
}/*end00rule*/
  }
}
