package rules.Preupdate.MatterAssignmentExtPreupdate_dir.MAPUXX1000AllBUsPreUpdateRules_dir.MAPUXX1400GenerateActivitiesFromLitAdvisorUpdates_dir

@gw.rules.RuleName("MAPUXX1430 - Enter Expense Reserve ")
internal class MAPUXX1430EnterExpenseReserve {
  static function doCondition(matterAssignmentExt : entity.MatterAssignmentExt) : boolean {
    return /*start00rule*/!matterAssignmentExt.New &&
matterAssignmentExt.ChangedFields.contains("BudgetExt")
/*end00rule*/
  }

  static function doAction(matterAssignmentExt : entity.MatterAssignmentExt, actions : gw.rules.Action) {
/*start00rule*/try{ 
  
    var primaryClaimantExpo = matterAssignmentExt.AssignmentExposuresExt.where(\ a -> a.PrimaryClaimantExt == true)*.Exposure
    var primaryClaimant = primaryClaimantExpo.first().Claimant.DisplayName
    //get the enter expense reserve activity pattern
    var pattern = ActivityPattern.finder.getActivityPatternByCode( "enter_expense_reserve" )
    
    //if there is no expense reserve in place for the feature related to the primary claimant
    //on the assignment                            
    if(primaryClaimantExpo != null && 
        !exists(reserve in matterAssignmentExt.Matter.Claim.ReserveLines where
        reserve.Exposure == primaryClaimantExpo.first() &&
        reserve.CostType == CostType.TC_EXPENSE) &&
        !exists(act in matterAssignmentExt.Matter.Claim.Activities where 
                act.Exposure == primaryClaimantExpo.first() and act.ActivityPattern == pattern
                and act.Subject.contains(matterAssignmentExt.Matter.DisplayName)
                and act.Status == "open")){        
       
                
        //Create new activity from existing pattern and add the matter name to the pattern
        //subject and description  
        var newAct = matterAssignmentExt.Matter.Claim
            .createActivity(primaryClaimantExpo.first(), pattern,
             pattern.Subject + " (" + matterAssignmentExt.Matter.DisplayName + "), Primary Claimant (" + primaryClaimant + ")",
             pattern.Description + " (" + matterAssignmentExt.Matter.DisplayName + "), Primary Claimant (" + primaryClaimant + ")",
             pattern.Priority, pattern.Mandatory, gw.api.util.DateUtil.currentDate(), null)
    
        //assign the activity to the user assigned to the claim
        newAct.AssignedUser = matterAssignmentExt.Matter.Claim.AssignedUser
    }
  }catch(e) {
  util.ErrorHandling.GAICErrorHandling.logError( matterAssignmentExt, actions.getRule().DisplayName, e, null )
}/*end00rule*/
  }
}
