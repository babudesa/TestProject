package rules.Preupdate.TransactionSetPreupdate_dir.TPUSP1000SpecialtyESTransactionPreUpdateRules_dir.TPUSP1100CheckSetandReserveSet_dir.TPUSP1120LargePaymentEmailNotification_dir

@gw.rules.RuleName("TPUSP1122 - 500K Payment Email Notification")
internal class TPUSP1122500KPaymentEmailNotification {
  static function doCondition(transactionSet : entity.TransactionSet) : boolean {
    return /*start00rule*/transactionSet typeis CheckSet
and transactionSet.PrimaryCheck.GrossAmountExt >= 500000 
and transactionSet.PrimaryCheck.GrossAmountExt < 5000000

// Defect#8360(ivorobyeva): Added 'Requesting' status check, so the Final check will also generate an email and a note/*end00rule*/
  }

  static function doAction(transactionSet : entity.TransactionSet, actions : gw.rules.Action) {
/*start00rule*/uses util.custom_Ext.EmailHelper
var transSet = transactionSet as CheckSet
try {

    var noteBody:String
    var note:Note
    var checkNum = transSet.PrimaryCheck.CheckNumber
    var checkAmt = transSet.PrimaryCheck.GrossAmountExt
    var checkFormat = gw.api.util.StringUtil.formatNumber( checkAmt, "$#,##0.00")
    var body : String = templates.email.specialtyes.NoticeLargePayment500k_SPES.renderToString(transSet)
    var recipient = transSet.Claim.AssignedUser.DisplayName;
    var envInfo : String = util.custom_Ext.finders.getEnvironment()
    var clmNum = transSet.Claim.ClaimNumber
    var emailHelper = new EmailHelper()
        // Defect#8360: Removed E&SSupport email and created Script Parameter for DL emails
        if(gw.api.system.server.ServerUtil.getEnv() == "prod") {
          emailHelper.sendEmailWithBodyEcf(transSet.Claim, 
                ScriptParameters.SpecES500KPaymentNotificationEmail, ScriptParameters.GARSPaymentNotificationTo, 
                "ClaimCenterSupport@gaig.com", "ClaimCenter Notification", 
                displaykey.Email.Subject.LargePayment, body)
          gw.api.util.Logger.logInfo(actions.getRule().DisplayName);
        } else {
          emailHelper.sendEmailWithBodyEcf(transSet.Claim, 
                ScriptParameters.ClaimCenterDevEmail, recipient, 
                "ClaimCenterSupport@gaig.com", envInfo, 
                displaykey.Email.Subject.LargePayment, body)
          gw.api.util.Logger.logInfo(actions.getRule().DisplayName);
        }
    
    noteBody = displaykey.Notes.NoteBody.LargePayment(checkNum, checkFormat)
    note = transSet.Claim.addNote(NoteTopicType.TC_CHECK, noteBody)
    note.Subject = displaykey.Notes.NoteSubject.LargePayment
  
  }catch(e) {
    util.ErrorHandling.GAICErrorHandling.logError( transSet, actions.getRule().DisplayName, e, null )
}/*end00rule*/
  }
}
