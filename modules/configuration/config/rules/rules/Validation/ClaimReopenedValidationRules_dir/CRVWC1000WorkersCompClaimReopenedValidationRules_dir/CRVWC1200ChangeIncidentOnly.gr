package rules.Validation.ClaimReopenedValidationRules_dir.CRVWC1000WorkersCompClaimReopenedValidationRules_dir

@gw.rules.RuleName("CRVWC1200 - Change Incident Only")
internal class CRVWC1200ChangeIncidentOnly {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*/claim.State != "draft"
and claim.AssignedUser != null
//10/2/15 cmullin: Added check for Policy Coverage and Select Coverage
//prior to reopening claim and creating new features/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/try{
  if (claim.Policy.Coverages.IsEmpty){
    claim.rejectSubField(claim.Policy, "Coverages", "newloss", "At least one Policy-level Coverage is required.", null, null)
  }else if(claim.CoverageSelectedExt==null){
    claim.rejectField("CoverageSelectedExt", "newloss", "Select Coverage is required.", null, null)
  }else{
    claim.createRelevantWorkCompExposures()
  }
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( claim, actions.getRule().DisplayName, e, null );
}/*end00rule*/
  }
}
