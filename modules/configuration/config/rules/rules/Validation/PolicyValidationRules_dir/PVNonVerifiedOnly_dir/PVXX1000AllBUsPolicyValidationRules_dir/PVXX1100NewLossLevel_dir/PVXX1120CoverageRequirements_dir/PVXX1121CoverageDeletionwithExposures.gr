package rules.Validation.PolicyValidationRules_dir.PVNonVerifiedOnly_dir.PVXX1000AllBUsPolicyValidationRules_dir.PVXX1100NewLossLevel_dir.PVXX1120CoverageRequirements_dir

@gw.rules.RuleName("PVXX1121 - Coverage Deletion with Exposures")
internal class PVXX1121CoverageDeletionwithExposures {
  static function doCondition(policy : entity.Policy) : boolean {
    return /*start00rule*///Updated rule with display key, replaced the word "exposure" and added try/catch block
//kmboyd - 4/6/2009
exists(exposure in policy.Claim.Exposures where exposure.Coverage.Retired)==true/*end00rule*/
  }

  static function doAction(policy : entity.Policy, actions : gw.rules.Action) {
/*start00rule*/try{
policy.reject( "newloss", displaykey.Rules.Validation.Policy.Enterprise.NewLoss.CoverageDelete, null, null )
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( policy, actions.getRule() as java.lang.String, e, null )
}/*end00rule*/
  }
}
