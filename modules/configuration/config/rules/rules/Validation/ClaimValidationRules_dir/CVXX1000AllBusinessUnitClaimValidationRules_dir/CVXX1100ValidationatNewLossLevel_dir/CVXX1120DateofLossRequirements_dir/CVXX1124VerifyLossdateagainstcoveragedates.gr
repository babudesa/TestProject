package rules.Validation.ClaimValidationRules_dir.CVXX1000AllBusinessUnitClaimValidationRules_dir.CVXX1100ValidationatNewLossLevel_dir.CVXX1120DateofLossRequirements_dir

@gw.rules.RuleName("CVXX1124 - Verify Loss date against coverage dates")
internal class CVXX1124VerifyLossdateagainstcoveragedates {
  static function doCondition(claim : entity.Claim) : boolean {
    return /*start00rule*//*If the loss date changes, test whether their are feature coverage date descrepancies.
  Add check on claim number in case the loss date is altered in a rule after new claim wizard runs.
  Author: Kelly Otteson
  Date: 11/21/2007
  Updated: Kris Boyd
  *Applied standards
  *Cleaned code up
  *Added condition to trigger if the coverages were added or changed
  EM10 Defect: 376 - 5/28/2008
*/
/* Defect 1887 - 6/9/09 - blawless added Custom History Event to claim. When warning
                          is displayed for any coverage regarding the date of loss 
                          being outside coverage dates, a history event is saved.  
                          The warning will now only display one time for each coverage 
*/  
//Adding !ClaimsMadePolicyExt for Claims Made ELD -anicely 10.03.12

claim.ClaimsMadePolicyExt == false and 
(claim.getOriginalValue("State").toString() == "draft" or
exists(change in claim.ChangedFields where change == "LossDate")) 
 
/*end00rule*/
  }

  static function doAction(claim : entity.Claim, actions : gw.rules.Action) {
/*start00rule*/try{
  var calledByValidate session : List
  for(cov in claim.Policy.AllCoverages) {
    //Only check if the Coverage is being used on a feature
   for(exp in claim.Exposures){
      if(cov == exp.Coverage){
        if(claim.LossDate!=null){
          if ((cov.EffectiveDate!=null and gw.api.util.DateUtil.compareIgnoreTime(claim.LossDate,cov.EffectiveDate) < 0) 
              || (cov.ExpirationDate!=null and gw.api.util.DateUtil.compareIgnoreTime(claim.LossDate,cov.ExpirationDate) > 0)){
            if (!(exists(hist in claim.History where hist.Description == "Warning for Loss Date outside of Coverage dates has been previously displayed for feature: "+exp.DisplayName))){
              if(calledByValidate == null or !calledByValidate.contains(claim.ClaimNumber)){
                claim.createCustomHistoryEvent("DataChange", "Warning for Loss Date outside of Coverage dates has been previously displayed for feature: "+exp.DisplayName)
              }
              if(claim.Policy.isPolicyInRefresh( 1 )){
                claim.setPolicyRefreshFailed()
              }
              claim.reject( null, null, "newloss", displaykey.Libraries.ClassExt.PolCovDateError(util.custom_Ext.DateTime.formatDate(claim.LossDate),"Coverage: " + cov.Type.DisplayName + "'s", util.custom_Ext.DateTime.formatDateString(cov.EffectiveDate, cov.ExpirationDate)))
            }
          }
        }
      }
    }
  }
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( claim, actions.getRule() as java.lang.String, e, null )
}
/*end00rule*/
  }
}
