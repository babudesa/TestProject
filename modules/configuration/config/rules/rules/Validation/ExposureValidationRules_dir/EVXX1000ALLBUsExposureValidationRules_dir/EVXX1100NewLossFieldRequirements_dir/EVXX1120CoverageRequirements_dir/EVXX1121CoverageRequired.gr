package rules.Validation.ExposureValidationRules_dir.EVXX1000ALLBUsExposureValidationRules_dir.EVXX1100NewLossFieldRequirements_dir.EVXX1120CoverageRequirements_dir

@gw.rules.RuleName("EVXX1121 - Coverage Required")
internal class EVXX1121CoverageRequired {
  static function doCondition(exposure : entity.Exposure) : boolean {
    return /*start00rule*//*Requires Coverage at the new loss level.
  Sprint/Maintenance Release: Sprint 16
  Author: Zach Thomas
  Updated by: Stephanie Przygocki 6/18/09 - Added a check to make sure the coverage wasn't deleted
  Date: 9/30/08
*/
(exposure.Coverage == null || exposure.Coverage.Retired) and !exposure.ReconnectFailExt/*end00rule*/
  }

  static function doAction(exposure : entity.Exposure, actions : gw.rules.Action) {
/*start00rule*/try{  
  if(exposure.Coverage == null and !exposure.ReconnectFailExt){
    exposure.rejectField( "Coverage", "newloss", displaykey.Rules.Validation.Exposure.Enterprise.Exposure.Coverage, null, null );
  } else if (exposure.Coverage.Retired and !exposure.ReconnectFailExt){
    exposure.rejectField( "Coverage", "newloss", "The coverage on one or more features has been deleted. Please cancel your changes or remove the feature(s).", null, null );
  }
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( exposure, actions.getRule() as java.lang.String, e, null )
}  /*end00rule*/
  }
}
