package rules.Validation.ExposureValidationRules_dir.EVXX1000ALLBUsExposureValidationRules_dir.EVXX1200AbilitytoPayFieldRequirements_dir

@gw.rules.RuleName("EVXX1220 - Claimant Postal Code Required")
internal class EVXX1220ClaimantPostalCodeRequired {
  static function doCondition(exposure : entity.Exposure) : boolean {
    return /*start00rule*/!util.WCHelper.isWCorELLossType(exposure.Claim)
//Defect 7750 - cmullin - Claimant Address validation moved to ISO/Claim-level for Workers' Comp/*end00rule*/
  }

  static function doAction(exposure : entity.Exposure, actions : gw.rules.Action) {
/*start00rule*/try{
  var address = exposure.Claimant.PrimaryAddress;
  //checking Postal Code
  var msg = exposure.Claim.performAddressValidation(address.PostalCode)

  var postCodeReq : Boolean = util.custom_Ext.finders.postCodeRequired(address.Country.Code, true)

  if(msg == "1")
  {
    exposure.rejectField( "Claimant.PrimaryAddress.PostalCode", "payment", displaykey.Rules.Validation.ExposurePolicy.Enterprise.ClaimantInsured.PrimaryAddress.InvalidChars("Claimant", "Postal Code"), null, null )
  }
  if(msg == "2")
  {
    exposure.rejectField( "Claimant.PrimaryAddress.PostalCode", "payment", displaykey.Rules.Validation.ExposurePolicy.Enterprise.ClaimantInsured.PrimaryAddress.Substitution("Claimant", "Postal Code"), null, null )
  }    
  if(msg == "3" and postCodeReq)
  {
    exposure.rejectField( "Claimant.PrimaryAddress.PostalCode", "payment", displaykey.Rules.Validation.ExposurePolicy.Enterprise.ClaimantInsured.PrimaryAddress.Blank("Claimant", "Postal Code"), null, null )
  }    
}catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( exposure, actions.getRule().DisplayName, e, null )
  //Exposure.reject( null, null, "newloss", "Unknown Error Occurred in Exposure Validation Rule "+actions.getRule().displayName )
}/*end00rule*/
  }
}
