package rules.Validation.TransactionSetValidationRules_dir.TVXX1000AllBUsTransactionValidationRules_dir.TVXX1100CheckSetRules_dir.TVXX11B0RecurringChecks_dir

@gw.rules.RuleName("TVXX11B7 - Due Date of First Check")
internal class TVXX11B7DueDateofFirstCheck {
  static function doCondition(transactionSet : entity.TransactionSet) : boolean {
    return /*start00rule*/true/*end00rule*/
  }

  static function doAction(transactionSet : entity.TransactionSet, actions : gw.rules.Action) {
/*start00rule*/try {
  var recurr = (transactionSet as CheckSet).Recurrence

  // Due date of first check cannot be more than 45 days in the future.
  if (gw.api.util.DateUtil.daysBetween(gw.api.util.DateUtil.currentDate(), recurr.RecurrenceDates.first()) > 45){
    transactionSet.rejectField("Recurrence", "newloss", displaykey.Validation.NewCheckWizard.FirstDueDate, null, null)
  }

} catch(e){
  util.ErrorHandling.GAICErrorHandling.logError( Claim, actions.getRule().DisplayName, e, "" )
}/*end00rule*/
  }
}
