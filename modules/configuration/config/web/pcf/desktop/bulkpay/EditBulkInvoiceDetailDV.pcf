<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    editable="!bulkInvoice.PendingItemValidation"
    id="EditBulkInvoiceDetailDV">
    <Require
      name="bulkInvoice"
      type="BulkInvoice"/>
    <Require
      name="externalContactSource"
      type="contact.ExternalContactSource"/>
    <Require
      name="payeeLinkStatus"
      type="contact.LinkStatus"/>
    <Variable
      initialValue="new gw.api.address.BulkInvoiceMailToAddressOwner(bulkInvoice, CopyPayToAddy)"
      name="MailToAddressOwner"
      recalculateOnRefresh="true"
      type="gw.api.address.BulkInvoiceMailToAddressOwner"/>
    <Variable
      initialValue="bulkInvoice.PayeeChangeable"
      name="isPayeeChangeable"/>
    <Variable
      initialValue="resetPayToFlag()"
      name="CopyPayToAddy"
      recalculateOnRefresh="true"
      type="boolean"/>
    <Variable
      initialValue="bulkInvoice.Payee!=null and bulkInvoice.PayToAddressExt!=null and bulkInvoice.PayToAddressOwner.Addresses.contains(bulkInvoice.PayToAddressExt)"
      name="checkBoxEditable"
      recalculateOnRefresh="true"
      type="boolean"/>
    <!-- Hack to change a space to a hyphen to fix AutoFill and Standardized without going through integration -->
    <Variable
      initialValue="(bulkInvoice.PayToAddressExt != null) ? bulkInvoice.PayToAddressExt.zipFix() : false"
      name="fixZip"
      recalculateOnRefresh="true"
      type="boolean"/>
    <Variable
      initialValue="(bulkInvoice.MailToAddressExt != null) ? bulkInvoice.MailToAddressExt.zipFix() : false"
      name="fixZip2"
      recalculateOnRefresh="true"
      type="boolean"/>
    <Variable
      initialValue="CurrentLocation.InEditMode ? bulkInvoice.setBulkInvoiceReportability() : null"
      name="setReportability"
      recalculateOnRefresh="true"/>
    <InputColumn>
      <!-- CHECK DETAILS - PRIMARY PAYEE INFORMATION -->
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.CheckDetails"/>
      <RangeInput
        editable="true"
        id="PaymentMethod"
        label="displaykey.Web.Financials.BulkPay.Invoice.PaymentMethod"
        onChange="bulkInvoice.PaymentMethod_OnChange()"
        postOnChange="true"
        required="true"
        value="bulkInvoice.PaymentMethod"
        valueRange="bulkInvoice.getPaymentMethods()"/>
      <Label
        id="PrimaryPayee"
        label="displaykey.Web.Financials.BulkPay.Invoice.PrimaryPayee"/>
      <AddressBookContactInput
        editable="isPayeeChangeable"
        id="Payee"
        label="displaykey.Web.Financials.BulkPay.Invoice.Payee"
        newContactMenu="BlankNewContactPickerMenuItemSet()"
        onPick="reflectPayeeFields(bulkInvoice);checkForSameAddy();bulkInvoice.getPayeeValidationMsg();bulkInvoice.setPayToLinesOnCheck(bulkInvoice, bulkInvoice.Payee as java.lang.String)"
        required="true"
        validationExpression="bulkInvoice.getPayeeValidationMsg()"
        value="bulkInvoice.Payee"/>
      <RangeInput
        editable="true"
        id="PayeeRole"
        label="displaykey.LV.Claim.EditableClaimContactRoles.Role"
        optionLabel="ContactRole.get(VALUE as java.lang.String).DisplayName"
        required="true"
        value="bulkInvoice.PayeeAdditionalRoleExt"
        valueRange="(bulkInvoice.Payee!=null) ? bulkInvoice.Payee.getValidRoles() :null"
        visible="bulkInvoice.BulkInvoiceTypeExt==&quot;other&quot;"/>
      <InputSetRef
        def="AddressInputSet(bulkInvoice.PayToAddressOwner)"
        id="PayToAddress"
        mode="bulkInvoice.PayToAddressOwner.InputSetMode"/>
      <InputDivider/>
      <!-- <TextAreaInput
        boldLabel="true"
        editable="true"
        id="PayTo"
        label="displaykey.NVV.Financials.NewCheckPayee.Check.PayTo"
        maxChars="240"
        numCols="45"
        numRows="2"
        postOnChange="true"
        required="true"
        value="bulkInvoice.PayTo"/> -->
      <TextInput
        boldLabel="true"
        editable="true"
        id="PayTo_Line1"
        label="displaykey.NVV.Financials.NewCheckPayee.Check.PayTo"
        numCols="40"
        onChange="bulkInvoice.setCheckPayTo()"
        postOnChange="true"
        required="true"
        value="bulkInvoice.PayToLine1Ext"/>
      <TextInput
        editable="true"
        id="PayTo_Line2"
        label="&quot;&quot;"
        numCols="40"
        onChange="bulkInvoice.setCheckPayTo()"
        postOnChange="true"
        value="bulkInvoice.PayToLine2Ext"/>
      <TextInput
        editable="true"
        id="PayTo_Line3"
        label="&quot;&quot;"
        numCols="40"
        onChange="bulkInvoice.setCheckPayTo()"
        postOnChange="true"
        value="bulkInvoice.PayToLine3Ext"/>
      <TextInput
        editable="true"
        id="PayTo_Line4"
        label="&quot;&quot;"
        numCols="40"
        onChange="bulkInvoice.setCheckPayTo()"
        postOnChange="true"
        value="bulkInvoice.PayToLine4Ext"/>
      <TextInput
        editable="true"
        id="PayTo_Line5"
        label="&quot;&quot;"
        numCols="40"
        onChange="bulkInvoice.setCheckPayTo()"
        postOnChange="true"
        value="bulkInvoice.PayToLine5Ext"/>
      <TextInput
        editable="true"
        id="PayTo_Line6"
        label="&quot;&quot;"
        numCols="40"
        onChange="bulkInvoice.setCheckPayTo()"
        postOnChange="true"
        value="bulkInvoice.PayToLine6Ext"/>
      <TextAreaInput
        id="PayToAddyOnChk"
        label="displaykey.NVV.Financials.NewCheckPayee.Check.PayTo.AsSeenOn"
        maxChars="240"
        numCols="60"
        numRows="6"
        value="bulkInvoice.getPayToAppearingOnCheck()"/>
      <InputDivider/>
      <!-- MAIL TO -->
      <Label
        label="BulkInvoice.PaymentMethod == &quot;eft&quot; ? displaykey.NVV.Financials.NewCheckPayee.Check.EFTMailTo : displaykey.NVV.Financials.NewCheckPayee.Check.MailTo"/>
      <CheckBoxInput
        available="bulkInvoice.Payee != null &amp;&amp; bulkInvoice.PayToAddressExt != null"
        editable="bulkInvoice.Payee!=null and bulkInvoice.PayToAddressExt != null"
        id="CopyPayTo"
        label="displaykey.GAIC.Financials.Check.CopyPayTo"
        onChange="checkMailToAddy()"
        postOnChange="true"
        value="CopyPayToAddy"/>
      <RangeInput
        editable="!CopyPayToAddy"
        filter="util.EFTAccountInformation.electronicFundsInfo.getDeliveryType(VALUE.DisplayName, bulkInvoice.PaymentMethod.DisplayName)"
        id="DeliveryMethod"
        label="bulkInvoice.PaymentMethod == &quot;eft&quot; ? displaykey.NVV.Financials.NewCheckPayee.Check.EFTDeliveryMethod : displaykey.NVV.Financials.NewCheckPayee.Check.DeliveryMethod"
        onChange="bulkInvoice.checkAddress();bulkInvoice.setAttention();"
        optionLabel="VALUE.DisplayName ==DeliveryMethod.TC_HOLD.DisplayName ?&quot;Return to Office&quot;:VALUE.DisplayName"
        postOnChange="true"
        showNoneSelected="false"
        value="bulkInvoice.DeliveryMethod"
        valueRange="typekey.DeliveryMethod.getTypeKeys(false).where(\ d -&gt; d!= &quot;agent&quot; )"/>
      <AddressBookContactInput
        editable="!CopyPayToAddy"
        id="Check_MailToContact"
        label="displaykey.NVV.Financials.NewCheckPayee.Check.MailToContact"
        newContactMenu="BlankNewContactPickerMenuItemSet()"
        required="true"
        value="bulkInvoice.ex_MailTo"/>
      <!-- 10/20/09 erawe defect 2376 added company of the user to display on checks -->
      <Input
        available="true"
        id="UserCompany"
        required="bulkInvoice.DeliveryMethod == &quot;hold&quot;"
        value="bulkInvoice.defaultUserCompany()"
        visible="bulkInvoice.DeliveryMethod == &quot;hold&quot;"/>
      <TextInput
        available="bulkInvoice.DeliveryMethod!=&quot;hold&quot;"
        editable="true"
        id="Attention"
        label="displaykey.NVV.Financials.NewCheckPayee.Check.MailToContact.Attention"
        maxChars="34"
        required="false"
        value="bulkInvoice.AttentionMailToExt"/>
      <InputSetRef
        def="Address2InputSet(MailToAddressOwner)"
        editable="!bulkInvoice.MailToSameAsPayTo or !CopyPayToAddy"
        id="MailToAddress"
        mode="MailToAddressOwner.InputSetMode"/>
    </InputColumn>
    <InputColumn>
      <InputSetRef
        def="ManualBulkInvoiceCheckIssuanceInputSet(bulkInvoice)"
        visible="bulkInvoice.PaymentMethod == PaymentMethod.TC_MANUAL"/>
      <InputDivider
        visible="bulkInvoice.PaymentMethod == &quot;manual&quot;"/>
      <!-- INVOICE DETAILS -->
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Basics"/>
      <Input
        id="BulkInvoiceNumber"
        label="displaykey.Java.Financials.BulkInvoiceNumber"
        value="bulkInvoice.BulkInvoiceIDExt"/>
      <TypeKeyInput
        available="false"
        id="Check_BankAccount"
        label="displaykey.NVV.Financials.ManualPaymentInstructions.Check.BankAccount"
        value="bulkInvoice.BankAccountExt"/>
      <TextInput
        editable="true"
        id="InvoiceNumber"
        label="displaykey.Web.Financials.BulkPay.Invoice.InvoiceNumber"
        maxChars="20"
        onChange="bulkInvoice.setMemo()"
        postOnChange="true"
        value="bulkInvoice.InvoiceNumber"/>
      <TypeKeyInput
        id="BulkInvoiceType"
        label="displaykey.Web.Financials.BulkPay.BulkInvoiceType"
        value="bulkInvoice.BulkInvoiceTypeExt"/>
      <Input
        action="bulkInvoiceCheckPopup.push(bulkInvoice)"
        id="CheckNumber"
        label="BulkInvoice.PaymentMethod==&quot;eft&quot; ? displaykey.NVV.Financials.ManualPaymentInstructions.Check.EFTRefNum : displaykey.Web.Financials.BulkPay.Invoice.CheckNumber"
        value="bulkInvoice.CheckNumber"
        visible="!bulkInvoice.new"/>
      <DateInput
        editable="true"
        id="ReceivedDate"
        label="displaykey.Web.Financials.BulkPay.Invoice.DateReceived"
        requestValidationExpression="((util.DateUtil.compareIgnoreTime(util.DateUtil.currentDate(), VALUE) &lt; 0) ? displaykey.Web.Financials.BulkPay.Error.ReceivedDateAfterCurrentDate : null)"
        value="bulkInvoice.ReceivedDate"/>
      <Input
        available="true"
        editable="true"
        formatType="currency"
        id="TotalAmount"
        label="displaykey.Web.Financials.BulkPay.Invoice.TotalAmount"
        onChange="if(bulkInvoice.SplitEqually==true){ bulkInvoice.splitBulkInvoiceItems() }"
        postOnChange="true"
        required="true"
        validationExpression="bulkInvoice.BulkInvoiceTotal &lt; 0 ? displaykey.Web.Financials.BulkPay.Invoice.TotalAmountNotNegative : null"
        value="bulkInvoice.BulkInvoiceTotal"/>
      <DateInput
        editable="true"
        id="DateofServiceFrom"
        label="displaykey.GAIC.Financials.BulkPay.Invoice.DOSFrom"
        onChange="bulkInvoice.setMemo()"
        postOnChange="true"
        validationExpression="bulkInvoice.DateOfServiceToExt!=null AND (bulkInvoice.DateOfServiceFromExt&gt;bulkInvoice.DateOfServiceToExt) ? displaykey.Web.Financials.BulkPay.DOSError : null"
        value="bulkInvoice.DateOfServiceFromExt"/>
      <DateInput
        editable="bulkInvoice.DateOfServiceFromExt!=null"
        id="DateofServiceTo"
        label="displaykey.GAIC.Financials.BulkPay.Invoice.DOSTo"
        onChange="bulkInvoice.setMemo()"
        postOnChange="true"
        value="bulkInvoice.DateOfServiceToExt"/>
      <TextAreaInput
        editable="true"
        id="Memo"
        label="displaykey.Web.Financials.BulkPay.Invoice.Memo.For"
        maxChars="120"
        numCols="50"
        numRows="3"
        required="true"
        value="bulkInvoice.Memo"/>
      <BooleanRadioInput
        editable="true"
        falseLabel="displaykey.Web.Financials.BulkPay.Invoice.EnterIndividualAmounts"
        id="SplitEqually"
        label="displaykey.Web.Financials.BulkPay.Invoice.SplitEqually"
        onChange="bulkInvoice.splitBulkInvoiceItems()"
        postOnChange="true"
        trueLabel="displaykey.Web.Financials.BulkPay.Invoice.DistributeEvenly"
        value="bulkInvoice.SplitEqually"/>
      <InputDivider/>
      <!-- PAYMENT INSTRUCTIONS -->
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Instruction"/>
      <RangeInput
        available="true"
        editable="true"
        id="AccountSelection"
        label="displaykey.NVV.Financials.NewCheckPayee.AccountSelection"
        optionLabel="util.EFTAccountInformation.electronicFundsInfo.buildDisplayName(VALUE, perm.System.editeftinformation)"
        postOnChange="true"
        required="true"
        value="BulkInvoice.EFTAccountUsedExt"
        valueRange="BulkInvoice.Payee.ABEFTAccountInfoExt"
        visible="BulkInvoice.PaymentMethod == &quot;eft&quot;"/>
      <Input
        id="AccountType"
        label="displayKey.NVV.Financials.NewCheckPayee.Check.AccountType"
        value="BulkInvoice.EFTAccountUsedExt.AccountTypeExt"
        visible="BulkInvoice.PaymentMethod == &quot;eft&quot;"/>
      <Input
        id="ABANumber"
        label="displayKey.NVV.Financials.NewCheckPayee.Check.ABARoutingNum"
        value="util.EFTAccountInformation.electronicFundsInfo.maskABANumber(bulkInvoice.EFTAccountUsedExt.ABANumberExt, perm.System.editeftinformation)"
        visible="BulkInvoice.PaymentMethod == &quot;eft&quot;"/>
      <Input
        id="AccountNumber"
        label="displayKey.NVV.Financials.NewCheckPayee.Check.AccountNum"
        value="util.EFTAccountInformation.electronicFundsInfo.maskAccountInfo(bulkInvoice.EFTAccountUsedExt.AccountNumberExt, perm.System.editeftinformation)"
        visible="BulkInvoice.PaymentMethod == &quot;eft&quot;"/>
      <Input
        available="false"
        editable="true"
        id="Reportability"
        label="displaykey.Web.Financials.BulkPay.Invoice.Reportability"
        value="bulkInvoice.Reportability"/>
      <Input
        available="false"
        editable="true"
        id="CheckBatching"
        label="displaykey.Web.Financials.BulkPay.Invoice.CheckBatching"
        value="bulkInvoice.CheckBatchingExt"/>
      <TypeKeyInput
        available="false"
        editable="true"
        id="CheckInstructions"
        label="displaykey.Web.Financials.BulkPay.Invoice.CheckInstructions"
        value="bulkInvoice.CheckInstructions"/>
      <DateInput
        editable="true"
        id="ScheduledSendDate"
        label="displaykey.Web.Financials.BulkPay.Invoice.WhenToPay"
        required="true"
        value="bulkInvoice.ScheduledSendDate"/>
      <InputDivider/>
    </InputColumn>
    <InputFooterSection>
      <!-- VALIDATION -->
      <InputDivider/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Validation.IsValid"
        visible="bulkInvoice.Valid"/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Validation.IsNotValid"
        visible="!bulkInvoice.Valid"/>
      <Label
        label="displaykey.Web.Financials.BulkPay.Invoice.Validation.ResultsTitle(gw.api.util.StringUtil.formatDate(bulkInvoice.LastValidatedDate, &quot;medium&quot;))"
        visible="bulkInvoice.LastValidatedDate != null and (bulkInvoice.Valid or (!bulkInvoice.Valid and bulkInvoice.ValidationAlerts.length &gt; 0))"/>
      <ListViewInput
        labelAbove="true"
        visible="bulkInvoice.Valid and bulkInvoice.LastValidatedDate != null">
        <Toolbar/>
        <ListViewPanel>
          <Row>
            <ContentCell>
              <DetailViewPanel>
                <InputColumn>
                  <TextInput
                    align="center"
                    id="ValidationSuccess"
                    labelAbove="true"
                    value="displaykey.Web.Financials.BulkPay.Invoice.Validation.ResultsSuccess"
                    visible="bulkInvoice.Valid and bulkInvoice.LastValidatedDate != null"/>
                </InputColumn>
              </DetailViewPanel>
            </ContentCell>
          </Row>
        </ListViewPanel>
      </ListViewInput>
      <ListViewInput
        labelAbove="true"
        visible="bulkInvoice.LastValidatedDate != null and !bulkInvoice.Valid and bulkInvoice.ValidationAlerts.length &gt; 0">
        <Toolbar/>
        <ListViewPanel
          id="BulkInvoiceValidationAlertsLV">
          <RowIterator
            editable="false"
            elementName="validationAlert"
            pageSize="5"
            value="bulkInvoice.ValidationAlerts">
            <Row>
              <Cell
                id="AlertMsg"
                label="displaykey.Web.Financials.BulkPay.Invoice.Validation.AlertMsg"
                value="validationAlert.AlertMsg"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        label="displaykey.Web.Financials.BulkPay.Invoice.Approval.History"
        labelAbove="true"
        visible="!bulkInvoice.New and (bulkInvoice.ApprovalHistory as Activity[]).length == 0">
        <Toolbar/>
        <ListViewPanel
          visible="!bulkInvoice.New and (bulkInvoice.ApprovalHistory as Activity[]).length == 0">
          <Row>
            <ContentCell>
              <DetailViewPanel>
                <InputColumn>
                  <TextInput
                    align="left"
                    id="NoApprovalHistory"
                    value="displaykey.Web.Financials.BulkPay.Invoice.Approval.NoHistory"
                    visible="!bulkInvoice.New and (bulkInvoice.ApprovalHistory as Activity[]).length == 0"/>
                </InputColumn>
              </DetailViewPanel>
            </ContentCell>
          </Row>
        </ListViewPanel>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="ApprovalHistoryLV(bulkInvoice.ApprovalHistory as Activity[])"
        id="ApprovalHistoryWithItems"
        label="displaykey.Web.Financials.BulkPay.Invoice.Approval.History"
        labelAbove="true"
        visible="!bulkInvoice.New and (bulkInvoice.ApprovalHistory as Activity[]).length &gt; 0">
        <Toolbar/>
      </ListViewInput>
      <InputDivider/>
    </InputFooterSection>
    <Code><![CDATA[function reflectPayeeFields(bi : BulkInvoice) { 
  var payee = bi.Payee; 
  if (payee != null) { 
  	bi.PayTo = payee.DisplayName;
  	bi.MailTo=payee.DisplayName;
  	bi.ex_MailTo = payee; 
  	bi.MailToAddressExt = bi.PayToAddressExt; 
  } 
}
//determines whether or not the paytoflag should be reset, this is in case they decide to come back to the screen after leaving it
function resetPayToFlag():boolean{
  
  if(CopyPayToAddy==false){
    
   if((bulkInvoice.Payee!=null) and 
      (bulkInvoice.PayToAddressExt !=null && bulkInvoice.MailToAddressExt !=null)and  
      (bulkInvoice.Payee !=null && bulkInvoice.ex_MailTo!=null) and 
      (bulkInvoice.PayToAddressExt == bulkInvoice.MailToAddressExt and bulkInvoice.PayToAddressExt.AddressType == bulkInvoice.MailToAddressExt.AddressType) and 
      (bulkInvoice.Payee == bulkInvoice.ex_MailTo)){
  	  CopyPayToAddy =true
  	  return true
  	} else {
  	  CopyPayToAddy=false
  	}
  } else{

  	if((CopyPayToAddy) and (bulkInvoice.Payee !=null && bulkInvoice.ex_MailTo!=null) and  
  	  (bulkInvoice.PayToAddressExt !=null && bulkInvoice.MailToAddressExt !=null) and 
  	  (bulkInvoice.PayToAddressExt != bulkInvoice.MailToAddressExt or (bulkInvoice.PayToAddressExt == bulkInvoice.MailToAddressExt and  bulkInvoice.PayToAddressExt.AddressType != bulkInvoice.MailToAddressExt.AddressType))){

	    CopyPayToAddy = false;
            checkMailToAddy()
  	  }
  	}

return CopyPayToAddy;
}
//checks to see if the addresses become different and the same as payee address box should be unchecked.
function checkForSameAddy(){

  if(CopyPayToAddy and bulkInvoice.Payee!=null and (bulkInvoice.PayToAddressExt != bulkInvoice.MailToAddressExt or bulkInvoice.Payee != bulkInvoice.ex_MailTo)){

  	CopyPayToAddy = false;
  	checkMailToAddy()  	
  }

}
//update or reset mail to person and address
function checkMailToAddy(){

  if(CopyPayToAddy){
  	bulkInvoice.MailToAddressExt = bulkInvoice.PayToAddressExt
  	bulkInvoice.ex_MailTo = bulkInvoice.Payee
  	bulkInvoice.MailTo=bulkInvoice.Payee.DisplayName
  	bulkInvoice.DeliveryMethod = "send";
  }
  else{
  	bulkInvoice.MailToAddressExt = null
  	bulkInvoice.ex_MailTo = null
  	bulkInvoice.MailTo=null
  }
}
// removed 6/2011 for unknown reason - added back to fix error during Studio Fix process 10/2013
function getApprovalUserOrGroupString(approvalHistory : Activity) : String {
  var closeUser = approvalHistory.CloseUser
  var assignedUser = approvalHistory.AssignedUser
  var assignedGroup = approvalHistory.AssignedGroup
  
  if( closeUser != null )  {
    return closeUser.DisplayName
  } 
  else if( assignedUser != null ) {
    return assignedUser.DisplayName
  }  
  else if( assignedGroup != null ) {
    return assignedGroup.DisplayName
  } 
  else {
    return ""
  }
}

function getApprovalString( activity : Activity ) : String {
  if (activity.Approved == null) {
    return displayKey.Java.ApprovalHistory.PendingApproval
  } else if (activity.Approved) {
    return displayKey.Java.ApprovalHistory.Approved
  } else {
    return displayKey.Java.ApprovalHistory.Rejected
  }
}]]></Code>
  </DetailViewPanel>
</PCF>