<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <!-- This file automatically generated from nvv_policy.xml -->
  <PanelSet
    id="PolicyGeneralPanelSet"
    mode="WORKCOMP|PIMINMARINEWC|PIMINMARINEEL|SPECIALTYESWC|SPECIALTYESEL|ALTMARKETSWC|ALTMARKETSEL|STRATEGICCOMPWC|STRATEGICCOMPEL|TRUCKINGWC|TRUCKINGEL|AGRIWC|AGRIEL|OMWC|OMEL|ECUWC|ECUEL">
    <Require
      name="Policy"
      type="Policy"/>
    <Require
      name="Claim"
      type="Claim"/>
    <Require
      name="policyDisconnectedWarning"
      type="Boolean"/>
    <Variable
      initialValue="Policy.ex_Agency"
      name="Agency"
      type="ex_Agency"/>
    <Variable
      initialValue="true"
      name="showWarningMessage"
      type="Boolean"/>
    <Variable
      initialValue="(Claim.displayDisconnectedWarning(policyDisconnectedWarning) and showWarningMessage) ? GeneralErrorWorksheet.goInWorkspace(Claim.getDisconnectedFeatures()) : null"
      name="displayPolicyDisconnectedWarning"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="resetPolicyInRefresh()"
      name="resetPolInRefresh"
      recalculateOnRefresh="true"/>
    <DetailViewPanel
      id="PolicyGeneralDV">
      <InputColumn>
        <Label
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Basics"/>
        <Input
          id="PolicyNumber"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyNumber"
          required="true"
          value="Policy.PolicyNumber"/>
        <Input
          editable="!Policy.Verified"
          id="PolicyMod"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyMod"
          required="true"
          value="Policy.PolicySuffix"/>
        <!-- sdalal Equine Sprint 2 10/25/06 - Policy Version -->
        <Input
          editable="!Policy.Verified"
          id="PolicyVersion"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyVersion"
          required="true"
          value="Policy.ex_PolicyVersion"/>
        <Input
          id="Type"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Type"
          required="true"
          value="Policy.PolicyType"/>
        <Input
          editable="!Policy.Verified"
          id="EffectiveDate"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.EffectiveDate"
          required="true"
          value="Policy.EffectiveDate"/>
        <Input
          editable="!Policy.Verified"
          id="ExpirationDate"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ExpirationDate"
          required="true"
          value="Policy.ExpirationDate"/>
        <Input
          editable="!Policy.Verified"
          id="CancellationDate"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CancellationDate"
          value="Policy.CancellationDate"/>
        <Input
          editable="!Policy.Verified"
          id="ReinstatementDate"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ReinstatementDate"
          value="Policy.ex_ReinstatementDate"/>
        <Input
          editable="!Policy.Verified"
          id="Status"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Status"
          value="Policy.Status"/>
        <TypeKeyInput
          editable="!Policy.Verified"
          id="policystate_typekeyinput"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.State"
          value="Policy.PolicyStateExt"/>
        <InputDivider/>
        <Label
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="Insured_Name"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Name"
          newContactMenu="ClaimNewInsuredPickerMenuItemSet"
          required="true"
          showSearchInMenu="false"
          value="Policy.insured"
          valueRange="Policy.policyInsuredList()"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="DBA"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.DBA"
          newContactMenu="ClaimNewCompanyOnlyPickerMenuItemSet"
          value="Policy.DoingBusinessAs"
          valueRange="Policy.Claim.RelatedCompanyArray"
          visible="Policy.CommercialPolicy"/>
        <ListViewInput
          def="EditableMoreNamedInsuredLV(Policy.getMNICoveredParties(), Policy.Claim, Policy, &quot;coveredparty&quot;)"
          id="MoreNamedInsured"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.MoreNamedInsureds"
          validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()"
          visible="Policy.Verified">
          <Toolbar>
            <IteratorButtons/>
          </Toolbar>
        </ListViewInput>
        <Input
          id="Insured_Address"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Address"
          value="Policy.insured.PrimaryAddressDisplayValue">
          <Reflect
            triggerIds="Insured_Name"
            value="VALUE.PrimaryAddressDisplayValue"/>
        </Input>
        <Input
          editable="!Policy.Verified"
          id="Insured_LegalCategory"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.LegalCategory"
          value="Policy.insured.LegalCategoryExt"/>
        <Input
          editable="!Policy.Verified"
          id="Account"
          label="displaykey.GAIC.NVV.Policy.SubView.PolicyGeneral.Policy.CustomerCode"
          required="false"
          value="Policy.Account"/>
      </InputColumn>
      <InputColumn>
        <ListViewInput
          boldLabel="true"
          def="EditableAdditionalInsuredLV(Policy.getClaimContactRolesByRole(&quot;coveredparty&quot;), Policy.Claim, Policy, &quot;coveredparty&quot;)"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.AdditionalInsured"
          validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()"
          visible="Policy.Verified">
          <Toolbar>
            <IteratorButtons/>
          </Toolbar>
        </ListViewInput>
        <InputDivider
          visible="Policy.Verified"/>
        <ListViewInput
          boldLabel="true"
          def="EditableExcludedPartiesLV(Policy.getClaimContactRolesByRole(&quot;excludedparty&quot;), Policy, &quot;excludedparty&quot;)"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ExcludedParties"
          validationExpression="Policy.checkExcludedPartyConstraints().formatUserMessage()"
          visible="Policy.Verified">
          <Toolbar>
            <IteratorButtons/>
          </Toolbar>
        </ListViewInput>
        <InputDivider
          visible="Policy.Verified"/>
        <Label
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent"/>
        <Input
          editable="!Policy.Verified"
          id="ProducerCode"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ProducerCode"
          onChange="Policy.ex_Agency=util.gaic.prm.PRMPluginFunctions.getProducerFromPRM(Policy.ProducerCode); Policy.updateAgencyRoles(Agency); Agency = Policy.ex_Agency"
          postOnChange="true"
          required="true"
          validationExpression="Policy.ProducerCode == null ? null : !Policy.ProducerCode.matches(&quot;\\d{6}&quot;) ? &quot;Must be 6 digits&quot; : null"
          value="Policy.ProducerCode"/>
        <!-- Sprint 12 Agri ER:  With PRM integration now in use for Agency Name we will not show the picker -->
        <ClaimContactInput
          claim="Policy.Claim"
          id="Agent_Name"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.Name"
          showSearchInMenu="false"
          value="Policy.ex_Agency"
          valueRange="Policy.Claim.getAgencies()"/>
        <Input
          id="Agent_AAP"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.AAPAuthority"
          postOnChange="true"
          value="Policy.ex_Agency.ex_AAPAuthority"/>
        <Input
          formatType="exactNumber"
          id="Agent_AAPLimit"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.AAPLimit"
          outputConversion="util.StringUtils.removeDecimal(CurrentLocation.InEditMode, VALUE as java.lang.Double)"
          required="Policy.ex_Agency.ex_AAPAuthority"
          validationExpression="util.custom_Ext.ValidateCoverageAmounts.validateCoverageAmount(Policy.ex_Agency.ex_AAPAuthorityLimit) ? null : displaykey.Java.Validation.Number.NotAnInteger"
          value="Policy.ex_Agency.ex_AAPAuthorityLimit"
          visible="Policy.ex_Agency.ex_AAPAuthority"/>
        <Input
          id="Agent_LossCheck"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.LossCheckCopy"
          value="Policy.ex_Agency.ex_LossCheckCopy"/>
        <Input
          id="Agent_ExpenseCheck"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.ExpenseCheckCopy"
          value="Policy.ex_Agency.ex_ExpenseCheckCopy"/>
        <Input
          id="Agent_Funded_Deductible"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.FundedDeductible"
          value="Policy.ex_Agency.ex_FundedDeductible"/>
        <InputDivider/>
        <Label
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="Underwriter_Name"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriter.Name"
          newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
          required="false"
          showSearchInMenu="false"
          value="Policy.Underwriter"
          valueRange="Policy.Claim.RelatedPersonArray"/>
        <!-- sdalal Equine Sprint 3
			
			
	         Sprint 12 Agri ER 3/27/08: added profit center name (AgencyProfitCenterNameExt) -->
        <Input
          id="ProfitCenterName"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.ProfitCenterName"
          value="Policy.ex_Agency.AgencyProfitCenterNameExt"/>
        <Input
          id="ProfitCenter"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.ProfitCenter"
          value="Policy.ex_Agency.ex_AgencyProfitCenter"/>
        <!-- Added SBU agri sprint 9 jlmiller, for now it is not editable. will be pre-filled later.  Removed 4/7/08 sprzygocki Sprint 12 -->
        <Input
          editable="!Policy.Verified"
          id="IssuingCompany"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.IssuingCompany"
          value="Policy.IssuingCompanyExt"/>
        <InputDivider/>
        <Label
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other"/>
        <Input
          id="Other_VerifiedPolicy"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.VerifiedPolicy"
          value="Policy.Verified"/>
        <TypeKeyInput
          editable="!Policy.Verified and Policy.canEditUnverifiedPolRsn()"
          filter="Policy.filterUnverifiedPolRsn(VALUE.toString())"
          id="Unverified_Reason"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.UnverifiedReason"
          required="true"
          value="Policy.UnverifiedRsnExt"
          visible="!Policy.Verified"/>
        <!-- NAICS code, currency added by Otteson on July 25, 2007 -->
        <TypeKeyInput
          editable="!Policy.Verified"
          id="NAICSCode"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.NAICSCode"
          required="false"
          value="Policy.NAICSCodeExt"
          valueWidth="300"/>
        <TypeKeyInput
          editable="!Policy.Verified"
          id="CurrencyType"
          label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CurrencyType"
          required="true"
          showNoneSelected="false"
          value="Policy.CurrencyTypeExt"/>
        <InputDivider
          visible="Policy.Verified"/>
        <Label
          label="displaykey.NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp"
          visible="Policy.Verified"/>
        <Input
          editable="!Policy.Verified"
          id="WorkersComp_States"
          label="displaykey.NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.States"
          value="Policy.WCStates"
          visible="gw.api.address.CountryAddressFields.DefaultCountryHasStates &amp;&amp; Policy.Verified"/>
        <Input
          editable="!Policy.Verified"
          id="WorkersComp_OtherStates"
          label="displaykey.NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.OtherStates"
          value="Policy.WCOtherStates"
          visible="gw.api.address.CountryAddressFields.DefaultCountryHasStates &amp;&amp; Policy.Verified"/>
        <Input
          editable="!Policy.Verified"
          id="Policy_WCExcludedStates"
          label="displaykey.NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.ExStates"
          value="Policy.WCExcludedStatesExt"
          visible="Policy.Verified"/>
      </InputColumn>
    </DetailViewPanel>
    <PanelRef
      def="PolicyCoveragesLV(Policy)"
      editable="!Policy.Verified"
      mode="Policy.LossType">
      <TitleBar
        title="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Coverages"/>
      <Toolbar>
        <IteratorButtons
          addVisible="!Policy.Verified"
          removeVisible="!Policy.Verified"/>
      </Toolbar>
      <PanelSet/>
    </PanelRef>
    <!-- <PanelRef
      def="WorkersCompPolicyLimitsLV(Policy)"
      visible="Policy.Verified">
      <TitleBar
        title="&quot;Policy Limits&quot;"/>
      <Toolbar
        visible="!Policy.Verified">
        <IteratorButtons/>
      </Toolbar>
    </PanelRef> -->
    <Code><![CDATA[function setShowWarningMessage(){
  if (Claim.displayDisconnectedWarning(policyDisconnectedWarning) and showWarningMessage) {
    showWarningMessage = false;
  }
}

function resetPolicyInRefresh(){
  if(Claim.Policy.isPolicyInRefresh(1)){
    Claim.setPolicyOutOfRefresh()
  }
}]]></Code>
  </PanelSet>
</PCF>