<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- This file automatically generated from nvv_policy.xml -->
  <DetailViewPanel
    id="PolicyGeneralDV"
    mode="EQUINE">
    <Require
      name="Policy"
      type="Policy"/>
    <Require
      name="Claim"
      type="Claim"/>
    <Require
      name="policyDisconnectedWarning"
      type="Boolean"/>
    <!-- 05/20/2008 - zthomas - Defect 1131, Display warning message is worksheet if policy has disconnected features. -->
    <Variable
      initialValue="true"
      name="showWarningMessage"
      type="Boolean"/>
    <Variable
      initialValue="(Claim.displayDisconnectedWarning(policyDisconnectedWarning) and showWarningMessage) ? GeneralErrorWorksheet.goInWorkspace(Claim.getDisconnectedFeatures()) : null"
      name="displayPolicyDisconnectedWarning"
      recalculateOnRefresh="true"/>
    <InputColumn>
      <!-- 05/20/2008 - zthomas - Defect 1131, Reset PolicyDisconnectedWarningExt to false so warning displays only once. -->
      <HiddenInput
        id="setShowWarningMessage"
        value="setShowWarningMessage()"/>
      <!-- BASIC INFORMATION SECTION -->
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Basics"/>
      <!-- Defect 719 djohnson2 3/12/2007 - do not allow all zeroes to be entered in the policy number field -->
      <Input
        editable="!Policy.Verified"
        id="PolicyNumber"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyNumber"
        required="true"
        value="Policy.PolicyNumber"/>
      <Input
        editable="!Policy.Verified"
        id="PolicyMod"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyMod"
        required="true"
        value="Policy.PolicySuffix"/>
      <!-- sdalal Equine Sprint 2 10/25/06 - Policy Version -->
      <Input
        editable="!Policy.Verified"
        id="PolicyVersion"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyVersion"
        required="true"
        value="Policy.ex_PolicyVersion"/>
      <Input
        id="Type"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Type"
        required="true"
        value="Policy.PolicyType"/>
      <Input
        editable="!Policy.Verified"
        id="EffectiveDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.EffectiveDate"
        postOnChange="true"
        required="true"
        validationExpression="Policy.validatePolDates()"
        value="Policy.EffectiveDate"/>
      <Input
        editable="!Policy.Verified"
        id="ExpirationDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ExpirationDate"
        postOnChange="true"
        required="true"
        validationExpression="Policy.validatePolDates()"
        value="Policy.ExpirationDate"/>
      <InputDivider
        visible="util.custom_Ext.DateTime.isDateAfter(Policy.EffectiveDate, Policy.Claim.LossDate) or util.custom_Ext.DateTime.isDateBefore(Policy.ExpirationDate, Policy.Claim.LossDate) or Policy.Claim.Changed"/>
      <Label
        id="IncorrectPolicyInfo"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Claim.LossDate.Update"
        visible="util.custom_Ext.DateTime.isDateAfter(Policy.EffectiveDate, Policy.Claim.LossDate) or util.custom_Ext.DateTime.isDateBefore(Policy.ExpirationDate, Policy.Claim.LossDate) or Policy.Claim.Changed"/>
      <DateInput
        boldLabel="true"
        dateFormat="short"
        editable="true"
        id="LossDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Claim.LossDate"
        required="true"
        timeFormat="short"
        validationExpression="Claim.LossDate == null || gw.api.util.DateUtil.compareIgnoreTime(Claim.LossDate,util.DateUtil.currentDate())&lt;=0 ? Policy.validatePolDates() : displaykey.Java.Validation.Date.ForbidFuture"
        value="Claim.LossDate"
        visible="util.custom_Ext.DateTime.isDateAfter(Policy.EffectiveDate, Policy.Claim.LossDate) or util.custom_Ext.DateTime.isDateBefore(Policy.ExpirationDate, Policy.Claim.LossDate) or Policy.Claim.Changed"/>
      <InputDivider
        visible="util.custom_Ext.DateTime.isDateAfter(Policy.EffectiveDate, Policy.Claim.LossDate) or util.custom_Ext.DateTime.isDateBefore(Policy.ExpirationDate, Policy.Claim.LossDate) or Policy.Claim.Changed"/>
      <Input
        editable="!Policy.Verified"
        id="CancellationDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CancellationDate"
        value="Policy.CancellationDate"/>
      <Input
        editable="!Policy.Verified"
        id="ReinstatementDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ReinstatementDate"
        value="Policy.ex_ReinstatementDate"/>
      <!-- <Input
        editable="!Policy.Verified"
        id="OrigEffectiveDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.OrigEffectiveDate"
        value="Policy.OrigEffectiveDate"/> -->
      <Input
        editable="!Policy.Verified"
        id="Status"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Status"
        value="Policy.Status"/>
      <TypeKeyInput
        editable="!Policy.Verified"
        id="policystate_typekeyinput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.State"
        value="Policy.PolicyStateExt"/>
      <InputDivider/>
      <!-- INSURED SECTION  Defect 1370 8/31/09 erawe:changed valueRange on Insured to limit display to only Insured -->
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured"/>
      <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Insured_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Name"
        newContactMenu="ClaimNewInsuredPickerMenuItemSet"
        required="true"
        showSearchInMenu="false"
        validationExpression="(Policy.Insured.PrimaryAddress == null) ? null : (Policy.Insured.PrimaryAddress.AddressLine1 == null || Policy.Insured.PrimaryAddress.City == null || (Policy.Insured.PrimaryAddress.PostalCode == null and util.custom_Ext.finders.postCodeRequired(Policy.Insured.PrimaryAddress.Country.Code, true))) ? &quot; Insured Address, when entered, must contain Line1, City , State and Zip.&quot; : null"
        value="Policy.Insured"
        valueRange="Policy.policyInsuredList()"/>
      <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="DBA"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.DBA"
        newContactMenu="ClaimNewCompanyOnlyPickerMenuItemSet"
        showSearchInMenu="false"
        value="Policy.DoingBusinessAs"
        valueRange="Policy.policyDoingBusinessAsList()"
        visible="Policy.CommercialPolicy"/>
      <ListViewInput
        def="EditableMoreNamedInsuredLV(Policy.getMNICoveredParties(), Policy.Claim, Policy, &quot;coveredparty&quot;)"
        editable="!Policy.Verified"
        id="MoreNamedInsured"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.MoreNamedInsureds"
        validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()"
        visible="Policy.Verified">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
      <TextAreaInput
        id="Insured_Address"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Address"
        numCols="35"
        numRows="2"
        value="Policy.Insured.getPrimaryAddressDisplayValue()">
        <Reflect
          triggerIds="Insured_Name"
          value="VALUE.getPrimaryAddressDisplayValue()"/>
      </TextAreaInput>
      <Input
        editable="!Policy.Verified"
        id="Account"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CustomerCode"
        required="false"
        value="Policy.Account"/>
      <!-- <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="PolicyHolder"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyHolder"
        value="Policy.PolicyHolder"
        valueRange="Policy.Claim.relatedContacts"
        visible="Policy.CommercialPolicy"/> -->
      <!-- Will only display for Commercial policies   Defect 358 djohnson  delete policy holder, foreign coverage, otheer fin Interests, change account to customer code -->
      <InputDivider/>
      <!-- POLICY-LEVEL DEDUCTIBLE INFORMATION SECTION -->
      <Label
        label="displaykey.GAIC.Policy.Subview.PolicyGeneral.Policy.Deductible"/>
      <Input
        editable="!Policy.Verified"
        formatType="exactNumber"
        id="deductible"
        label="displaykey.GAIC.Policy.Subview.PolicyGeneral.Policy.DeductibleAmount"
        outputConversion="util.StringUtils.removeDecimal(CurrentLocation.InEditMode, VALUE as java.lang.Double)"
        validationExpression="util.custom_Ext.ValidateCoverageAmounts.validateCoverageAmount(Policy.ex_DeductibleAmount) ? null : displaykey.Java.Validation.Number.NotAnInteger"
        value="Policy.ex_DeductibleAmount"/>
      <Input
        editable="!Policy.Verified"
        id="deductpercent"
        label="displaykey.GAIC.Policy.Subview.PolicyGeneral.Policy.DeductPercent"
        value="Policy.ex_DeductiblePercentage"/>
      <Input
        editable="!Policy.Verified"
        formatType="exactNumber"
        id="minaggregate"
        label="displaykey.GAIC.Policy.Subview.PolicyGeneral.Policy.MinAgg"
        outputConversion="util.StringUtils.removeDecimal(CurrentLocation.InEditMode, VALUE as java.lang.Double)"
        validationExpression="util.custom_Ext.ValidateCoverageAmounts.validateCoverageAmount(Policy.ex_MinimumAggregateAmount) ? null : displaykey.Java.Validation.Number.NotAnInteger"
        value="Policy.ex_MinimumAggregateAmount"/>
    </InputColumn>
    <InputColumn>
      <!-- <ListViewInput
        boldLabel="true"
        def="EditableAdditionalInsuredLV(Policy.getClaimContactRolesByRole(&quot;coveredparty&quot;), Policy.Claim, Policy, &quot;coveredparty&quot;)"
        editable="!Policy.Verified"
        id="AdditionalInsured"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.AdditionalInsured"
        validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput> -->
      <!-- ADDITIONAL INTERESTS SECTION  Changed during equine additional insured -> additional interests -->
      <ListViewInput
        boldLabel="true"
        def="EditableAdditionalInsuredLV(Policy.getNonMNICoveredParties(), Policy.Claim, Policy, &quot;coveredparty&quot;)"
        editable="!Policy.Verified"
        id="AdditionalInsured"
        label="displaykey.GAIC.NVV.Policy.SubView.PolicyGeneral.Policy.AdditionalInsured"
        validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()"
        visible="Policy.Verified">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
      <InputDivider
        visible="Policy.Verified"/>
      <!-- <ListViewInput
        boldLabel="true"
        def="EditableExcludedPartiesLV(Policy.getClaimContactRolesByRole(&quot;excludedparty&quot;), Policy, &quot;excludedparty&quot;)"
        editable="!Policy.Verified"
        id="ExcludedParties"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ExcludedParties"
        validationExpression="Policy.checkExcludedPartyConstraints().formatUserMessage()">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput> -->
      <!-- <InputDivider/> -->
      <!-- AGENCY INFORMATION SECTION  JLM defect #473 Release 9 -->
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent"/>
      <!-- <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Agent_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.Name"
        value="Policy.Agent"
        valueRange="Policy.Claim.relatedContacts"/> -->
      <!-- Sprint 12 Agri 3/6/08 ER Added onChange to ProducerCode to retrieve data from integration with PRM -->
      <Input
        editable="!Policy.Verified"
        id="ProducerCode"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ProducerCode"
        onChange="Policy.ex_Agency=util.gaic.prm.PRMPluginFunctions.getProducerFromPRM(Policy.ProducerCode)"
        postOnChange="true"
        value="Policy.ProducerCode"/>
      <!-- Sprint 12 Agri ER:  With PRM integration now in use for Agency Name we will not show the picker -->
      <ClaimContactInput
        claim="Policy.Claim"
        id="Agent_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.Name"
        value="Policy.ex_Agency"
        valueRange="Policy.Claim.getAgencies()"/>
      <!-- <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Agent_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.Name"
        newContactMenu="ClaimNewAgencyOnlyPickerMenuItemSet"
        showSearchInMenu="false"
        value="Policy.ex_Agency"
        valueRange="Policy.Claim.getAgencies()"/> -->
      <!-- def 966 - replace value range of agent 3/19/08 by KSO  5/1/2008 - zthomas - Defect 982, implement PRM integration, comment out current agency picker. -->
      <Input
        id="Agent_AAP"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.AAPAuthority"
        postOnChange="true"
        value="Policy.ex_Agency.ex_AAPAuthority"/>
      <Input
        formatType="exactNumber"
        id="Agent_AAPLimit"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.AAPLimit"
        outputConversion="util.StringUtils.removeDecimal(CurrentLocation.InEditMode, VALUE as java.lang.Double)"
        required="Policy.ex_Agency.ex_AAPAuthority"
        validationExpression="util.custom_Ext.ValidateCoverageAmounts.validateCoverageAmount(Policy.ex_Agency.ex_AAPAuthorityLimit) ? null : displaykey.Java.Validation.Number.NotAnInteger"
        value="Policy.ex_Agency.ex_AAPAuthorityLimit"
        visible="Policy.ex_Agency.ex_AAPAuthority"/>
      <Input
        id="Agent_LossCheck"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.LossCheckCopy"
        value="Policy.ex_Agency.ex_LossCheckCopy"/>
      <Input
        id="Agent_ExpenseCheck"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.ExpenseCheckCopy"
        value="Policy.ex_Agency.ex_ExpenseCheckCopy"/>
      <InputDivider/>
      <!-- UNDERWRITING SECTION -->
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting"/>
      <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Underwriter_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriter.Name"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="false"
        showSearchInMenu="false"
        value="Policy.Underwriter"
        valueRange="Policy.Claim.RelatedPersonArray"
        visible="true"/>
      <!-- <Input
        editable="!Policy.Verified"
        id="Underwriting_Company"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.Company"
        value="Policy.UnderwritingCo"/> -->
      <!-- <Input
        editable="!Policy.Verified"
        id="Underwriting_Group"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.Group"
        value="Policy.UnderwritingGroup"/> -->
      <!-- sdalal Equine Sprint 3
			
			Sprint 12 Agri ER 3/27/08: added profit center name (AgencyProfitCenterNameExt) -->
      <Input
        id="ProfitCenterName"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.ProfitCenterName"
        value="Policy.ex_Agency.AgencyProfitCenterNameExt"/>
      <Input
        id="ProfitCenter"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.ProfitCenter"
        value="Policy.ex_Agency.ex_AgencyProfitCenter"/>
      <!-- Defect 342 11/15/2007 djohnson  Correct warning/error message  Defect 342 12/11/2007 zthomas - Add new warning message worksheet call -->
      <Input
        editable="!Policy.Verified"
        id="IssuingCompany"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.IssuingCompany"
        onChange="if(Policy.IssuingCompanyExt != &quot;GAAS&quot;){GeneralErrorWorksheet.goInWorkspace(displaykey.Web.IssuingCompany.Warning.Message)}"
        postOnChange="true"
        value="Policy.IssuingCompanyExt"/>
      <!-- validationExpression="(Policy.IssuingCompanyExt == null or Policy.IssuingCompanyExt == &quot;GAAS&quot;) ? null: &quot;The issuing company chosen is not Great American Assurance Company.&quot;"/> -->
      <InputDivider/>
      <!-- OTHER SECTION -->
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other"/>
      <Input
        id="Other_VerifiedPolicy"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.VerifiedPolicy"
        value="Policy.Verified"/>
      <!-- Unverified reason added by Otteson on July 27, 2007 -->
      <TypeKeyInput
        editable="!Policy.Verified and Policy.canEditUnverifiedPolRsn()"
        filter="Policy.filterUnverifiedPolRsn(VALUE)"
        id="Unverified_Reason"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.UnverifiedReason"
        showNoneSelected="false"
        value="Policy.UnverifiedRsnExt"
        visible="!Policy.Verified"/>
      <!-- NAICS code, currency added by Otteson on July 25, 2007 -->
      <TypeKeyInput
        editable="!Policy.Verified"
        filter="(VALUE == &quot;112990&quot; or VALUE == &quot;112920&quot;)"
        id="NAICSCode"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.NAICSCode"
        value="Policy.NAICSCodeExt"/>
      <TypeKeyInput
        editable="!Policy.Verified"
        id="CurrencyType"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CurrencyType"
        required="true"
        showNoneSelected="false"
        value="Policy.CurrencyTypeExt"/>
      <InputDivider/>
    </InputColumn>
    <!-- <Input
      editable="!Policy.Verified"
      id="Other_ForeignCoverage"
      label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.ForeignCoverage"
      value="Policy.ForeignCoverage"/> -->
    <!-- <Input
      editable="!Policy.Verified"
      id="Other_OtherFinancialInterests"
      label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.OtherFinancialInterests"
      value="Policy.FinancialInterests"/> -->
    <!-- <Input
      editable="!Policy.Verified"
      id="Other_Notes"
      label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.Notes"
      value="Policy.Notes"/> -->
    <!-- <ListViewInput
      boldLabel="true"
      def="EditablePolicyReinsuranceLV(Policy)"
      editable="true"
      id="Reinsurances"
      label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Reinsurances"
      labelAbove="true">
      <Toolbar>
        <IteratorButtons/>
      </Toolbar>
    </ListViewInput> -->
    <!-- 10/19/2006 djohnson Commeneted out     
				
				 djohnson Defect 364 remove notes, description 
	   			 Comment out per Santosh's instruction 2007.10.10 -->
    <InputFooterSection>
      <!-- <ListViewInput
        def="EditableEquineLV(Policy)"
        editable="!Policy.Verified"
        id="Properties"
        label="displaykey.GAIC.Equine.NewClaimPolicyGeneralDV.Label"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons/>
          <EditButtons/>
        </Toolbar>
      </ListViewInput> -->
      <!-- rpampush 10/25
				   
			 POLICY-LEVEL COVERAGES SECTION -->
      <ListViewInput
        boldLabel="true"
        def="PolicyCoveragesLV(Policy)"
        editable="!Policy.Verified"
        id="Coverages"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Coverages"
        labelAbove="true"
        mode="Claim.LossType">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
    </InputFooterSection>
    <Code><![CDATA[function getProfitCenterInfo() : java.lang.String {
  if (Policy.ex_Agency.ex_AgencyProfitCenter!=null) {
    return Policy.ex_Agency.ex_AgencyProfitCenter + " Equine Mortality";
  } else {
    return "No Profit Center found for this Policy";
  }
//return Policy.ex_Agency.ex_AgencyProfitCenter + "   " + Claim.LossType + "  " + Policy.PolicyType.Name;
}
	
/*Function resets the claim's PolicyDisconnectedWarningExt value of false.
	  Sprint/Maintenance Release: EM 10 - Defect 1131
	  Author: Zach Thomas
	  Date: 05/20/08
*/
function setShowWarningMessage(){
  if (Claim.displayDisconnectedWarning(policyDisconnectedWarning) and showWarningMessage) {
    showWarningMessage = false;
  }
}
]]></Code>
  </DetailViewPanel>
</PCF>