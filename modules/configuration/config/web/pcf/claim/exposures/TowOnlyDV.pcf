<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="TowOnlyDV">
    <Require
      name="Exposure"
      type="Exposure"/>
    <InputColumn>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Overall"/>
      <Input
        id="Exposure_LossParty"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.LossParty"
        required="true"
        value="Exposure.LossParty"/>
      <RangeInput
        id="Exposure_PrimaryCoverage"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.PrimaryCoverage"
        optionLabel="(Exposure.Coverage.Type!= null and Exposure.Coverage.Policy.Verified) ? Exposure.Coverage.covTypeDisplayName() : VALUE.toString()"
        value="Exposure.PrimaryCoverage"
        valueRange="Exposure.Coverage != null ? Exposure.Coverage.getCoverages() : new java.util.ArrayList()"/>
      <Input
        id="Exposure_CoverageSubType"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.CoverageSubType"
        value="Exposure.CoverageSubType"/>
      <RangeInput
        editable="true"
        helpText="displaykey.Exposure.Coverage.helpText"
        id="Exposure_Coverage"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Coverage"
        optionLabel="VALUE.covTypeDisplayName()"
        value="Exposure.Coverage"
        valueRange="Exposure.Claim.Policy.getCoveragesByCoverageType(Exposure.PrimaryCoverage)"/>
      <Input
        id="AssignedUser_Name"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.AssignedUser"
        value="Exposure.AssigneeDisplayString"/>
      <Input
        id="AssignedGroup_Name"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.AssignedGroup.Name"
        value="Exposure.AssigneeGroupOnlyDisplayString"/>
      <Input
        id="State"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.State"
        value="Exposure.State"/>
      <Input
        id="CreateTime"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.CreateTime"
        value="Exposure.CreateTime"/>
      <InputSet
        visible="Exposure.Claim.Policy.StatCodingEnabled">
        <PolicyStatCodePickerInput
          action="ClaimPolicyStatCodePickerPopup.push(Exposure.Claim)"
          editable="true"
          id="Exposure_StatLine"
          label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.StatLine"
          value="Exposure.StatLine"
          valueRange="Exposure.Claim.Policy.CappedStatCodes"/>
        <InputSet
          hideIfReadOnly="true"
          visible="true">
          <TextInput
            id="StatLine_Warning"
            value="displaykey.Java.StatCodes.StatCodeListCappedWarning(Exposure.Claim.Policy.StatCodeListCap, Exposure.Claim.Policy.StatCodes.length)"
            visible="Exposure.Claim.Policy.StatCodeListCapped"/>
        </InputSet>
      </InputSet>
      <Input
        id="ClosedDate"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.ClosedDate"
        value="Exposure.CloseDate"
        visible="Exposure.State == &quot;closed&quot;"/>
      <Input
        id="ClosedOutcome"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.ClosedOutcome"
        value="Exposure.ClosedOutcome"
        visible="Exposure.State == &quot;closed&quot; "/>
      <Input
        id="ValidationLevel"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.ValidationLevel"
        value="Exposure.ValidationLevel"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant"/>
      <ClaimContactInput
        claim="Exposure.Claim"
        editable="true"
        id="Claimant_Picker"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant.Picker"
        required="true"
        value="Exposure.Claimant"
        valueRange="Exposure.Claim.getRelatedContacts(Exposure.Claim.getContactType(&quot;claimant&quot;))">
        <Reflect
          triggerIds="Exposure_LossParty">
          <ReflectCondition
            condition="VALUE == &quot;insured&quot;"
            value="Exposure.Claim.Insured"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </ClaimContactInput>
      <Input
        editable="true"
        id="Claimant_Type"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant.Type"
        required="true"
        value="Exposure.ClaimantType">
        <Reflect
          triggerIds="Claimant_Picker">
          <ReflectCondition
            condition="Exposure.Claim.Insured==VALUE"
            value="&quot;insured&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        editable="true"
        id="Claimant_ContactPermitted"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant.ContactPermitted"
        value="ContactProhibited"/>
      <Input
        id="Claimant_PrimaryPhone"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant.PrimaryPhone"
        value="Exposure.Claimant.PrimaryPhoneValue">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <Input
        id="Claimant_Address"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant.Address"
        value="Exposure.Claimant.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </Input>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.IncidentOverview"/>
      <RangeInput
        editable="true"
        hideChildrenIfReadOnly="false"
        id="Vehicle_Incident"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.VehicleIncident"
        required="true"
        value="Exposure.VehicleIncident"
        valueRange="Exposure.getVehicleIncidentsWithMatchingLossParty(Exposure.LossParty)">
        <Reflect
          triggerIds="Exposure_LossParty"
          valueRange="Exposure.getVehicleIncidentsWithMatchingLossParty(VALUE)"/>
        <MenuItem
          action="NewVehicleIncidentPopup.push(Exposure.Claim)"
          hideIfReadOnly="true"
          id="TowOnlyDV_NewIncidentMenuItem"
          label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.NewIncident"/>
        <MenuItem
          action="EditVehicleIncidentPopup.push(Exposure.VehicleIncident, true)"
          hideIfReadOnly="true"
          id="TowOnlyDV_EditIncidentMenuItem"
          label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.EditIncident"/>
        <MenuItem
          action="EditVehicleIncidentPopup.push(Exposure.VehicleIncident, false)"
          hideIfEditable="true"
          id="TowOnlyDV_ViewIncidentMenuItem"
          label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.ViewIncident"/>
      </RangeInput>
      <Input
        id="Incident_Driver"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Incident.Driver"
        value="Exposure.VehicleIncident.Driver">
        <Reflect
          triggerIds="Vehicle_Incident"
          value="VALUE.Driver"/>
      </Input>
      <Input
        id="Incident_Description"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Incident.Description"
        value="Exposure.VehicleIncident.Description">
        <Reflect
          triggerIds="Vehicle_Incident"
          value="VALUE.Description"/>
      </Input>
      <Input
        id="Incident_VehicleOperable"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Incident.VehicleOperable"
        value="Exposure.VehicleIncident.VehicleOperable">
        <Reflect
          triggerIds="Vehicle_Incident"
          value="VALUE.VehicleOperable"/>
      </Input>
      <Input
        id="Incident_LossEstimate"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Incident.LossEstimate"
        value="Exposure.VehicleIncident.LossEstimate">
        <Reflect
          triggerIds="Vehicle_Incident"
          value="VALUE.LossEstimate"/>
      </Input>
    </InputColumn>
    <InputColumn>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.AfterTheftRecovery.Exposure.Recovery"/>
      <Input
        editable="true"
        id="Recovery_RecovInd"
        label="displaykey.NVV.Exposure.SubView.TowOnly.AfterTheftRecovery.Exposure.Recovery.RecovInd"
        postOnChange="true"
        value="asVehicleIncident().RecovInd"/>
      <Input
        editable="true"
        id="Recovery_RecovDate"
        label="displaykey.NVV.Exposure.SubView.TowOnly.AfterTheftRecovery.Exposure.Recovery.RecovDate"
        value="asVehicleIncident().RecovDate"
        visible=" asVehicleIncident().RecovInd == &quot;Yes&quot; "/>
      <Input
        editable="true"
        id="Recovery_RecovState"
        label="displaykey.NVV.Exposure.SubView.TowOnly.AfterTheftRecovery.Exposure.Recovery.RecovState"
        value="asVehicleIncident().RecovState"
        visible=" asVehicleIncident().RecovInd == &quot;Yes&quot; "/>
      <Input
        editable="true"
        id="Recovery_RecovCondType"
        label="displaykey.NVV.Exposure.SubView.TowOnly.AfterTheftRecovery.Exposure.Recovery.RecovCondType"
        postOnChange="true"
        value="asVehicleIncident().RecovCondType"
        visible=" asVehicleIncident().RecovInd == &quot;Yes&quot; "/>
      <InputSetRef
        def="AddressInputSet(asVehicleIncident().RecoveryAddressOwner)"
        id="RecoveryAddress"
        mode="asVehicleIncident().RecoveryAddressOwner.InputSetMode"
        visible="asVehicleIncident().RecovInd == YesNo.TC_YES and (asVehicleIncident().RecovCondType != null and asVehicleIncident().RecovCondType != &quot;not_recov&quot;)"/>
      <Input
        editable="true"
        id="Recovery_RecovClassType"
        label="displaykey.NVV.Exposure.SubView.TowOnly.AfterTheftRecovery.Exposure.Recovery.RecovClassType"
        value="asVehicleIncident().RecovClassType"
        visible="asVehicleIncident().RecovInd == &quot;Yes&quot; "/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Coding"/>
      <Input
        id="Exposure_Segment"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Segment"
        value="Exposure.Segment"/>
      <Input
        id="Exposure_Strategy"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Strategy"
        value="Exposure.Strategy"/>
      <Input
        editable="true"
        id="JurisdictionState"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.JurisdictionState"
        value="Exposure.JurisdictionState"
        visible="gw.api.address.CountryAddressFields.DefaultCountryHasStates"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.OtherCarrierInvolvement"/>
      <Input
        editable="true"
        id="Claimant_OtherCoverage"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Claimant.OtherCoverage"
        required="false"
        value="Exposure.OtherCoverage"/>
      <ListViewInput
        def="EditableOtherCoverageDetailsLV(Exposure)"
        editable="true"
        id="OtherCoverageDetails"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.OtherCoverageDetails">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.Financials"/>
      <Input
        formatType="currency"
        id="Exposure_RemainingReserves"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.RemainingReserves"
        value="Exposure.ExposureRpt.RemainingReserves"/>
      <Input
        id="Exposure_FuturePayments"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.FuturePayments"
        value="Exposure.ExposureRpt.FuturePayments"/>
      <Input
        id="Exposure_TotalPayments"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.TotalPayments"
        value="Exposure.ExposureRpt.TotalPayments"/>
      <Input
        id="Exposure_TotalRecoveries"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.TotalRecoveries"
        value="Exposure.ExposureRpt.TotalRecoveries"/>
      <Input
        formatType="currency"
        id="Exposure_TotalIncurredNet"
        label="displaykey.NVV.Exposure.SubView.TowOnly.Exposure.TotalIncurredNet"
        value="Exposure.ExposureRpt.TotalIncurredNet"/>
      <InputDivider/>
    </InputColumn>
    <Code><![CDATA[
function asVehicleIncident() : VehicleIncident {
        return Exposure.Incident as VehicleIncident;
      }
      
property get ContactProhibited() : boolean {
    return Exposure.Claim.getClaimContact(Exposure.Claimant).ContactProhibited
}
  
property set ContactProhibited(prohibited : boolean) {
  var claimContact = Exposure.Claim.getClaimContact(Exposure.Claimant) 
  if (claimContact != null) claimContact.ContactProhibited = prohibited 
}
      
    ]]></Code>
  </DetailViewPanel>
</PCF>