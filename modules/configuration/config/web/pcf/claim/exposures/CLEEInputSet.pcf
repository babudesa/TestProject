<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <InputSet
    id="CLEEInputSet">
    <Require
      name="Claim"
      type="Claim"/>
    <Variable
      initialValue="cleeAddedByUser()"
      name="addedByUser"
      recalculateOnRefresh="true"
      type="Boolean"/>
    <Variable
      initialValue="util.WCHelper.isWCorELLossType(Claim)"
      name="isWCClaim"
      type="Boolean"/>
    <Label
      label="displaykey.NVV.Claim.LossDetailsWorkersComp.CLEEInfo"
      visible="isWCClaim || Claim.Policy.CLEEIndicatorExt == true OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO"/>
    <RangeInput
      editable="true"
      id="CLEE"
      label="&quot;CLEE&quot;"
      newValue="new CLEEExt()"
      optionLabel="CurrentLocation.InEditMode ? Claim.formatCLEEDropdownValues(VALUE)  : Claim.formatSavedCLEEValue(VALUE) "
      required="Claim.Policy.Verified &amp;&amp; Claim.Policy.CLEEIndicatorExt &amp;&amp; !Claim.IncidentReport"
      validationExpression="Claim.CLEEExt!=null &amp;&amp; Claim.CLEEExt.CodeExt==null ? &quot;Missing required field \&quot;CLEE Code\&quot;&quot; : null"
      value="Claim.CLEEExt"
      valueRange="Claim.Policy.CLEECodesExt"
      valueWidth="250"
      visible="(isWCClaim || Claim.Policy.CLEEIndicatorExt == true  OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO)//Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt) or Claim.CLEEExt == null"/>
    <Input
      available="Claim.CLEEExt!=null and !Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt)//Claim.CLEEExt.New"
      editable="true"
      id="CLEECode"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.CLEECode"
      numCols="10"
      required="Claim.Policy.Verified &amp;&amp; Claim.Policy.CLEEIndicatorExt &amp;&amp; !Claim.IncidentReport"
      validationExpression="Claim.CLEEExt!=null &amp;&amp; (Claim.CLEEExt.CodeExt==null or Claim.CLEEExt.CodeExt.equals(&quot;&quot;) or Claim.CLEEExt.CodeExt.equals(&quot;New...&quot;)) ? &quot;Missing required field \&quot;CLEE Code\&quot;&quot; : null"
      value="Claim.CLEEExt.CodeExt"
      visible="(isWCClaim || Claim.Policy.CLEEIndicatorExt == true  OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO)">
      <Reflect
        available="VALUE !=null and !Claim.Policy.CLEECodesExt.contains(VALUE)"
        triggerIds="CLEE"
        value="VALUE.CodeExt"/>
    </Input>
    <Input
      available="Claim.CLEEExt!=null and !Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt)//Claim.CLEEExt.New"
      editable="true || addedByUser"
      id="CLEELocation"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.CLEELocation"
      required="false"
      value="Claim.CLEEExt.CLEELocationExt"
      visible="isWCClaim || (Claim.Policy.CLEEIndicatorExt == true OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO)">
      <Reflect
        available="VALUE !=null and !Claim.Policy.CLEECodesExt.contains(VALUE)"
        triggerIds="CLEE"
        value="VALUE.CLEELocationExt"/>
    </Input>
    <Input
      available="Claim.CLEEExt!=null and !Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt)//Claim.CLEEExt.New"
      editable="true || addedByUser"
      id="CLEEDescription1"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.CLEEDescOne"
      required="false"
      value="Claim.CLEEExt.DescriptionOneExt"
      visible="isWCClaim || (Claim.Policy.CLEEIndicatorExt == true OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO)">
      <Reflect
        available="VALUE !=null and !Claim.Policy.CLEECodesExt.contains(VALUE)"
        triggerIds="CLEE"
        value="VALUE.DescriptionOneExt"/>
    </Input>
    <Input
      available="Claim.CLEEExt!=null and !Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt)//Claim.CLEEExt.New"
      editable="true || addedByUser"
      id="CLEEDescription2"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.CLEEDescTwo"
      required="false"
      value="Claim.CLEEExt.DescriptionTwoExt"
      visible="isWCClaim || (Claim.Policy.CLEEIndicatorExt == true OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO)">
      <Reflect
        available="VALUE !=null and !Claim.Policy.CLEECodesExt.contains(VALUE)"
        triggerIds="CLEE"
        value="VALUE.DescriptionTwoExt"/>
    </Input>
    <Input
      available="Claim.CLEEExt!=null and !Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt)//Claim.CLEEExt.New"
      editable="true || addedByUser"
      id="CLEEDescription3"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.CLEEDescThree"
      required="false"
      value="Claim.CLEEExt.DescriptionThreeExt"
      visible="isWCClaim || (Claim.Policy.CLEEIndicatorExt == true OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO)">
      <Reflect
        available="VALUE !=null and !Claim.Policy.CLEECodesExt.contains(VALUE)"
        triggerIds="CLEE"
        value="VALUE.DescriptionThreeExt"/>
    </Input>
    <InputDivider
      visible="isWCClaim || Claim.Policy.CLEEIndicatorExt == true OR Claim.LossType == LossType.TC_ALTMARKETSAUTO OR Claim.LossType == LossType.TC_SHSAUTO"/>
    <Label
      label="displaykey.NVV.Claim.LossDetailsWorkersComp.SpecialClaimHandling"
      visible="isWCClaim || Claim.Policy.SpecialClmHandlingExt == true"/>
    <BooleanRadioInput
      editable="true"
      id="SCHA_Indicator"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.SpecClaimInstructions"
      value="Claim.SpecClaimHandlingExt"
      visible="isWCClaim || Claim.Policy.SpecialClmHandlingExt == true"/>
    <TextInput
      available="true//Claim.Policy.SpecialClmHandlingExt==true || Claim.SpecClaimHandlingExt==true "
      editable="true"
      formatType="currency"
      id="SCHA_Threshold"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.SpecClaimHandlingThreshold"
      maxChars="15"
      numCols="15"
      validationExpression="(Claim.SpecClaimThresholdExt != null &amp;&amp; Claim.SpecClaimThresholdExt % 1 != 0) ? &quot;must be a whole dollar amount.&quot; : null"
      value="Claim.SpecClaimThresholdExt"
      visible="Claim.isWCclaim ? (!CurrentLocation.InEditMode and Claim.SpecClaimHandlingExt == false ? false : true) : false">
      <Reflect
        custom="javascript:updateSpecialClaimHandlingInstructionsApplysVisibility();//window.REFLECTOR.parentNode.parentNode.style.display= (VALUE == &quot;true&quot;) ? &quot;&quot; : &quot;none&quot;;"
        triggerIds="SCHA_Indicator">
        <ReflectCondition
          condition="VALUE==false"
          value="null"/>
      </Reflect>
    </TextInput>
    <TextInput
      editable="true"
      formatType="currency"
      id="SCHA_Threshold_NonWC"
      label="displaykey.NVV.Claim.SubView.LossDetailsWorkersComp.Claim.SpecClaimHandlingThreshold"
      maxChars="15"
      numCols="15"
      validationExpression="(Claim.SpecClaimThresholdExt != null &amp;&amp; Claim.SpecClaimThresholdExt % 1 != 0) ? &quot;must be a whole dollar amount.&quot; : null"
      value="Claim.SpecClaimThresholdExt"
      visible="!Claim.isWCclaim and (Claim.Policy.SpecialClmHandlingExt==true || Claim.SpecClaimHandlingExt==true)"/>
    <!-- Needed to access Claim.Policy.SpecialClmHandlingExt in the visibility JavaScript -->
    <HiddenInput
      id="Policy_SCHA_Indicator"
      value="Claim.Policy.SpecialClmHandlingExt ? &quot;true&quot; : &quot;false&quot;"/>
    <InputDivider
      visible="(isWCClaim || Claim.Policy.SpecialClmHandlingExt == true) &amp;&amp; Claim.LossType!=LossType.TC_SPECIALTYES"/>
    <Code><![CDATA[uses gw.api.util.DateUtil


function cleeAddedByUser() : Boolean {
   return !Claim.Policy.CLEECodesExt.contains(Claim.CLEEExt)
}
/*
function setSpecialClaimHandling(){
  if(CurrentLocation.InEditMode && Claim.SpecClaimHandlingExt==null){
    Claim.SpecClaimHandlingExt = Claim.Policy.SpecialClmHandlingExt
  }
}
*/]]></Code>
    <!-- <Reflect
      available="VALUE==true"
      triggerIds="AttRep"/> -->
    <!-- <Reflect
      available="VALUE==true"
      triggerIds="AttRep"/> -->
  </InputSet>
</PCF>