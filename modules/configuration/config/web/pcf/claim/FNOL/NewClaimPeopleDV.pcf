<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- The next name value view controls screen 4 of the claim wizard where we enter the contacts for a claim.
There is an outstanding reqques to differentiate these by business line.
    This file automatically generated from nvv_claim.xml -->
  <DetailViewPanel
    id="NewClaimPeopleDV">
    <Require
      name="Claim"
      type="Claim"/>
    <Variable
      initialValue="((Claim.maincontact == Claim.reporter and Claim.MainContactType == Claim.ReportedByType) || (Claim.maincontact == null and Claim.MainContactType == null))"
      name="mainContactSamePerson"
      type="boolean"/>
    <Variable
      name="contact"
      type="Contact"/>
    <Variable
      initialValue="util.WCHelper.isWCorELLossType(Claim)"
      name="isWCClaim"
      type="Boolean"/>
    <InputColumn>
      <Label
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedBy"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="ReportedBy_Name"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedBy.Name"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        showSearchInMenu="false"
        value="Claim.reporter"
        valueRange="Claim.getRelatedPersonsPlusAgency()"
        visible="!isWCClaim"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="ReportedBy_Name"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedBy.Name"
        newContactMenu="ClaimPersonPickerMenuItemSet"
        onChange="if (Claim.reporter!=Claim.Insured) {Claim.ReportedByType=null};if (Claim.reporter==Claim.Insured) {Claim.ReportedByType=&quot;Self&quot;}"
        postOnChange="true"
        showSearchInMenu="false"
        value="Claim.reporter"
        valueRange="Claim.getRelatedPersonsPlusAgency()"
        visible="isWCClaim"/>
      <Input
        editable="true"
        id="Claim_ReportedByType"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedByType"
        value="Claim.ReportedByType">
        <Reflect
          triggerIds="ReportedBy_Name">
          <ReflectCondition
            condition="VALUE==null"
            value="&quot;&quot;"/>
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        id="ReportedBy_WorkPhone"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedBy.WorkPhone"
        value="util.custom_Ext.finders.getPeopleInvolvedPhoneNumber(Claim.getClaimContact(Claim.reporter))">
        <Reflect
          triggerIds="ReportedBy_Name"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <Input
        id="ReportedBy_Address"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedBy.Address"
        value="Claim.Reporter.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="ReportedBy_Name"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </Input>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.MainContact"/>
      <BooleanRadioInput
        editable="true"
        falseLabel="displaykey.Web.BasicInfoScreen.BasicInfoDetailViewPanel.SamePerson.False.Label"
        id="MainContactChoice"
        label="displaykey.Web.BasicInfoScreen.BasicInfoDetailViewPanel.SamePerson.Label"
        onChange="if (mainContactSamePerson) {Claim.maincontact = (Claim.reporter as Person);  Claim.MainContactType = Claim.ReportedByType;} else {Claim.maincontact = null;  Claim.MainContactType = null;}"
        postOnChange="true"
        stacked="true"
        trueLabel="displaykey.Web.BasicInfoScreen.BasicInfoDetailViewPanel.SamePerson.True.Label"
        value="mainContactSamePerson"
        visible="false"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="MainContact_Name"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.MainContact.Name"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        showSearchInMenu="false"
        value="Claim.maincontact"
        valueRange="Claim.getRelatedPersonsPlusAgency()"
        visible="!isWCClaim"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="MainContact_Name"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.MainContact.Name"
        newContactMenu="ClaimPersonPickerMenuItemSet"
        onChange="if (Claim.maincontact!=Claim.Insured) {Claim.MainContactType=null};if (Claim.maincontact==Claim.Insured) {Claim.MainContactType=&quot;Self&quot;}"
        postOnChange="true"
        showSearchInMenu="false"
        value="Claim.maincontact"
        valueRange="Claim.getRelatedPersonsPlusAgency()"
        visible="isWCClaim"/>
      <HiddenInput
        id="HiddenInsured"
        inputConversion="tools.KeyEncoder.decodeFromString(VALUE)"
        outputConversion="VALUE == null ? null : tools.KeyEncoder.encodeIdToString(VALUE)"
        value="Claim.Insured"/>
      <Input
        editable="true"
        id="Claim_MainContactType"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.ReportedByType"
        value="Claim.MainContactType">
        <Reflect
          triggerIds="MainContact_Name">
          <ReflectCondition
            condition="VALUE==null"
            value="&quot;&quot;"/>
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </Input>
      <Input
        id="MainContact_WorkPhone"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.MainContact.WorkPhone"
        value="util.custom_Ext.finders.getPeopleInvolvedPhoneNumber(Claim.getClaimContact(Claim.maincontact))">
        <Reflect
          triggerIds="MainContact_Name"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <Input
        id="MainContact_Address"
        label="displaykey.NVV.Claim.NewClaimPeople.Claim.MainContact.Address"
        value="Claim.Maincontact.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="MainContact_Name"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </Input>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Claim.NewClaimPeople.Policy.Insured"/>
      <ClaimContactInput
        claim="Claim"
        id="Insured_Name"
        label="displaykey.NVV.Claim.NewClaimPeople.Policy.Insured.Name"
        value="Claim.Insured"
        valueRange="Claim.RelatedContacts"/>
      <Input
        id="Insured_WorkPhone"
        label="displaykey.NVV.Claim.NewClaimPeople.Policy.Insured.WorkPhone"
        value="util.custom_Ext.finders.getPeopleInvolvedPhoneNumber(Claim.getClaimContact(Claim.Insured))">
        <Reflect
          triggerIds="Insured_Name"
          value="VALUE.PrimaryPhoneValue"/>
      </Input>
      <Input
        id="Insured_Address"
        label="displaykey.NVV.Claim.NewClaimPeople.Policy.Insured.Address"
        value="Claim.Insured.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="Insured_Name"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </Input>
    </InputColumn>
    <InputColumn
      id="InjuredWorkerColumn">
      <Label
        label="displaykey.NVV.Claim.SubView.NewClaimLossDetailsWorkersComp.Claim.Claimant.Picker"
        visible="isWCClaim"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Claimant_Name"
        label="displaykey.NVV.Claim.SubView.NewClaimLossDetailsWorkersComp.Claim.Claimant.Name"
        newContactMenu="ClaimNewInjuredWorkerOnlyPickerMenuItemSet"
        onChange="Claim.claimant = Claim.InjuredWorker"
        onPick="Claim.claimant = Claim.InjuredWorker"
        postOnChange="true"
        required="true"
        showSearchInMenu="false"
        value="Claim.InjuredWorker"
        valueRange="Claim.injuredWorkers"
        visible="isWCClaim &amp;&amp; Claim.InjuredWorker == null"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Claimant_Name"
        label="displaykey.NVV.Claim.SubView.NewClaimLossDetailsWorkersComp.Claim.Claimant.Name"
        onChange="Claim.claimant = Claim.InjuredWorker"
        onPick="Claim.claimant = Claim.InjuredWorker"
        postOnChange="true"
        required="true"
        showSearchInMenu="false"
        value="Claim.InjuredWorker"
        valueRange="Claim.injuredWorkers"
        visible="isWCClaim &amp;&amp; Claim.InjuredWorker != null"/>
      <Input
        id="V_EIN"
        label="displaykey.NVV.Claim.SubView.NewClaimLossDetailsWorkersComp.Claim.Claimant.TaxNumber"
        onChange="Claim.claimant.setMedicare()"
        postOnChange="true"
        validationExpression="Claim.claimant.validateTaxID()"
        value="Claim.claimant != null  ? (Claim.claimant.TaxID!=null ? TAXINFO.replaceAll(Claim.claimant.TaxID.substring(0, 5),&quot;*****&quot;) : null):null"
        visible="isWCClaim"/>
    </InputColumn>
    <Code><![CDATA[property get TAXINFO() : String {return util.crypto.Encryptor.maskString(Claim.claimant.TaxID, Claim.claimant.ssnISEditable(claim, CurrentLocation.InEditMode), CurrentLocation.InEditMode)}
property set TAXINFO(taxID : String) { Claim.claimant.TaxID = taxID }]]></Code>
  </DetailViewPanel>
</PCF>