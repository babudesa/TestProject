<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="NewClaimPolicyGeneralDV"
    mode="Bonds">
    <Require
      name="Policy"
      type="Policy"/>
    <Variable
      initialValue="Policy.ex_Agency"
      name="Agency"
      type="ex_Agency"/>
    <InputColumn>
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Basics"/>
      <Input
        editable="!Policy.Verified"
        id="PolicyNumber"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondNumber"
        required="true"
        validationExpression="Policy.validatePolicyNumber()"
        value="Policy.PolicyNumber"/>
      <Input
        editable="!Policy.Verified"
        id="PolicyMod"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondMod"
        required="true"
        value="Policy.PolicySuffix"/>
      <!-- sdalal Equine Sprint 2 10/25/06 - Policy Version -->
      <Input
        editable="!Policy.Verified"
        id="PolicyVersion"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondVersion"
        required="true"
        value="Policy.ex_PolicyVersion"/>
      <Input
        id="Type"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondType"
        required="true"
        value="Policy.PolicyType"/>
      <Input
        editable="!Policy.Verified"
        id="EffectiveDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.EffectiveDate"
        onChange="Policy.covDatesWarning()"
        postOnChange="true"
        required="true"
        validationExpression="Policy.validatePolDates()"
        value="Policy.EffectiveDate"/>
      <Input
        editable="!Policy.Verified"
        id="ExpirationDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ExpirationDate"
        onChange="Policy.covDatesWarning()"
        postOnChange="true"
        required="true"
        validationExpression="Policy.validatePolDates()"
        value="Policy.ExpirationDate"/>
      <Input
        editable="!Policy.Verified"
        id="CancellationDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CancellationDate"
        value="Policy.CancellationDate"/>
      <!-- sdalal Equine Sprint 3 11/29/06 - added Policy Reinstatement and commented Org Effective -->
      <Input
        editable="!Policy.Verified"
        id="ReinstatementDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ReinstatementDate"
        value="Policy.ex_ReinstatementDate"/>
      <!-- <Input
        editable="!Policy.Verified"
        id="OrigEffectiveDate"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.OrigEffectiveDate"
        value="Policy.OrigEffectiveDate"/> -->
      <Input
        editable="!Policy.Verified"
        id="Status"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondStatus"
        value="Policy.Status"/>
      <TypeKeyInput
        editable="!Policy.Verified"
        id="policystate_typekeyinput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondState"
        value="Policy.PolicyStateExt"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured"/>
      <!-- <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Insured_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Principal.Name"
        required="true"
        validationExpression="(Policy.Insured.PrimaryAddress == null) ? null : (Policy.Insured.PrimaryAddress.AddressLine1 == null || Policy.Insured.PrimaryAddress.City == null || Policy.Insured.PrimaryAddress.State == null || Policy.Insured.PrimaryAddress.PostalCode == null) ? &quot; Insured Address, when entered, must contain Line1, City , State and Zip.&quot; : null"
        value="Policy.Insured"
        valueRange="Policy.Claim.relatedContacts"/> -->
      <!-- New insured menu items below added sprint 7 Eric Rawe  Defect 1370 8/31/09 erawe:changed valueRange on Insured to limit display to only Insured -->
      <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Insured_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Principal.Name"
        newContactMenu="ClaimNewInsuredPickerMenuItemSet"
        required="true"
        showSearchInMenu="false"
        validationExpression="(Policy.Insured.PrimaryAddress == null) ? null : (Policy.Insured.PrimaryAddress.AddressLine1 == null || Policy.Insured.PrimaryAddress.City == null || (Policy.Insured.PrimaryAddress.State == null and (Policy.Insured.PrimaryAddress.Country==&quot;US&quot; || Policy.Insured.PrimaryAddress.Country==&quot;CA&quot;)) || Policy.Insured.PrimaryAddress.PostalCode == null) ? &quot; Insured Address, when entered, must contain Line1, City , State and Zip.&quot; : null"
        value="Policy.Insured"
        valueRange="Policy.policyInsuredList()"/>
      <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="DBA"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.DBA"
        newContactMenu="ClaimNewCompanyOnlyPickerMenuItemSet"
        showSearchInMenu="false"
        value="Policy.DoingBusinessAs"
        valueRange="Policy.policyDoingBusinessAsList()"
        visible="Policy.CommercialPolicy"/>
      <ListViewInput
        def="EditableMoreNamedInsuredLV(Policy.getMNICoveredParties(), Policy.Claim, Policy, &quot;coveredparty&quot;)"
        editable="!Policy.Verified"
        id="MoreNamedInsured"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.MoreNamedInsureds"
        validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()"
        visible="Policy.Verified">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
      <Input
        id="Insured_Address"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Address"
        value="Policy.Insured.getPrimaryAddressDisplayValue()">
        <Reflect
          triggerIds="Insured_Name"
          value="VALUE.getPrimaryAddressDisplayValue()"/>
      </Input>
      <!-- <TypeKeyInput
        editable="!Policy.Verified"
        id="PFT"
        label="displaykey.GAIC.NVV.Policy.SubView.PolicyGeneral.Policy.PrimaryFarmType"
        value="Policy.PrimaryFarmTypeExt"/> -->
      <!-- <TypeKeyInput
        editable="!Policy.Verified"
        id="OFT"
        label="displaykey.GAIC.NVV.Policy.SubView.PolicyGeneral.Policy.OtherFarmType"
        value="Policy.OtherFarmTypeExt"/> -->
      <TypeKeyInput
        editable="!Policy.Verified &amp;&amp; Policy.insured != null"
        id="Insured_LegalCategory"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Insured.LegalCategory"
        value="Policy.insured.LegalCategoryExt"/>
      <Input
        editable="!Policy.Verified"
        id="Account"
        label="displaykey.GAIC.NVV.Policy.SubView.PolicyGeneral.Policy.CustomerCode"
        required="false"
        value="Policy.Account"/>
      <!-- <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="PolicyHolder"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.PolicyHolder"
        value="Policy.PolicyHolder"
        valueRange="Policy.Claim.relatedContacts"
        visible="Policy.CommercialPolicy"/> -->
      <!-- Will only display for Commercial policies -->
      <InputDivider/>
    </InputColumn>
    <InputColumn>
      <ListViewInput
        boldLabel="true"
        def="EditableAdditionalInsuredLV(Policy.getNonMNICoveredParties(), Policy.Claim, Policy, &quot;coveredparty&quot;)"
        editable="!Policy.Verified"
        id="AdditionalInsured"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.AdditionalInsured"
        validationExpression="Policy.checkCoveredPartyConstraints().formatUserMessage()"
        visible="Policy.Verified">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
      <InputDivider
        visible="Policy.Verified"/>
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent"/>
      <Input
        editable="!Policy.Verified"
        id="ProducerCode"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.ProducerCode"
        onChange="Policy.ex_Agency=util.gaic.prm.PRMPluginFunctions.getProducerFromPRM(Policy.ProducerCode);Policy.updateAgencyRoles(Policy.ex_Agency);"
        postOnChange="true"
        required="true"
        validationExpression="(Policy.ProducerCode != null AND !Policy.ProducerCode.matches(&quot;\\d{6}&quot;)) ? displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Validation.ProducerCode : null"
        value="Policy.ProducerCode"/>
      <ClaimContactInput
        claim="Policy.Claim"
        id="Agent_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.Name"
        value="Policy.ex_Agency"
        valueRange="Policy.Claim.getAgencies()"/>
      <Input
        id="AgentAAPAuthorityInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.AAPAuthority"
        value="Policy.ex_Agency.ex_AAPAuthority"/>
      <Input
        formatType="exactNumber"
        id="AgentAAPLimitInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.AAPLimit"
        outputConversion="util.StringUtils.removeDecimal(CurrentLocation.InEditMode, VALUE as java.lang.Double)"
        validationExpression="Policy.ex_Agency.ex_AAPAuthorityLimit == null || (Policy.ex_Agency.ex_AAPAuthorityLimit.intValue() == Policy.ex_Agency.ex_AAPAuthorityLimit) ? null : displaykey.Java.Validation.Number.NotAnInteger"
        value="Policy.ex_Agency.ex_AAPAuthorityLimit"/>
      <Input
        id="AgentLossCheckInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.LossCheckCopy"
        value="Policy.ex_Agency.ex_LossCheckCopy"/>
      <Input
        id="AgentExpenseCheckInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Agent.ExpenseCheckCopy"
        value="Policy.ex_Agency.ex_ExpenseCheckCopy"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting"/>
      <ClaimContactInput
        claim="Policy.Claim"
        editable="!Policy.Verified"
        id="Underwriter_Name"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriter.Name"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="false"
        showSearchInMenu="false"
        value="Policy.underwriter"
        valueRange="Policy.Claim.RelatedPersonArray"/>
      <Input
        editable="!Policy.Verified"
        id="Underwriting_Company"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.Company"
        value="Policy.UnderwritingCo"
        visible="false"/>
      <Input
        editable="!Policy.Verified"
        id="Underwriting_Group"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.Group"
        value="Policy.UnderwritingGroup"
        visible="false"/>
      <Input
        editable="false //!Policy.Verified"
        id="ProfitCenterNameInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.ProfitCenterName"
        value="Policy.ex_Agency.AgencyProfitCenterNameExt"/>
      <Input
        editable="false // !Policy.Verified"
        id="ProfitCenterInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.ProfitCenter"
        value="Policy.ex_Agency.ex_AgencyProfitCenter"/>
      <Input
        editable="!Policy.Verified"
        id="IssuingCompanyInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.IssuingCompany"
        value="Policy.IssuingCompanyExt"/>
      <InputDivider/>
      <Label
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other"/>
      <!-- <Input
        id="TypeOfBondInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.TypeOfBond"/> -->
      <!-- <Input
        id="BondsCategoryInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.BondsCategory"/> -->
      <Input
        id="Other_VerifiedPolicy"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.VerifiedPolicy"
        value="Policy.Verified"/>
      <TypeKeyInput
        editable="!Policy.Verified and Policy.canEditUnverifiedPolRsn()"
        filter="Policy.filterUnverifiedPolRsn((VALUE as String))"
        id="UnverifiedReasonTypeKeyInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.UnverifiedReason"
        required="true"
        value="Policy.UnverifiedRsnExt"
        visible="!Policy.Verified"/>
      <TypeKeyInput
        editable="!Policy.Verified"
        filter="VALUE == &quot;112990&quot; or VALUE == &quot;112920&quot;"
        id="NAICSCodeTypeKeyInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.NAICSCode"
        value="Policy.NAICSCodeExt"/>
      <TypeKeyInput
        editable="!Policy.Verified"
        id="CurrencyTypeTypeKeyInput"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.CurrencyType"
        required="true"
        showNoneSelected="false"
        value="Policy.CurrencyTypeExt"/>
      <Input
        editable="!Policy.Verified"
        id="Other_ForeignCoverage"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.ForeignCoverage"
        value="Policy.ForeignCoverage"
        visible="false"/>
      <Input
        editable="!Policy.Verified"
        id="Other_OtherFinancialInterests"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.OtherFinancialInterests"
        value="Policy.FinancialInterests"
        visible="false"/>
      <Input
        editable="!Policy.Verified"
        id="Other_AssignedRisk"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.AssignedRisk"
        value="Policy.AssignedRisk"
        visible="false"/>
      <Input
        editable="!Policy.Verified"
        id="Other_Notes"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Other.Notes"
        value="Policy.Notes"
        visible="false"/>
    </InputColumn>
    <InputFooterSection>
      <ListViewInput
        boldLabel="true"
        def="PolicyCoveragesLV(Policy)"
        editable="!Policy.Verified"
        id="Coverages"
        label="displaykey.NVV.Policy.SubView.PolicyGeneral.Policy.Coverages"
        labelAbove="true"
        mode="Policy.Claim.LossType">
        <Toolbar>
          <IteratorButtons/>
        </Toolbar>
      </ListViewInput>
    </InputFooterSection>
  </DetailViewPanel>
</PCF>