<%@ params( appCode : String, defs : java.lang.Iterable<gw.datatype.codegen.DataTypeDef> ) %>package com.guidewire.<%= appCode.toLowerCase() %>.metadata.datatype;

/**
 * Utility class that provides type-safe access to the internally-defined datatypes.
 * <p/>
 * <em>NOTE: This class is generated by the gen-datatypes task. Please don't edit it by hand.</em>
 */
public class <%= appCode.toUpperCase() %>DataTypes {
  
  // Prevent instantiation
  private <%= appCode.toUpperCase() %>DataTypes() {
  }
  
<% 
for( def in defs.toCollection().orderBy( \ d -> d.Name ) )
{
  for( method in def.Methods )
  {
%>  public static gw.datatype.IDataType <%= method.Name %>(<%= method.Parameters.map( \ p -> p.Type.Name + " " + p.Name ).join( ", " ) %>) {
<%
    if( method.Parameters.Empty )
    {
%>    return gw.datatype.DataTypes.get("<%= def.Name %>", java.util.Collections.<String, String>emptyMap());
<%  }
    else
    {
%>    com.google.common.collect.ImmutableMap.Builder<String, String> mapBuilder = com.google.common.collect.ImmutableMap.builder();
<%
    for( p in method.Parameters )
    {
      if( p.Type.Primitive )
      {
%>    mapBuilder.put("<%= p.Name %>", String.valueOf(<%= p.Name %>));
<%
      }
      else
      {
%>    if (<%= p.Name %> != null) {
      mapBuilder.put("<%= p.Name %>", String.valueOf(<%= p.Name %>));
    }
<%
      }
    }
%>    return gw.datatype.DataTypes.get("<%= def.Name %>", mapBuilder.build());
<%  
    }
%>  }

<%
  }
}
%>}
