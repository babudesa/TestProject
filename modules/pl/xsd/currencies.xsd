<?xml version="1.0"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/currencies" xmlns="http://guidewire.com/currencies">

  <xsd:simpleType name="RoundingMode">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="CEILING"/>
      <xsd:enumeration value="DOWN"/>
      <xsd:enumeration value="FLOOR"/>
      <xsd:enumeration value="HALF_DOWN"/>
      <xsd:enumeration value="HALF_EVEN"/>
      <xsd:enumeration value="HALF_UP"/>
      <xsd:enumeration value="UNNECESSARY"/>
      <xsd:enumeration value="UP"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:element name="Currencies">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <!--<xsd:element ref="CurrencyFormatProfile" minOccurs="0" maxOccurs="unbounded"/>-->
        <xsd:element ref="CurrencyType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="CurrencyFormat">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded"/>
      <xsd:attribute name="negativePattern" type="xsd:string" use="required"/>
      <xsd:attribute name="positivePattern" type="xsd:string" use="required"/>
      <xsd:attribute name="zeroValue" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>
  
  <!-- Defines a currency format profile to use in certain situations. -->
  <!--<xsd:element name="CurrencyFormatProfile">-->
    <!--<xsd:complexType>-->
      <!--<xsd:choice minOccurs="0" maxOccurs="unbounded"/>-->
      <!-- TODO: copy javadoc from CurrencyFormatProfile -->
      <!--<xsd:attribute name="fractionDigits" type="xsd:integer"/>-->
      <!--<xsd:attribute name="name" type="xsd:NMTOKEN" use="required"/>-->
      <!-- Number of digits to move the decimal separator left (i.e. divide by 10^n). This change-->
           <!--to the value is applied before other attributes in the profile. For example, a newScale-->
           <!--of 3 would change 234,325.00 to 234.32 (i.e. to display in "thousands", and assuming-->
           <!--the default RoundingMode.HALF_EVEN and storageScale is 2). Mutates the BigDecimal-->
           <!--value. -->
      <!--<xsd:attribute name="newScale" type="xsd:integer"/>-->
      <!-- Level at which to round the value, expressed as the number of digits to the left of-->
           <!--the decimal separator <b>after the newScale is applied</b>. For example, to round-->
           <!--to the nearest thousands (but still display the full number), set roundingLevel to-->
           <!--3 (234,317.00 becomes 234,000.00). Mutates the BigDecimal value. -->
      <!--<xsd:attribute name="roundingLevel" type="xsd:integer"/>-->
      <!-- TODO: copy javadoc from CurrencyFormatProfile -->
      <!--<xsd:attribute name="roundingMode" type="RoundingMode"/>-->
    <!--</xsd:complexType>-->
  <!--</xsd:element>-->
  
  <xsd:element name="CurrencyType">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="CurrencyFormat" minOccurs="0" maxOccurs="1"/>
        <!--<xsd:element ref="CurrencyFormatProfile" minOccurs="0" maxOccurs="unbounded"/>-->
      </xsd:choice>
      <xsd:attribute name="code" type="xsd:NMTOKEN" use="required"/>
      <xsd:attribute name="desc" type="xsd:string" use="required"/>
      <!-- Number of decimal places to store in the database. See BigDecimal. Must be
           equal to appscale or scale of MoneyDataType in fieldvalidators.xml -->
      <xsd:attribute name="storageScale" type="xsd:integer"/>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>