<?xml version="1.0"?>
<!-- ************************************* IMPORTANT ********************************************************************
     If this schema is changed in a way such that the changes cannot be implemented by simply creating the new ojbects,
    you must increment the final static int UpgraderInstrumentation.EXPECTEDUPGRADESCHEMAVERSION, which will force
    all these tables to be dropped and recreated.
  ************************************* IMPORTANT ********************************************************************

  TODO: Think about a unique index. (UpgradePhaseID, Name, PostUpgrade) doesn't work because many triggers are used for multiple tables 
  ### ============================================================================
  ###  DBMS-specific performance info for in upgrade version triggers
  ### ============================================================================ -->
<entity
  xmlns="http://guidewire.com/datamodel"
  admin="true"
  cacheable="false"
  desc="DBMS-specific performance information for an upgrade phase."
  entity="UpgradePhaseDBMSDump"
  exportable="false"
  extendable="false"
  instrumentationtable="true"
  javaClass="com.guidewire.pl.system.upgrader.UpgradePhaseDBMSDump"
  loadable="false"
  platform="true"
  size="small"
  table="upgradephasedbmsdump"
  type="keyable">
  <implementsEntity
    name="TimedUpgraderObject"/>
  <foreignkey
    columnName="UpgradePhaseID"
    desc="Parent"
    fkentity="UpgradePhase"
    name="UpgradePhase"
    nullok="false"/>
  <column
    desc="query"
    name="Contents"
    nullok="false"
    type="text">
    <columnParam
      name="logicalSize"
      value="2000000000"/>
  </column>
</entity>
