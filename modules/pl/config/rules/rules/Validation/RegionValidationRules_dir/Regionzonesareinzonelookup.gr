package rules.Validation.RegionValidationRules_dir

@gw.rules.RuleName("Region zones are in zone lookup")
internal class Regionzonesareinzonelookup {
  static function doCondition(region : entity.Region) : boolean {
    return /*start00rule*/true/*end00rule*/
  }

  static function doAction(region : entity.Region, actions : gw.rules.Action) {
/*start00rule*/uses gw.api.util.StringUtil;
uses gw.api.util.ArrayUtil;

var badRegionZones : RegionZone[] = Region.validateZones();
if (badRegionZones != null && badRegionZones.length != 0) {
  var badZonesStr =  new String[badRegionZones.length];
  var i : int = 0;
  while (i < badRegionZones.length) {
    badZonesStr[i] = badRegionZones[i].Code;
    i = i + 1;
  }

  if (Region.getOrganization() != null) {
    Region.reject( null, null, "loadsave", displaykey.Rules.Validation.Region.NoZonesInOrgOrLookupDataset + ArrayUtil.toString( badZonesStr));
  } else {
    Region.reject( null, null, "loadsave", displaykey.Rules.Validation.Region.NoZonesInLookupDataset + ArrayUtil.toString( badZonesStr));
  }
}/*end00rule*/
  }
}
