package gw.sampledata
uses gw.transaction.Bundle
uses java.util.Date

@Export
class SampleRefTables extends SampleDataBase {

  construct(inCache : SampleDataCache) {
    super(inCache)
  }

  // used by datagen to generate the wc calcuations reference data
  construct() {
    super(new SampleDataCache())
  }

  // used by datagen to generate the wc calcuations reference data
  function loadForDatagen() {
    gw.transaction.Transaction.runWithNewBundle( \ bundle -> {
      testSampleData(bundle)})
  }
  
  override property get Description() : String {
    return "Reference Tables"
  }
    
  override function testSampleData(bundle : Bundle) {

    var wcBenefitParameterSetRate2008_DE = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("DE")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(197.42)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withTPDMin(0)
      .withPPDMin(197.42)
      .withPPDMax(592.25)
      .withTTDMax(592.25)
      .withTTDMin(197.42)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(592.25)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(592.25)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-DE")
      .withRetroactivePeriod(7)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("DC")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(0)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withTPDMin(0)
      .withPPDMin(332)
      .withPPDMax(1288)
      .withTTDMax(1288)
      .withTTDMin(322)
      .withWPNotAppliedToPTD(true)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(1288)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(false)
      .withTPDMax(1288)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(true)
      .withPublicId("rate:2008-DC")
      .withRetroactivePeriod(14)
      .create(bundle)


    var wcBenefitParameterSetRate2008_FL = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("FL")
      .withPPDPercentOfWages(0)
      .withPTDMin(20)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(20)
      .withPPDMax(746)
      .withTTDMax(746)
      .withTTDMin(20)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(746)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(746)
      .withTPDPercentOfWages(80)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-FL")
      .withRetroactivePeriod(21)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("GA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(50)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(50)
      .withPPDMax(500)
      .withTTDMax(500)
      .withTTDMin(50)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(500)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(334)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-GA")
      .withRetroactivePeriod(21)
      .create(bundle)


    var wcBenefitParameterSetRate2008_IL = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("IL")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(436.64)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withTPDMin(0)
      .withPPDMin(200)
      .withPPDMax(636.15)
      .withTTDMax(1164.37)
      .withTTDMin(200)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(1164.37)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(1164.37)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-IL")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("MD")
      .withPPDPercentOfWages(33.3333)
      .withPTDMin(25)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withTPDMin(0)
      .withPPDMin(50)
      .withPPDMax(114)
      .withTTDMax(877)
      .withTTDMin(50)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(877)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(439)
      .withTPDPercentOfWages(50)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-MD")
      .withRetroactivePeriod(14)
      .create(bundle)


    var wcBenefitParameterSetRate2008_NJ = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("NJ")
      .withPPDPercentOfWages(0)
      .withPTDMin(198)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(70)
      .withTTDPercentOfWages(70)
      .withWaitingPeriodDays(7)
      .withPPDMin(35)
      .withPPDMax(742)
      .withTTDMax(742)
      .withTTDMin(198)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(742)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(false)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-NJ")
      .withRetroactivePeriod(7)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("NY")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(100)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(100)
      .withPPDMax(500)
      .withTTDMax(500)
      .withTTDMin(100)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(500)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(500)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-NY")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("NC")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(30)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(30)
      .withPPDMax(786)
      .withTTDMax(786)
      .withTTDMin(30)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(786)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(false)
      .withTPDMax(786)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-NC")
      .withRetroactivePeriod(21)
      .create(bundle)


    var wcBenefitParameterSetRate2008_PA = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("PA")
      .withPPDPercentOfWages(66.6667)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withPPDMax(807)
      .withTTDMax(807)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(807)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(false)
      .withTPDMax(807)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-PA")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("SC")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(75)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(75)
      .withPPDMax(661.29)
      .withTTDMax(661.29)
      .withTTDMin(75)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(661.29)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(661.29)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-SC")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("TN")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(106.95)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(106.95)
      .withPPDMax(713)
      .withTTDMax(784)
      .withTTDMin(106.95)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(713)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(false)
      .withTPDMax(784)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-TN")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("VA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(204)
      .withPPDMinAdjToAWW(true)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(7)
      .withTPDMin(0)
      .withPPDMin(204)
      .withPPDMax(816)
      .withTTDMax(816)
      .withTTDMin(204)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(false)
      .withPTDMax(816)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(816)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-VA")
      .withRetroactivePeriod(21)
      .create(bundle)


    var wcBenefitParameterSetRate2008_CT = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CT")
      .withPPDPercentOfWages(75)
      .withPTDMin(215)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(75)
      .withTTDPercentOfWages(75)
      .withWaitingPeriodDays(3)
      .withTPDMin(0)
      .withPPDMin(0)
      .withPPDMax(853)
      .withTTDMax(1077)
      .withTTDMin(215)
      .withWPNotAppliedToPTD(false)
      .withTPDMinAdjToAWW(true)
      .withPTDMax(1077)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(true)
      .withTPDMax(1077)
      .withTPDPercentOfWages(75)
      .withPTDMinAdjToAWW(true)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-CT")
      .withRetroactivePeriod(7)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(126)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withPPDMin(105)
      .withPPDMax(250)
      .withTTDMax(728)
      .withTTDMin(126)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(728)
      .withEndDate(Date.createDateInstance(12, 31, 2004))
      .withStartDate(Date.createDateInstance(1, 1, 2004))
      .withTTDMinAdjToAWW(false)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2004-CA")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(126)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withPPDMin(105)
      .withPPDMax(270)
      .withTTDMax(840)
      .withTTDMin(126)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(840)
      .withEndDate(Date.createDateInstance(12, 31, 2005))
      .withStartDate(Date.createDateInstance(1, 1, 2005))
      .withTTDMinAdjToAWW(false)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2005-CA")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(126)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withPPDMin(130)
      .withPPDMax(270)
      .withTTDMax(840)
      .withTTDMin(126)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(840)
      .withEndDate(Date.createDateInstance(12, 31, 2006))
      .withStartDate(Date.createDateInstance(1, 1, 2006))
      .withTTDMinAdjToAWW(false)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2006-CA")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(132.25)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withPPDMin(130)
      .withPPDMax(270)
      .withTTDMax(881.66)
      .withTTDMin(132.25)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(881.66)
      .withEndDate(Date.createDateInstance(12, 31, 2007))
      .withStartDate(Date.createDateInstance(1, 1, 2007))
      .withTTDMinAdjToAWW(false)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2007-CA")
      .withRetroactivePeriod(14)
      .create(bundle)


    var wcBenefitParameterSetRate2008_CA = new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(137.45)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withPPDMin(130)
      .withPPDMax(270)
      .withTTDMax(916.33)
      .withTTDMin(137.45)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(916.33)
      .withEndDate(Date.createDateInstance(12, 31, 2008))
      .withStartDate(Date.createDateInstance(1, 1, 2008))
      .withTTDMinAdjToAWW(false)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2008-CA")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitParameterSetBuilder()
      .withJurisdictionState("CA")
      .withPPDPercentOfWages(66.6667)
      .withPTDMin(143.7)
      .withPPDMinAdjToAWW(false)
      .withPTDPercentOfWages(66.6667)
      .withTTDPercentOfWages(66.6667)
      .withWaitingPeriodDays(3)
      .withPPDMin(130)
      .withPPDMax(270)
      .withTTDMax(958.01)
      .withTTDMin(143.7)
      .withWPNotAppliedToPTD(false)
      .withPTDMax(958.01)
      .withEndDate(Date.createDateInstance(12, 31, 2009))
      .withStartDate(Date.createDateInstance(1, 1, 2009))
      .withTTDMinAdjToAWW(false)
      .withTPDPercentOfWages(66.6667)
      .withPTDMinAdjToAWW(false)
      .withWPNotAppliedToPPD(false)
      .withPublicId("rate:2009-CA")
      .withRetroactivePeriod(14)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(true)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_CT)
      .withPublicId("cc_content:9")
      .withAppliesToPPD(true)
      .withAppliesToTTD(true)
      .withFactorCategory("WeeklyWage")
      .withDetailedFactor("aftertaxearnings")
      .withAppliesToPTD(true)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(true)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_FL)
      .withPublicId("cc_content:10")
      .withAppliesToPPD(false)
      .withAppliesToTTD(false)
      .withFactorCategory("Override")
      .withDetailedFactor("other")
      .withFactorComment("FL formula pays 80% of (80% pre-injury less 100% of post-injury pay)")
      .withAppliesToPTD(false)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(true)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_PA)
      .withPublicId("cc_content:12")
      .withAppliesToPPD(true)
      .withAppliesToTTD(true)
      .withFactorCategory("Override")
      .withDetailedFactor("other")
      .withFactorComment("To handle Minimums")
      .withAppliesToPTD(true)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(false)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_IL)
      .withPublicId("cc_content:13")
      .withAppliesToPPD(true)
      .withAppliesToTTD(true)
      .withFactorCategory("Override")
      .withDetailedFactor("other")
      .withFactorComment("Minimum based upon dependents")
      .withAppliesToPTD(false)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(false)
      .withFactorValue(70)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_FL)
      .withPublicId("cc_content:16")
      .withAppliesToPPD(true)
      .withAppliesToTTD(false)
      .withFactorCategory("WorkerFactor")
      .withDetailedFactor("age")
      .withAppliesToPTD(false)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(false)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_FL)
      .withPublicId("cc_content:17")
      .withAppliesToPPD(false)
      .withAppliesToTTD(true)
      .withFactorCategory("Offset")
      .withDetailedFactor("offsets_ss_ui")
      .withAppliesToPTD(false)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(false)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_DE)
      .withPublicId("cc_content:31")
      .withAppliesToPPD(false)
      .withAppliesToTTD(true)
      .withFactorCategory("DateRelated")
      .withDetailedFactor("countdayofinjury")
      .withAppliesToPTD(true)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(false)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_DE)
      .withPublicId("cc_content:32")
      .withAppliesToPPD(false)
      .withAppliesToTTD(true)
      .withFactorCategory("MaxDuration")
      .withDetailedFactor("duration")
      .withAppliesToPTD(true)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(true)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_NJ)
      .withPublicId("cc_content:33")
      .withAppliesToPPD(false)
      .withAppliesToTTD(false)
      .withFactorCategory("Override")
      .withDetailedFactor("other")
      .withFactorComment("NJ does not have TPD")
      .withAppliesToPTD(false)
      .create(bundle)


    new gw.api.databuilder.WCBenefitFactorDetailBuilder()
      .withAppliesToTPD(true)
      .onWCBenefitParameterSet(wcBenefitParameterSetRate2008_CA)
      .withPublicId("cc_content:36")
      .withAppliesToPPD(false)
      .withAppliesToTTD(true)
      .withFactorCategory("WaitingPeriod")
      .withDetailedFactor("other")
      .withFactorComment("Waived if the EE is hospitalized, if caused by a criminal act, or if EE is eligible for Labor Code Section 4800")
      .withAppliesToPTD(false)
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("thirdparty")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:9")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("nofault")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:10")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("thirdparty")
      .withPrimaryCoverage("GL")
      .withPublicId("cc_content:12")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("nofault")
      .withPrimaryCoverage("GL")
      .withPublicId("cc_content:13")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("thirdparty")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:16")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("nofault")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:17")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("0")
      .withPrimaryCoverage("GL")
      .withPublicId("cc_content:31")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("0")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:32")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("0")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:33")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("thirdparty")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:37")
      .withPolicyType("auto_comm")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("0")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:38")
      .withPolicyType("auto_comm")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("nofault")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:39")
      .withPolicyType("auto_comm")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForFaultBuilder()
      .withFaultRating("thirdparty")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:40")
      .withPolicyType("auto_comm")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("animal")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:101")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("fire")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:102")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("loadingdamage")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:103")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("vandalism")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:104")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("riotandcivil")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:105")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("theftentire")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:106")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("theftparts")
      .withPrimaryCoverage("ABI")
      .withPublicId("cc_content:107")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("animal")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:108")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("fire")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:109")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("loadingdamage")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:110")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("vandalism")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:111")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("riotandcivil")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:112")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("theftentire")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:113")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("theftparts")
      .withPrimaryCoverage("COLL")
      .withPublicId("cc_content:114")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("vehcollision")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:115")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("trainbuscoll")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:116")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("leftcollision")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:117")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("bikecollision")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:118")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("fixedobjcoll")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:119")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("otherobjcoll")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:120")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("pedcollision")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:121")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("rearend")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:122")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("rollover")
      .withPrimaryCoverage("COMP")
      .withPublicId("cc_content:123")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("animal")
      .withPrimaryCoverage("UDIM")
      .withPublicId("cc_content:124")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("animal")
      .withPrimaryCoverage("UIM")
      .withPublicId("cc_content:125")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("animal")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:126")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("fire")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:127")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("loadingdamage")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:128")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("vandalism")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:129")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("riotandcivil")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:130")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("theftentire")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:131")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.InvalidCoverageForCauseBuilder()
      .withLOBCode("auto")
      .withLossCause("theftparts")
      .withPrimaryCoverage("APD")
      .withPublicId("cc_content:132")
      .withLossType("AUTO")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("COLL")
      .withPublicId("cc_content:1")
      .withNewExposureCoverage("COMP")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("COMP")
      .withPublicId("cc_content:2")
      .withNewExposureCoverage("COLL")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("APD")
      .withPublicId("cc_content:3")
      .withNewExposureCoverage("COMP")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("COMP")
      .withPublicId("cc_content:4")
      .withNewExposureCoverage("APD")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("ABI")
      .withPublicId("cc_content:5")
      .withNewExposureCoverage("COMP")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("GL")
      .withPublicId("cc_content:6")
      .withNewExposureCoverage("COMP")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("COMP")
      .withPublicId("cc_content:7")
      .withNewExposureCoverage("GL")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("COMP")
      .withPublicId("cc_content:8")
      .withNewExposureCoverage("ABI")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:63")
      .withNewExposureCoverage("PIPDTH")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:64")
      .withNewExposureCoverage("PIPEXMED")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:65")
      .withNewExposureCoverage("PIPFUN")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:66")
      .withNewExposureCoverage("PIPIL")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:67")
      .withNewExposureCoverage("PIPMED")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:68")
      .withNewExposureCoverage("PIPADD")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("MPAY")
      .withPublicId("cc_content:69")
      .withNewExposureCoverage("PIPRHB")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPDTH")
      .withPublicId("cc_content:71")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPEXMED")
      .withPublicId("cc_content:72")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPFUN")
      .withPublicId("cc_content:73")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPRHB")
      .withPublicId("cc_content:77")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPDTH")
      .withPublicId("cc_content:79")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPDTH")
      .withPublicId("cc_content:80")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPEXMED")
      .withPublicId("cc_content:81")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPEXMED")
      .withPublicId("cc_content:82")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPFUN")
      .withPublicId("cc_content:83")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPFUN")
      .withPublicId("cc_content:84")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPRHB")
      .withPublicId("cc_content:91")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPRHB")
      .withPublicId("cc_content:92")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPIL")
      .withPublicId("cc_content:95")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPIL")
      .withPublicId("cc_content:96")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPIL")
      .withPublicId("cc_content:97")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPMED")
      .withPublicId("cc_content:98")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPMED")
      .withPublicId("cc_content:99")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPMED")
      .withPublicId("cc_content:100")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPADD")
      .withPublicId("cc_content:101")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPADD")
      .withPublicId("cc_content:102")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIPADD")
      .withPublicId("cc_content:103")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIP")
      .withPublicId("cc_content:104")
      .withNewExposureCoverage("MPAY")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIP")
      .withPublicId("cc_content:105")
      .withNewExposureCoverage("UDIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.IncompatibleNewExposureBuilder()
      .withExistingExposures("PIP")
      .withPublicId("cc_content:106")
      .withNewExposureCoverage("UIM")
      .withPolicyType("auto_per")
      .create(bundle)


    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("pr")
      .withTreatyType("prop")
      .withThresholdValue(1000000)
      .withPolicyType("homeowners")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("DWL"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("OS"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("PPD"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("SPP"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("LU"))
      .withLossCause( new gw.api.databuilder.ReinsuranceLossCauseBuilder()
        .withLossCause("fire"))
      .withLossCause( new gw.api.databuilder.ReinsuranceLossCauseBuilder()
        .withLossCause("burglary"))
      .create(bundle)


    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("pr")
      .withTreatyType("liab")
      .withThresholdValue(1000000)
      .withPolicyType("homeowners")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("LIABMP"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("PLI"))
      .create(bundle)


    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("auto")
      .withTreatyType("liab")
      .withThresholdValue(1000000)
      .withPolicyType("auto_per")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("ABI"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("APD"))
      .create(bundle)

    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("auto")
      .withTreatyType("liab")
      .withThresholdValue(1000000)
      .withPolicyType("auto_comm")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("HIREDABI"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("HIREDAPD"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("NONOWNEDABI"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("NONOWNEDAPD"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("APD"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("ABI"))
      .create(bundle)

    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("pr")
      .withTreatyType("prop")
      .withThresholdValue(1000000)
      .withPolicyType("prop_comm")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("BLDG"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("CONT"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("EXTEXP"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("BUSLOSTINC"))
      .withLossCause( new gw.api.databuilder.ReinsuranceLossCauseBuilder()
        .withLossCause("fire"))
      .withLossCause( new gw.api.databuilder.ReinsuranceLossCauseBuilder()
        .withLossCause("burglary"))
      .create(bundle)


    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("pr")
      .withTreatyType("liab")
      .withThresholdValue(1000000)
      .withPolicyType("prop_comm")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("LGLLIAB"))
      .create(bundle)


    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("gl")
      .withTreatyType("liab")
      .withThresholdValue(1000000)
      .withPolicyType("gen_liability")
      .withReportingThreshold(75)
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("GL"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("LQRLIAB"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("POLLLIAB"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("ADPERINJ"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("PRDWDRWL"))
      .withCoverageType( new gw.api.databuilder.ReinsuranceCoverageBuilder()
        .withCoverage("EMPBENLIAB"))
      .create(bundle)


    new gw.api.databuilder.ReinsuranceThresholdBuilder()
      .withLossType("wc")
      .withTreatyType("wc")
      .withThresholdValue(1000000)
      .withPolicyType("comp")
      .withReportingThreshold(75)
      .create(bundle)
  }
  
  override function demoSampleData(bundle : Bundle) {
    super.demoSampleData( bundle )
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_BUSINESSOWNERS )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(25000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_BUSINESSOWNERS )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(25000) )
      .create(bundle)                    
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_AUTO_COMM )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(50000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_AUTO_COMM )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(50000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_PROP_COMM )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(100000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_PROP_COMM )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(100000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_FARMOWNERS )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(10000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_FARMOWNERS )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(10000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_GEN_LIABILITY )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(50000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_GEN_LIABILITY )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(50000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_HOMEOWNERS )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(10000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_HOMEOWNERS )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(10000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_INLANDMARINE )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(25000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_INLANDMARINE )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(25000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_AUTO_PER )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(20000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_AUTO_PER )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(20000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_PROF_LIABILITY )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(100000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_PROF_LIABILITY )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(100000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_COMP )
      .withNotificationType( LargeLossNotificationType.TC_CC )
      .withThresholdValue( new java.math.BigDecimal(50000) )
      .create(bundle)
    
    new gw.api.databuilder.LargeLossThresholdBuilder()
      .withPolicyType( PolicyType.TC_COMP )
      .withNotificationType( LargeLossNotificationType.TC_PS )
      .withThresholdValue( new java.math.BigDecimal(25000) )
      .create(bundle)                     
  }
}
