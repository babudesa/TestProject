package gw.sampledata
uses gw.transaction.Bundle
uses gw.api.databuilder.VehicleCoverageBuilder
uses gw.api.databuilder.PersonBuilder
uses gw.api.databuilder.ClaimBuilder
uses gw.api.databuilder.PolicyBuilder
uses gw.api.databuilder.VehicleRUBuilder
uses gw.api.databuilder.VehicleBuilder
uses gw.api.databuilder.ExposureBuilder
uses gw.api.databuilder.IncidentBuilder
uses gw.api.databuilder.VehicleIncidentBuilder
uses gw.api.databuilder.InjuryIncidentBuilder
uses java.util.Date


@Export
class SampleClaimsForPCIntegration extends SampleDataBase {

  construct(inCache : SampleDataCache) {
    super(inCache)
  }

  override property get Description() : String {
    return "Personal Auto Claims and associated Contacts, Policies, Exposures, Notes, ClaimContacts, Activities and Financials for PC integration"
  }
    
  override function testSampleData(bundle : Bundle) {
    create(bundle)
  }
     
  function create(bundle : Bundle)  {
    var lossDateBaseDate = Date.Today.addYears(-2)
    createClaim1(bundle, lossDateBaseDate)
    createClaim2WithFinancials(bundle, lossDateBaseDate)
    createClaim3(bundle, lossDateBaseDate)
    createClaim4WithFinancials(bundle, lossDateBaseDate)
    createClaim5WithFinancials(bundle, lossDateBaseDate)
    createClaim6WC(bundle, lossDateBaseDate)
  }   

  function createClaim1(bundle : Bundle, lossDateBaseDate : Date) {
    var contactDemoSample3038 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Kinman")
      .withFirstName("Bill")
      .withPrimaryPhone("work")
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry("US")
        .withPostalCode("94404")
        .withState("CA")
        .withAddressType("home")
        .withCity("San Mateo"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var claim = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather("CL")
      .withAssignmentStatus("assigned")
      .withLossDate(lossDateBaseDate.addMonths(6))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy("auto_fast")
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged("neverflagged")
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("345 Fir Lane")
        .withCountry("US")
        .withPostalCode("91352")
        .withState("CA")
        .withAddressType("home")
        .withCity("La Canada"))
      .withLossCause("vehcollision")
      .withClaimNumber("235-53-425888")
      .withMainContactType("self")
      .withReportedByType("self")
      .withLossType("AUTO")
      .withValidationLevel("newloss")
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(274))
        .withUnderwritingCo("parent")
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup("acme_auto")
        .withEffectiveDate(BaseDate.addDays(-90))
        .withStatus("inforce")
        .withPolicyNumber("4775949863-01")
        .withTotalProperties(0)
        .withPolicyType("auto_per")
        .withTotalVehicles(2)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1997)
            .withLicensePlate("1HGJ465")
            .withMake("Saturn")
            .withState("CA")
            .withModel("SL")
            .withVin("1GV234TV347463377")))
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(2)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1996)
            .withLicensePlate("2GDH967")
            .withMake("Toyota")
            .withState("CA")
            .withModel("Corolla")
            .withVin("3DGF78575GD892577")))
        .withContactInRole(contactDemoSample3038, "insured"))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState("CA")
      .withSegment("auto_low")
      .withReportedDate(BaseDate.addDays(-115))
      .withCoverageInQuestion(false)
      .withLOBCode("auto")
      .withDescription("Car plowed into a fire hydrant")
      .closed()
      .withCloseDate(BaseDate.addDays(-1))
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(contactDemoSample3038, "maincontact")
      .withContactInRole(contactDemoSample3038, "reporter")
      .withPermissionRequired(ClaimSecurityType.TC_UNSECUREDCLAIM)
      .create(bundle)

    var claimInfoDemoSample22 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:22")
      .withClaimNumber("235-53-425888")
      .onClaim(claim)
      .create(bundle)

    var policyPeriodDemoSample70015 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample22))
      .withPolicyPeriodType("policy")
      .withExpirationDate(BaseDate.addDays(274))
      .withPolicyNumber("4775949863-01")
      .withPolicyType("auto_per")
      .withEffectiveDate(BaseDate.addDays(-90))
      .create(bundle)

    var exposureDemoSample70021 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_fast")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("APD")
      .withSegment("auto_low")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(1)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim)
      .withCoverageSubType("apd_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSeverity("minor")
        .withDriverRelation("self")
        .withDescription("Minor damage")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1992)
          .withLicensePlate("1HGJ465")
          .withMake("Hyundai")
          .withState("CA")
          .withModel("Excel")
          .withVin("1GV234TV347463988"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample3038, "driver"))
      .withContactInRole(contactDemoSample3038, "claimant")
      .create(bundle)

    var exposureDemoSample11002 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("PersonalPropertyDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("contents_fast")
      .withBreakIn(true)
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("CONT")
      .withSegment("contents_low")
      .withClaimantType("insured")
      .withLocked(false)
      .withClaimOrder(2)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim)
      .withCoverageSubType("cont_ppd")
      .withIncident( new gw.api.databuilder.MobilePropertyIncidentBuilder()
        .withSeverity("minor")
        .withDescription("The car stereo was stolen after the accident"))
      .withContactInRole(contactDemoSample3038, "claimant")
      .create(bundle)
  }

  function createClaim2WithFinancials(bundle : Bundle, lossDateBaseDate : Date) {
    var billKinman2 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Kinman")
      .withFirstName("Bill")
      .withPrimaryPhone("work")
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry("US")
        .withPostalCode("94404")
        .withState("CA")
        .withAddressType("home")
        .withCity("San Mateo"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var coverageDemoSample10 = new gw.api.databuilder.VehicleCoverageBuilder()
        .withIncidentLimit(300000)
        .withType("ABI")
        .withExposureLimit(150000)
        .create(bundle)

    var contactDemoSample10020 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withFirstName("Karen")
      .withPrimaryPhone("work")
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry("US")
        .withPostalCode("91352")
        .withState("CA")
        .withAddressType("home")
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)

    var claim1 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather("CL")
      .withAssignmentStatus("assigned")
      .withLossDate(lossDateBaseDate.addMonths(9))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy("auto_normal")
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged("neverflagged")
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("506 2nd Ave.")
        .withCountry("US")
        .withPostalCode("92101")
        .withState("CA")
        .withAddressType("home")
        .withCity("San Diego"))
      .withLossCause("vehcollision")
      .withClaimNumber("235-53-425889")
      .withMainContactType("self")
      .withReportedByType("other")
      .withLossType("AUTO")
      .withValidationLevel("newloss")
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(74))
        .withUnderwritingCo("parent")
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup("acme_auto")
        .withEffectiveDate(BaseDate.addDays(-290))
        .withStatus("inforce")
        .withPolicyNumber("4775949863-01")
        .withTotalProperties(0)
        .withPolicyType("auto_per")
        .withTotalVehicles(1)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(2002)
            .withLicensePlate("2GDH967")
            .withMake("Pontiac")
            .withState("CA")
            .withModel("Grand Prix")
            .withVin("3DGF78575GD891525"))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000)
            .withType("COLL")
            .withDeductible(0))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000)
            .withType("COMP")
            .withDeductible(0))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(150000)
            .withType("APD"))
          .withCoverage(coverageDemoSample10)
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(1000)
            .withType("MPAY")))
        .withContactInRole(billKinman2, "insured"))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState("CA")
      .withSegment("auto_mid")
      .withReportedDate(BaseDate.addDays(-3))
      .withCoverageInQuestion(false)
      .withLOBCode("auto")
      .withDescription("Insured swerved to avoid an animal, struck claimant's car head-on")
      .closed()
      .withCloseDate(BaseDate.addDays(-1))
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(billKinman2, "checkpayee")
      .withContactInRole(billKinman2, "maincontact")
      .withContactInRole(billKinman2, "reporter")
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic("general")
        .withAuthoringDate(BaseDate.addDays(-2))
        .withSubject("Initial phone call with insured")
        .withAuthor(findUserByUserName("cclark"))
        .withBody("Insured claims he swerved to avoid a dog in the road, then hit an oncoming car in the other lane."))
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic("general")
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Initial phone call with claimant")
        .withAuthor(findUserByUserName("aapplegate"))
        .withBody("Spoke to claimant - he was hospitalized due to a fracture in a bone behind his eye and is under observation, and may need to undergo surgery.  Because claimant does not have other insurance, authorized a check to cover vehicle towing and initial hospital stay."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus("assigned")
        .withAssignmentDate(BaseDate.addDays(-3))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance("notOnCalendar")
        .withCloseDate(BaseDate.addDays(-1))
        .withMandatory(true)
        .withPriority("high")
        .withActivityClass("task")
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType("general")
        .withEscalationDate(BaseDate.addDays(4))
        .withStatus("complete")
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(-1)))
      .withPermissionRequired(ClaimSecurityType.TC_SENSITIVECLAIM)
      .create(bundle)

    var claimInfoDemoSample23 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:23")
      .withClaimNumber("235-53-425889")
      .onClaim(claim1)
      .create(bundle)

    var policyPeriodDemoSample70016 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample23))
      .withPolicyPeriodType("policy")
      .withExpirationDate(BaseDate.addDays(54))
      .withPolicyNumber("4775949863-01")
      .withPolicyType("auto_per")
      .withEffectiveDate(BaseDate.addDays(-290))
      .create(bundle)

    var aggregateLimitDemoSample90007 = new gw.api.databuilder.AggregateLimitBuilder()
      .withLimitAmount(300000)
      .withCoverageLine( new gw.api.databuilder.CoverageLineLimitBuilder()
        .withCoverageLine( new gw.api.databuilder.CoverageLineBuilder()
          .withExposureUnitNumber(1)
          .withCoverageType("ABI")
          .withCoverageSubtype("VehicleCoverage")
          .withCoverage(new gw.api.databuilder.LineCoverageBuilder().withCoverage(coverageDemoSample10))
          .onPolicyPeriod(policyPeriodDemoSample70016)) )
      .withLimitType("lossdate")
      .onPolicyPeriod(policyPeriodDemoSample70016)
      .create(bundle)

    var exposureDemoSample11005 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_fast")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("COLL")
      .withSegment("auto_low")
      .withClaimantType("insured")
      .withClaimOrder(1)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim1)
      .withCoverageSubType("coll_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(40)
        .withSeverity("moderate-auto")
        .withCollisionPoint("front")
        .withDriverRelation("self")
        .withDescription("Damage to bumper and front panels")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1993)
          .withLicensePlate("7FDG745")
          .withMake("Mercury")
          .withState("CA")
          .withModel("Sable")
          .withVin("6GYF54637HD645370"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10020, "driver"))
      .withContactInRole(contactDemoSample10020, "claimant")
      .create(bundle)

    var exposureDemoSample11006 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("third_party")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_normal")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("APD")
      .withSegment("auto_mid")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(2)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim1)
      .withCoverageSubType("apd_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(30)
        .withSeverity("major-auto")
        .withCollisionPoint("front")
        .withDriverRelation("self")
        .withDescription("Severely crumpled front end, not driveable")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(2003)
          .withLicensePlate("2GDH967")
          .withMake("BMW")
          .withState("CA")
          .withModel("355i")
          .withVin("3DGF78575GD892534"))
        .withOwnersPermission(true)
        .withContactInRole(billKinman2, "driver"))
      .withContactInRole(billKinman2, "claimant")
      .create(bundle)

    var exposureDemoSample11007 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("third_party")
      .withExposureType("BodilyInjuryDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("injury_normal")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("ABI")
      .withSegment("injury_mid")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(3)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim1)
      .withCoverageSubType("abi_bid")
      .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
        .withGeneralInjuryType("specific")
        .withSeverity("major-injury")
        .withDescription("Bruises and lacerations to face and neck, broken orbital bone, potential vision loss")
        .withMedicalTreatmentType("hospital")
        .withDetailedInjuryType("58")
        .withLostWages(true)
        .withBodyPart( new gw.api.databuilder.BodyPartDetailsBuilder()
          .withPrimaryBodyPart("head")
          .withOrdering(100))
        .withContactInRole(billKinman2, "injured"))
      .withContactInRole(billKinman2, "claimant")
      .create(bundle)

    var transactionSetDemoSample20006 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus("approved")
      .onClaim(claim1)
      .create(bundle)

    var transactionSetDemoSample20007 = new gw.api.databuilder.ReserveSetBuilder()
      .withApprovalDate(BaseDate.addDays(-2))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus("approved")
      .onClaim(claim1)
      .create(bundle)

    var reserveLineDemoSample14 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11005)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withClaim(claim1)
      .create(bundle)

    var reserveLineDemoSample15 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11006)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withClaim(claim1)
      .create(bundle)

    var reserveLineDemoSample16 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11007)
      .withCostType("claimcost")
      .withCostCategory("medical")
      .withClaim(claim1)
      .create(bundle)

    var checkDemoSample10106 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim1)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount("default")
      .onCheckSet(transactionSetDemoSample20006)
      .withPayTo("William Weeks")
      .withStatus("issued")
      .withPaymentMethod("check")
      .withCheckNumber("11059")
      .withPayee((new gw.api.databuilder.CheckPayeeBuilder().withPayee(billKinman2)
        .withPayeeType("claimant")) as gw.api.databuilder.ValueGenerator<CheckPayee>)
      .withType("primary")
      .create(bundle)

    var transactionDemoSample10016 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample14)
      .onExposure(exposureDemoSample11005)
      .onTransactionSet(transactionSetDemoSample20007)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim1)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0)
        .withReportingAmount(2500)
        .withClaimAmount(2500)
        .withTransactionAmount(2500)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample10017 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample15)
      .onExposure(exposureDemoSample11006)
      .onTransactionSet(transactionSetDemoSample20007)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim1)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0)
        .withReportingAmount(5000)
        .withClaimAmount(5000)
        .withTransactionAmount(5000)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample10018 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample16)
      .onExposure(exposureDemoSample11007)
      .onTransactionSet(transactionSetDemoSample20007)
      .withCostType("claimcost")
      .withCostCategory("medical")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim1)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization costs")
        .withClaimForExAmount(0)
        .withReportingAmount(12000)
        .withClaimAmount(12000)
        .withTransactionAmount(12000)
        .withLineCategory("doctor")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample20014 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample15)
      .onTransactionSet(transactionSetDemoSample20006)
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .onCheck(checkDemoSample10106)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample11006)
      .withCostType("claimcost")
      .onClaim(claim1)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Towing and inspection")
        .withClaimForExAmount(0)
        .withReportingAmount(300)
        .withClaimAmount(300)
        .withTransactionAmount(300)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample20015 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample16)
      .onTransactionSet(transactionSetDemoSample20006)
      .withCostCategory("medical")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .onCheck(checkDemoSample10106)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample11007)
      .withCostType("claimcost")
      .onClaim(claim1)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization and examination")
        .withClaimForExAmount(0)
        .withReportingAmount(9000)
        .withClaimAmount(9000)
        .withTransactionAmount(9000)
        .withLineCategory("doctor")
        .withReportingForExAmount(0))
      .create(bundle)
  }

  function createClaim3(bundle : Bundle, lossDateBaseDate : Date) {
   var contactDemoSample3039 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Kinman")
      .withFirstName("Bill")
      .withPrimaryPhone("work")
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry("US")
        .withPostalCode("94404")
        .withState("CA")
        .withAddressType("home")
        .withCity("San Mateo"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var claim3 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather("CL")
      .withAssignmentStatus("assigned")
      .withLossDate(lossDateBaseDate.addYears(1).addMonths(3))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy("auto_fast")
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged("neverflagged")
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("345 Fir Lane")
        .withCountry("US")
        .withPostalCode("91352")
        .withState("CA")
        .withAddressType("home")
        .withCity("La Canada"))
      .withLossCause("vehcollision")
      .withClaimNumber("235-53-425891")
      .withMainContactType("self")
      .withReportedByType("self")
      .withLossType("AUTO")
      .withValidationLevel("newloss")
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(274))
        .withUnderwritingCo("parent")
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup("acme_auto")
        .withEffectiveDate(BaseDate.addDays(-90))
        .withStatus("inforce")
        .withPolicyNumber("4775949863-02")
        .withTotalProperties(0)
        .withPolicyType("auto_per")
        .withTotalVehicles(2)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1997)
            .withLicensePlate("1HGJ465")
            .withMake("Saturn")
            .withState("CA")
            .withModel("SL")
            .withVin("1GV234TV347463377")))
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(2)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1996)
            .withLicensePlate("2GDH967")
            .withMake("Toyota")
            .withState("CA")
            .withModel("Corolla")
            .withVin("3DGF78575GD892577")))
        .withContactInRole(contactDemoSample3039, "insured"))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState("CA")
      .withSegment("auto_low")
      .withReportedDate(BaseDate.addDays(-115))
      .withCoverageInQuestion(false)
      .withLOBCode("auto")
      .withDescription("Car plowed into a fire hydrant")
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(contactDemoSample3039, "maincontact")
      .withContactInRole(contactDemoSample3039, "reporter")
      .create(bundle)

    var claimInfoDemoSample24 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:24")
      .withClaimNumber("235-53-425891")
      .onClaim(claim3)
      .create(bundle)

    var policyPeriodDemoSample70017 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample24))
      .withPolicyPeriodType("policy")
      .withExpirationDate(BaseDate.addDays(354))
      .withPolicyNumber("4775949863-02")
      .withPolicyType("auto_per")
      .withEffectiveDate(BaseDate.addDays(-40))
      .create(bundle)

    var exposureDemoSample70023 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_fast")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("APD")
      .withSegment("auto_low")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(1)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim3)
      .withCoverageSubType("apd_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSeverity("minor")
        .withDriverRelation("self")
        .withDescription("Minor damage")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1992)
          .withLicensePlate("1HGJ465")
          .withMake("Hyundai")
          .withState("CA")
          .withModel("Excel")
          .withVin("1GV234TV347463988"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample3039, "driver"))
      .withContactInRole(contactDemoSample3039, "claimant")
      .create(bundle)

    var exposureDemoSample11004 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("PersonalPropertyDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("contents_fast")
      .withBreakIn(true)
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("CONT")
      .withSegment("contents_low")
      .withClaimantType("insured")
      .withLocked(false)
      .withClaimOrder(2)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim3)
      .withCoverageSubType("cont_ppd")
      .withIncident( new gw.api.databuilder.MobilePropertyIncidentBuilder()
        .withSeverity("minor")
        .withDescription("The car stereo was stolen after the accident"))
      .withContactInRole(contactDemoSample3039, "claimant")
      .create(bundle)
  }

  function createClaim4WithFinancials(bundle : Bundle, lossDateBaseDate : Date) {
    var coverageDemoSample11 = new gw.api.databuilder.VehicleCoverageBuilder()
      .withIncidentLimit(300000)
      .withType("ABI")
      .withExposureLimit(150000)
      .create(bundle)

    var contactDemoSample10021 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withFirstName("Karen")
      .withPrimaryPhone("work")
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry("US")
        .withPostalCode("91352")
        .withState("CA")
        .withAddressType("home")
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)
      
    var policy4 = new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(74))
        .withUnderwritingCo("parent")
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup("acme_auto")
        .withEffectiveDate(BaseDate.addDays(-290))
        .withStatus("inforce")
        .withPolicyNumber("4775949863-02")
        .withTotalProperties(0)
        .withPolicyType("auto_per")
        .withTotalVehicles(1)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(2002)
            .withLicensePlate("2GDH967")
            .withMake("Pontiac")
            .withState("CA")
            .withModel("Grand Prix")
            .withVin("3DGF78575GD891525"))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000)
            .withType("COLL")
            .withDeductible(0))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000)
            .withType("COMP")
            .withDeductible(0))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(150000)
            .withType("APD"))
          .withCoverage(coverageDemoSample11)
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(1000)
            .withType("MPAY")))
          .withContactInRole(contactDemoSample10021, "insured")
          .create(bundle)

    var claim4 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather("CL")
      .withAssignmentStatus("assigned")
      .withLossDate(lossDateBaseDate.addYears(1).addMonths(7))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy("auto_normal")
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged("neverflagged")
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("506 2nd Ave.")
        .withCountry("US")
        .withPostalCode("92101")
        .withState("CA")
        .withAddressType("home")
        .withCity("San Diego"))
      .withLossCause("vehcollision")
      .withClaimNumber("235-53-425892")
      .withMainContactType("self")
      .withReportedByType("other")
      .withLossType("AUTO")
      .withValidationLevel("newloss")
      .withPolicy(policy4)
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState("CA")
      .withSegment("auto_mid")
      .withReportedDate(BaseDate.addDays(-3))
      .withCoverageInQuestion(false)
      .withLOBCode("auto")
      .withDescription("Insured swerved to avoid an animal, struck claimant's car head-on")
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(contactDemoSample10021, "checkpayee")
      .withContactInRole(contactDemoSample10021, "maincontact")
      .withContactInRole(contactDemoSample10021, "reporter")
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic("general")
        .withAuthoringDate(BaseDate.addDays(-2))
        .withSubject("Initial phone call with insured")
        .withAuthor(findUserByUserName("cclark"))
        .withBody("Insured claims he swerved to avoid a dog in the road, then hit an oncoming car in the other lane."))
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic("general")
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Initial phone call with claimant")
        .withAuthor(findUserByUserName("aapplegate"))
        .withBody("Spoke to claimant - he was hospitalized due to a fracture in a bone behind his eye and is under observation, and may need to undergo surgery.  Because claimant does not have other insurance, authorized a check to cover vehicle towing and initial hospital stay."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus("assigned")
        .withAssignmentDate(BaseDate.addDays(-3))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance("notOnCalendar")
        .withCloseDate(BaseDate.addDays(-1))
        .withMandatory(true)
        .withPriority("high")
        .withActivityClass("task")
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType("general")
        .withEscalationDate(BaseDate.addDays(4))
        .withStatus("complete")
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(-1)))
      .create(bundle)

    var claimInfoDemoSample25 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:25")
      .withClaimNumber("235-53-425892")
      .onClaim(claim4)
      .create(bundle)

    var policyPeriodDemoSample70018 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample25))
      .withPolicyPeriodType("policy")
      .withExpirationDate(BaseDate.addDays(154))
      .withPolicyNumber("4775949863-02")
      .withPolicyType("auto_per")
      .withEffectiveDate(BaseDate.addDays(-190))
      .create(bundle)

    var aggregateLimitDemoSample90008 = new gw.api.databuilder.AggregateLimitBuilder()
      .withLimitAmount(300000)
      .withCoverageLine( new gw.api.databuilder.CoverageLineLimitBuilder()
        .withCoverageLine( new gw.api.databuilder.CoverageLineBuilder()
          .withExposureUnitNumber(1)
          .withCoverageType("ABI")
          .withCoverageSubtype("VehicleCoverage")
          .withCoverage(new gw.api.databuilder.LineCoverageBuilder().withCoverage(coverageDemoSample11))
          .onPolicyPeriod(policyPeriodDemoSample70018)) )
      .withLimitType("lossdate")
      .onPolicyPeriod(policyPeriodDemoSample70018)
      .create(bundle)

    var exposureDemoSample11008 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_fast")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("COLL")
      .withSegment("auto_low")
      .withClaimantType("insured")
      .withClaimOrder(1)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim4)
      .withCoverageSubType("coll_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(40)
        .withSeverity("moderate-auto")
        .withCollisionPoint("front")
        .withDriverRelation("self")
        .withDescription("Damage to bumper and front panels")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1993)
          .withLicensePlate("7FDG745")
          .withMake("Mercury")
          .withState("CA")
          .withModel("Sable")
          .withVin("6GYF54637HD645370"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10021, "driver"))
      .withContactInRole(contactDemoSample10021, "claimant")
      .create(bundle)

    var exposureDemoSample11009 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("third_party")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_normal")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("APD")
      .withSegment("auto_mid")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(2)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim4)
      .withCoverageSubType("apd_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(30)
        .withSeverity("major-auto")
        .withCollisionPoint("front")
        .withDriverRelation("self")
        .withDescription("Severely crumpled front end, not driveable")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(2003)
          .withLicensePlate("2GDH967")
          .withMake("BMW")
          .withState("CA")
          .withModel("355i")
          .withVin("3DGF78575GD892534"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10021, "driver"))
      .withContactInRole(contactDemoSample10021, "claimant")
      .create(bundle)

    var exposureDemoSample11010 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("third_party")
      .withExposureType("BodilyInjuryDamage")
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus("assigned")
      .withStrategy("injury_normal")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("ABI")
      .withSegment("injury_mid")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(3)
      .withState("open")
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim4)
      .withCoverageSubType("abi_bid")
      .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
        .withGeneralInjuryType("specific")
        .withSeverity("major-injury")
        .withDescription("Bruises and lacerations to face and neck, broken orbital bone, potential vision loss")
        .withMedicalTreatmentType("hospital")
        .withDetailedInjuryType("58")
        .withLostWages(true)
        .withBodyPart( new gw.api.databuilder.BodyPartDetailsBuilder()
          .withPrimaryBodyPart("head")
          .withOrdering(100))
        .withContactInRole(contactDemoSample10021, "injured"))
      .withContactInRole(contactDemoSample10021, "claimant")
      .create(bundle)

    var transactionSetDemoSample20008 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus("approved")
      .onClaim(claim4)
      .create(bundle)

    var transactionSetDemoSample20009 = new gw.api.databuilder.ReserveSetBuilder()
      .withApprovalDate(BaseDate.addDays(-2))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus("approved")
      .onClaim(claim4)
      .create(bundle)

    var reserveLineDemoSample17 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11008)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withClaim(claim4)
      .create(bundle)

    var reserveLineDemoSample18 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11009)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withClaim(claim4)
      .create(bundle)

    var reserveLineDemoSample19 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11010)
      .withCostType("claimcost")
      .withCostCategory("medical")
      .withClaim(claim4)
      .create(bundle)

    var checkDemoSample10107 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim4)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount("default")
      .onCheckSet(transactionSetDemoSample20008)
      .withPayTo("William Weeks")
      .withStatus("issued")
      .withPaymentMethod("check")
      .withCheckNumber("11059")
      .withPayee((new gw.api.databuilder.CheckPayeeBuilder().withPayee(contactDemoSample10021)
        .withPayeeType("claimant")) as gw.api.databuilder.ValueGenerator<CheckPayee>)
      .withType("primary")
      .create(bundle)

    var transactionDemoSample10020 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample17)
      .onExposure(exposureDemoSample11008)
      .onTransactionSet(transactionSetDemoSample20009)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim4)
      .withTransToClaimExchangeRate(find(s in       ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0)
        .withReportingAmount(2500)
        .withClaimAmount(2500)
        .withTransactionAmount(2500)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample10021 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample18)
      .onExposure(exposureDemoSample11009)
      .onTransactionSet(transactionSetDemoSample20009)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim4)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0)
        .withReportingAmount(5000)
        .withClaimAmount(5000)
        .withTransactionAmount(5000)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample10022 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample19)
      .onExposure(exposureDemoSample11010)
      .onTransactionSet(transactionSetDemoSample20009)
      .withCostType("claimcost")
      .withCostCategory("medical")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim4)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization costs")
        .withClaimForExAmount(0)
        .withReportingAmount(12000)
        .withClaimAmount(12000)
        .withTransactionAmount(12000)
        .withLineCategory("doctor")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample20023 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample18)
      .onTransactionSet(transactionSetDemoSample20008)
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .onCheck(checkDemoSample10107)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample11009)
      .withCostType("claimcost")
      .onClaim(claim4)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Towing and inspection")
        .withClaimForExAmount(0)
        .withReportingAmount(300)
        .withClaimAmount(300)
        .withTransactionAmount(300)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample20024 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample19)
      .onTransactionSet(transactionSetDemoSample20008)
      .withCostCategory("medical")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .onCheck(checkDemoSample10107)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample11010)
      .withCostType("claimcost")
      .onClaim(claim4)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization and examination")
        .withClaimForExAmount(0)
        .withReportingAmount(9000)
        .withClaimAmount(9000)
        .withTransactionAmount(9000)
        .withLineCategory("doctor")
        .withReportingForExAmount(0))
      .create(bundle)  
      
  }

  function createClaim5WithFinancials(bundle : Bundle, lossDateBaseDate : Date) {
  var coverageDemoSample12 = new gw.api.databuilder.VehicleCoverageBuilder()
      .withIncidentLimit(300000)
      .withType("ABI")
      .withExposureLimit(150000)
      .create(bundle)
  
    var contactDemoSample10022 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withFirstName("Karen")
      .withPrimaryPhone("work")
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry("US")
        .withPostalCode("91352")
        .withState("CA")
        .withAddressType("home")
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)
      

    var claim5 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather("CL")
      .withAssignmentStatus("assigned")
      .withLossDate(lossDateBaseDate.addYears(2).addMonths(-2))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy("auto_normal")
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged("neverflagged")
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("506 2nd Ave.")
        .withCountry("US")
        .withPostalCode("92101")
        .withState("CA")
        .withAddressType("home")
        .withCity("San Diego"))
      .withLossCause("vehcollision")
      .withClaimNumber("235-53-425893")
      .withMainContactType("self")
      .withReportedByType("other")
      .withLossType("AUTO")
      .withValidationLevel("newloss")
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(74))
        .withUnderwritingCo("parent")
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup("acme_auto")
        .withEffectiveDate(BaseDate.addDays(-290))
        .withStatus("inforce")
        .withPolicyNumber("4775949863-03")
        .withTotalProperties(0)
        .withPolicyType("auto_per")
        .withTotalVehicles(1)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(2002)
            .withLicensePlate("2GDH967")
            .withMake("Pontiac")
            .withState("CA")
            .withModel("Grand Prix")
            .withVin("3DGF78575GD891525"))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000)
            .withType("COLL")
            .withDeductible(0))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000)
            .withType("COMP")
            .withDeductible(0))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(150000)
            .withType("APD"))
          .withCoverage(coverageDemoSample12)
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(1000)
            .withType("MPAY")))
        .withContactInRole(contactDemoSample10022, "insured"))
      .withFault(80)
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withJurisdictionState("CA")
      .withSegment("auto_mid")
      .withReportedDate(BaseDate.addDays(-3))
      .withCoverageInQuestion(false)
      .withLOBCode("auto")
      .withDescription("Insured swerved to avoid an animal, struck claimant's car head-on")
      .withState("open")
      .withAssignedUser(findUserByUserName("tallen"))
      .withContactInRole(contactDemoSample10022, "checkpayee")
      .withContactInRole(contactDemoSample10022, "maincontact")
      .withContactInRole(contactDemoSample10022, "reporter")
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic("general")
        .withAuthoringDate(BaseDate.addDays(-2))
        .withSubject("Initial phone call with insured")
        .withAuthor(findUserByUserName("cclark"))
        .withBody("Insured claims he swerved to avoid a dog in the road, then hit an oncoming car in the other lane."))
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic("general")
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Initial phone call with claimant")
        .withAuthor(findUserByUserName("tallen"))
        .withBody("Spoke to claimant - he was hospitalized due to a fracture in a bone behind his eye and is under observation, and may need to undergo surgery.  Because claimant does not have other insurance, authorized a check to cover vehicle towing and initial hospital stay."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus("assigned")
        .withAssignmentDate(BaseDate.addDays(-3))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance("notOnCalendar")
        .withCloseDate(BaseDate.addDays(-1))
        .withMandatory(true)
        .withPriority("high")
        .withActivityClass("task")
        .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
        .withType("general")
        .withEscalationDate(BaseDate.addDays(4))
        .withStatus("complete")
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("tallen"))
        .withTargetDate(BaseDate.addDays(-1)))
      .withPermissionRequired(ClaimSecurityType.TC_SENSITIVECLAIM)
      .create(bundle)

    var claimInfoDemoSample26 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:26")
      .withClaimNumber("235-53-425893")
      .onClaim(claim5)
      .create(bundle)

   
    var policyPeriodDemoSample70019 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample26))
      .withPolicyPeriodType("policy")
      .withExpirationDate(BaseDate.addDays(122))
      .withPolicyNumber("4775949863-03")
      .withPolicyType("auto_per")
      .withEffectiveDate(BaseDate.addDays(-55))
      .create(bundle)
    
    var aggregateLimitDemoSample90009 = new gw.api.databuilder.AggregateLimitBuilder()
      .withLimitAmount(300000)
      .withCoverageLine( new gw.api.databuilder.CoverageLineLimitBuilder()
        .withCoverageLine( new gw.api.databuilder.CoverageLineBuilder()
          .withExposureUnitNumber(1)
          .withCoverageType("ABI")
          .withCoverageSubtype("VehicleCoverage")
          .withCoverage(new gw.api.databuilder.LineCoverageBuilder().withCoverage(coverageDemoSample12))
          .onPolicyPeriod(policyPeriodDemoSample70019)) )
      .withLimitType("lossdate")
      .onPolicyPeriod(policyPeriodDemoSample70019)
      .create(bundle)

    var exposureDemoSample11011 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("insured")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_fast")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("COLL")
      .withSegment("auto_low")
      .withClaimantType("insured")
      .withClaimOrder(1)
      .withState("open")
      .withAssignedUser(findUserByUserName("tallen"))
      .onClaim(claim5)
      .withCoverageSubType("coll_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(40)
        .withSeverity("moderate-auto")
        .withCollisionPoint("front")
        .withDriverRelation("self")
        .withDescription("Damage to bumper and front panels")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1993)
          .withLicensePlate("7FDG745")
          .withMake("Mercury")
          .withState("CA")
          .withModel("Sable")
          .withVin("6GYF54637HD645370"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10022, "driver"))
      .withContactInRole(contactDemoSample10022, "claimant")
      .create(bundle)

    var exposureDemoSample11012 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("third_party")
      .withExposureType("VehicleDamage")
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withAssignmentStatus("assigned")
      .withStrategy("auto_normal")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("APD")
      .withSegment("auto_mid")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(2)
      .withState("open")
      .withAssignedUser(findUserByUserName("tallen"))
      .onClaim(claim5)
      .withCoverageSubType("apd_vd")
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(30)
        .withSeverity("major-auto")
        .withCollisionPoint("front")
        .withDriverRelation("self")
        .withDescription("Severely crumpled front end, not driveable")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(2003)
          .withLicensePlate("2GDH967")
          .withMake("BMW")
          .withState("CA")
          .withModel("355i")
          .withVin("3DGF78575GD892534"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10022, "driver"))
      .withContactInRole(contactDemoSample10022, "claimant")
      .create(bundle)

    var exposureDemoSample11013 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty("third_party")
      .withExposureType("BodilyInjuryDamage")
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withAssignmentStatus("assigned")
      .withStrategy("injury_normal")
      .withProgress("investigation")
      .withJurisdictionState("CA")
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage("ABI")
      .withSegment("injury_mid")
      .withClaimantType("veh_other_owner")
      .withClaimOrder(3)
      .withState("open")
      .withAssignedUser(findUserByUserName("tallen"))
      .onClaim(claim5)
      .withCoverageSubType("abi_bid")
      .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
        .withGeneralInjuryType("specific")
        .withSeverity("major-injury")
        .withDescription("Bruises and lacerations to face and neck, broken orbital bone, potential vision loss")
        .withMedicalTreatmentType("hospital")
        .withDetailedInjuryType("58")
        .withLostWages(true)
        .withBodyPart( new gw.api.databuilder.BodyPartDetailsBuilder()
          .withPrimaryBodyPart("head")
          .withOrdering(100))
        .withContactInRole(contactDemoSample10022, "injured"))
      .withContactInRole(contactDemoSample10022, "claimant")
      .create(bundle)

    var transactionSetDemoSample20010 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("tallen"))
      .withApprovalStatus("approved")
      .onClaim(claim5)
      .create(bundle)

    var transactionSetDemoSample20011 = new gw.api.databuilder.ReserveSetBuilder()
      .withApprovalDate(BaseDate.addDays(-2))
      .withRequestingUser(findUserByUserName("tallen"))
      .withApprovalStatus("approved")
      .onClaim(claim5)
      .create(bundle)

    var reserveLineDemoSample20 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11011)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withClaim(claim5)
      .create(bundle)

    var reserveLineDemoSample21 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11012)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withClaim(claim5)
      .create(bundle)

    var reserveLineDemoSample22 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11013)
      .withCostType("claimcost")
      .withCostCategory("medical")
      .withClaim(claim5)
      .create(bundle)

    var checkDemoSample10108 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim5)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount("default")
      .onCheckSet(transactionSetDemoSample20010)
      .withPayTo("William Weeks")
      .withStatus("issued")
      .withPaymentMethod("check")
      .withCheckNumber("11059")
      .withPayee((new gw.api.databuilder.CheckPayeeBuilder().withPayee(contactDemoSample10022)
        .withPayeeType("claimant")) as gw.api.databuilder.ValueGenerator<CheckPayee>)
      .withType("primary")
      .create(bundle)

    var transactionDemoSample10025 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample20)
      .onExposure(exposureDemoSample11011)
      .onTransactionSet(transactionSetDemoSample20011)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim5)
      .withTransToClaimExchangeRate(find(s in       ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0)
        .withReportingAmount(2500)
        .withClaimAmount(2500)
        .withTransactionAmount(2500)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample10026 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample21)
      .onExposure(exposureDemoSample11012)
      .onTransactionSet(transactionSetDemoSample20011)
      .withCostType("claimcost")
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim5)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0)
        .withReportingAmount(5000)
        .withClaimAmount(5000)
        .withTransactionAmount(5000)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample10027 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample22)
      .onExposure(exposureDemoSample11013)
      .onTransactionSet(transactionSetDemoSample20011)
      .withCostType("claimcost")
      .withCostCategory("medical")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim5)
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization costs")
        .withClaimForExAmount(0)
        .withReportingAmount(12000)
        .withClaimAmount(12000)
        .withTransactionAmount(12000)
        .withLineCategory("doctor")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample20028 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample21)
      .onTransactionSet(transactionSetDemoSample20010)
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .onCheck(checkDemoSample10108)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample11012)
      .withCostType("claimcost")
      .onClaim(claim5)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Towing and inspection")
        .withClaimForExAmount(0)
        .withReportingAmount(300)
        .withClaimAmount(300)
        .withTransactionAmount(300)
        .withLineCategory("other")
        .withReportingForExAmount(0))
      .create(bundle)

    var transactionDemoSample20029 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample22)
      .onTransactionSet(transactionSetDemoSample20010)
      .withCostCategory("medical")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(find(s in ExchangeRate where s.PublicID == "demo_sample:1000").getFirstResult())
      .onCheck(checkDemoSample10108)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample11013)
      .withCostType("claimcost")
      .onClaim(claim5)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization and examination")
        .withClaimForExAmount(0)
        .withReportingAmount(9000)
        .withClaimAmount(9000)
        .withTransactionAmount(9000)
        .withLineCategory("doctor")
        .withReportingForExAmount(0))
      .create(bundle)
  }

  function createClaim6WC(bundle : Bundle, lossDateBaseDate : Date) {
     var wclossDateBaseDate = Date.Today.addYears(-1)
     
     var buildingDemoSample307 = new gw.api.databuilder.BuildingBuilder()
        .withBuildingNumber("103")
        .create(bundle)

      var buildingDemoSample308 = new gw.api.databuilder.BuildingBuilder()
        .withBuildingNumber("104")
        .create(bundle)

      var policyLocationDemoSample306 = new gw.api.databuilder.PolicyLocationBuilder()
        .withAddress(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("25 Commerce Way")
          .withCountry("US")
          .withPostalCode("91155")
          .withState("CA")
          .withAddressType("business")
          .withCity("Los Angeles"))
        .withBuilding(buildingDemoSample307)
        .withBuilding(buildingDemoSample308)
        .create(bundle)

      var contactDemoSample300072 = new gw.api.databuilder.CompanyBuilder()
        .withPrimaryPhone("work")
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1245 Fair Oaks Ave")
          .withCountry("US")
          .withPostalCode("91101")
          .withState("CA")
          .withAddressType("business")
          .withCity("Pasadena"))
        .withWorkPhone("847-279-3399")
        .withName("P&P Construction")
        .create(bundle)

      var contactDemoSample30073 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Arlington")
        .withFirstName("Annabelle")
        .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1237 Myrtle Ave")
          .withCountry("US")
          .withPostalCode("29402")
          .withState("SC")
          .withAddressType("business")
          .withCity("Charleston"))
        .withPrimaryPhone("work")
        .withWorkPhone("843-553-2001")
        .create(bundle)

      var classCodeDemoSample303 = new gw.api.databuilder.ClassCodeBuilder()
        .withCode("883003")
        .withDescription("Clerical")
        .create(bundle)

      var classCodeDemoSample304 = new gw.api.databuilder.ClassCodeBuilder()
        .withCode("883004")
        .withDescription("Janitorial")
        .create(bundle)

      var claim6 = new gw.api.databuilder.ClaimBuilder()
        .withIncidentReport(false)
        .withAssignmentStatus("assigned")
        .withLossDate(wclossDateBaseDate.addDays(32))
        .withFlaggedReason("Paying Total Temp on minor injury after 4 weeks")
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withStrategy("wc_fast")
        .withAssignmentDate(wclossDateBaseDate.addDays(0))
        .withFlagged("neverflagged")
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("846 Yount Ln.")
          .withCountry("US")
          .withPostalCode("91357")
          .withState("CA")
          .withAddressType("business")
          .withCity("Hollywood"))
        .withClaimNumber("312-36-300873")
        .withMainContactType("employee")
        .withReportedByType("employee")
        .withLossType("WC")
        .withValidationLevel("newloss")
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(wclossDateBaseDate.addDays(185))
          .withUnderwritingCo("parent")
          .withVerified(true)
          .withOrigEffectiveDate(wclossDateBaseDate.addDays(-200))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup("acme_wc")
          .withEffectiveDate(wclossDateBaseDate.addDays(-180))
          .withStatus("inforce")
          .withWCStates("CA, NV")
          .withPolicyNumber("4775949865-02")
          .withTotalProperties(4)
          .withPolicyType("comp")
          .withTotalVehicles(0)
          .withClassCode(classCodeDemoSample303)
          .withClassCode(classCodeDemoSample304)
          .withCoverage( new gw.api.databuilder.PolicyCoverageBuilder()
            .withIncidentLimit(100000)
            .withType("WL")
            .withDeductible(100))
          .withCoverage( new gw.api.databuilder.PolicyCoverageBuilder()
            .withIncidentLimit(100000)
            .withType("WL")
            .withDeductible(100))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample307)
            .withRUNumber(1)
            .withClassCode(classCodeDemoSample303)
            .withPolicyLocation(policyLocationDemoSample306))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample307)
            .withRUNumber(2)
            .withClassCode(classCodeDemoSample303)
            .withPolicyLocation(policyLocationDemoSample306))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample308)
            .withRUNumber(3)
            .withClassCode(classCodeDemoSample304)
            .withPolicyLocation(policyLocationDemoSample306))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample307)
            .withRUNumber(4)
            .withClassCode(classCodeDemoSample304)
            .withPolicyLocation(policyLocationDemoSample306))
          .withContactInRole(contactDemoSample300072, "insured"))
        .withClaimantReportedDate(wclossDateBaseDate.addDays(32))
        .withAssignedGroup(findGroupByName("Comp - TeamA"))
        .withJurisdictionState("CA")
        .withSegment("wc_lost_time")
        .withReportedDate(wclossDateBaseDate.addDays(32))
        .withCoverageInQuestion(false)
        .withLOBCode("wc")
        .withDescription("Worker fell from 2nd story scaffolding")
        .withState("open")
        .withAssignedUser(findUserByUserName("ljames"))
        .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
          .withGeneralInjuryType("specific")
          .withSeverity("minor")
          .withDescription("Strained back and bruises to right leg from the fall")
          .withMedicalTreatmentType("one_doctor")
          .withClaimIncident(true))
        .withContactInRole(contactDemoSample30073, "claimant")
        .withContactInRole(contactDemoSample30073, "reporter")
        .create(bundle)

      var claimInfoDemoSample30006 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("demo_sample:30006")
        .withClaimNumber("312-36-300873")
        .onClaim(claim6)
        .create(bundle)

      var exposureDemoSample300002 = new gw.api.databuilder.ExposureBuilder()
        .withOtherCoverage(false)
        .withLossParty("third_party")
        .withExposureType("EmployerLiability")
        .withAssignedGroup(findGroupByName("Comp - TeamA"))
        .withAssignmentStatus("assigned")
        .withStrategy("wc_investigate")
        .withProgress("investigation")
        .withAssignmentDate(wclossDateBaseDate.addDays(35))
        .withPrimaryCoverage("WL")
        .withJurisdictionState("CA")
        .withSegment("wc_liability")
        .withClaimOrder(3)
        .withState("open")
        .withAssignedUser(findUserByUserName("ljames"))
        .onClaim(claim6)
        .withCoverageSubType("wl_el")
        .withIncident( new gw.api.databuilder.IncidentBuilder()
          .withSeverity("moderate-gen"))
        .create(bundle)
  }
}

