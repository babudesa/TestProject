<?xml version="1.0" encoding="utf-8"?>
<WebWorksHelpTOC version="5.0" xmlns="urn:WebWorks-Help-TOC-Schema">
  <i t="About This Document" l="1">
    <i t="Intended Audience" l="1#1315821" />
    <i t="Assumed Knowledge" l="1#1329378" />
    <i t="Related Documents" l="1#1329383" />
    <i t="Conventions In This Document" l="1#1333457" />
  </i>
  <i t="Gosu Introduction" l="2">
    <i t="Welcome to Gosu" l="3">
      <i t="Control Flow" l="3#1437383" />
      <i t="Blocks" l="3#1469415" />
      <i t="Enhancements" l="3#1435182" />
      <i t="Collections" l="3#1441186" />
      <i t="Access to Java Types" l="3#1435102" />
      <i t="Gosu Classes and Properties" l="3#1440296" />
      <i t="Interfaces" l="3#1450798" />
      <i t="List and Array Expansion Operator *." l="3#1450589" />
      <i t="Comparisons" l="3#1452648" />
      <i t="Case Sensitivity" l="3#1450590" />
      <i t="Compound Assignment Statements" l="3#1454915" />
      <i t="Delegating Interface Implementation with Composition" l="3#1457296" />
      <i t="Concurrency" l="3#1456854" />
      <i t="Exceptions" l="3#1457070" />
      <i t="Annotations" l="3#1458452" />
      <i t="Gosu Templates" l="3#1457886" />
      <i t="Native XML and XSD Support" l="3#1460816" />
      <i t="Native Web Service Support" l="3#1460937" />
      <i t="Gosu Character Set" l="3#1461607" />
    </i>
    <i t="More About the Gosu Type System" l="4">
      <i t="Compile Time Error Prevention" l="5" />
      <i t="Type Inference" l="6" />
      <i t="Intelligent Code Completion" l="7" />
      <i t="Refactoring" l="8" />
      <i t="Type Usage Searching" l="9" />
      <i t="Property Accessor Paths are Null Safe" l="10" />
      <i t="Generics in Gosu" l="11" />
      <i t="Gosu Primitives Types" l="12" />
      <i t="Custom Type Loaders" l="13" />
    </i>
    <i t="Gosu Case Sensitivity" l="14" />
    <i t="Gosu Statement Terminators" l="15" />
    <i t="Gosu Comments" l="16" />
    <i t="Gosu Reserved Words" l="17" />
    <i t="Gosu Generated Documentation" l="18" />
    <i t="Running Programs" l="19" />
    <i t="Notable Differences Between Gosu and Java" l="20" />
    <i t="Get Ready for Gosu" l="21" />
  </i>
  <i t="Gosu Types" l="22">
    <i t="Built-in Types" l="23">
      <i t="Array" l="24" />
      <i t="Boolean" l="25" />
      <i t="DateTime" l="26" />
      <i t="Key" l="27" />
      <i t="Number" l="28" />
      <i t="Object" l="29" />
      <i t="String" l="30" />
      <i t="Type" l="31" />
      <i t="Primitive Types" l="32" />
    </i>
    <i t="Access to Java Types" l="33" />
    <i t="Arrays" l="34">
      <i t="Array-related Entity Methods" l="34#1466376" />
      <i t="Java-based Lists as Arrays" l="34#1441480" />
      <i t="Array Expansion" l="34#1441521" />
    </i>
    <i t="Object Instantiation and Properties" l="35">
      <i t="Creating New Objects" l="35#1441638" />
      <i t="Assigning Object Properties" l="35#1441650" />
      <i t="Accessing Object Properties" l="35#1441662" />
      <i t="Accessing Object Methods" l="35#1441682" />
      <i t="Accessing Object Arrays" l="35#1441721" />
    </i>
    <i t="Entities" l="36" />
    <i t="Typekeys" l="37">
      <i t="Typelist Literals" l="37#1466621" />
      <i t="Typekey Literals" l="37#1466624" />
      <i t="Getting Information from a Typekey" l="37#1466466" />
    </i>
  </i>
  <i t="Gosu Operators and Expressions" l="38">
    <i t="Gosu Operators" l="39">
      <i t="Operator Precedence" l="40" />
    </i>
    <i t="Standard Gosu Expressions" l="41" />
    <i t="Arithmetic Expressions" l="42" />
    <i t="Equality Expressions" l="43" />
    <i t="Evaluation Expressions" l="44" />
    <i t="Existence Testing Expressions" l="45" />
    <i t="Logical Expressions" l="46" />
    <i t="New Object Expressions" l="47" />
    <i t="Relational Expressions" l="48" />
    <i t="Unary Expressions" l="49" />
    <i t="Importing Types and Package Namespaces" l="50" />
    <i t="Conditional Ternary Expressions" l="51" />
    <i t="Special Gosu Expressions" l="52">
      <i t="Entity Literals" l="53" />
      <i t="Function Calls" l="54" />
      <i t="Handling Null Values" l="55" />
      <i t="Static Method Calls" l="56" />
      <i t="Static Property Paths" l="57" />
      <i t="Entity and Typekey Type Literals" l="58" />
    </i>
  </i>
  <i t="Statements" l="59">
    <i t="Gosu Statements" l="60">
      <i t="Statement Lists" l="60#1440698" />
    </i>
    <i t="Gosu Variables" l="61">
      <i t="Variable Type Declaration" l="61#1141530" />
      <i t="Variable Assignment" l="61#1453654" />
    </i>
    <i t="Gosu Conditional Execution and Looping" l="62">
      <i t="If() … Else() Statements" l="62#1142199" />
      <i t="For() Statements" l="62#1456475" />
      <i t="While() Statements" l="62#1141335" />
      <i t="Do…While() Statements" l="62#1137579" />
      <i t="Switch() Statements" l="62#1137580" />
    </i>
    <i t="Gosu Functions" l="63">
      <i t="Public and Private Functions" l="63#1142377" />
    </i>
  </i>
  <i t="Exception Handling" l="64">
    <i t="Try-Catch-Finally Constructions" l="65" />
    <i t="Throw Statements" l="66" />
    <i t="Checked Exceptions in Gosu" l="67" />
    <i t="Object Lifecycle Management (‘using’ Clauses)" l="68">
      <i t="Disposable Objects" l="68#1466707" />
      <i t="Closeable Objects and ‘using’ Clauses" l="68#1466986" />
      <i t="Reentrant Objects and ‘using’ Clauses" l="68#1457358" />
      <i t="Returning Values from ‘using’ Clauses" l="68#1469250" />
    </i>
  </i>
  <i t="Java and Gosu" l="69">
    <i t="Overview of Calling Java from Gosu" l="70">
      <i t="Java Classes are First-Class Types" l="70#2002026" />
      <i t="Many Java Classes are Core Classes for Gosu" l="70#2002392" />
      <i t="Java Packages in Scope" l="70#2002365" />
      <i t="Static Members in Gosu" l="70#2047802" />
      <i t="Simple Java Example" l="70#2003007" />
      <i t="Java Get and Set Methods Convert to Gosu Properties" l="70#2021794" />
      <i t="Interfaces" l="70#2020668" />
      <i t="Enumerations" l="70#2020577" />
      <i t="Annotations" l="70#2047848" />
      <i t="Java Primitives" l="70#2047899" />
    </i>
    <i t="Deploying Your Java Classes" l="71">
      <i t="Class Loading for Java Classes Called from Gosu" l="71#2073311" />
    </i>
    <i t="Java Class Loading, Delegation, and Package Naming" l="72">
      <i t="Java Class Loading Rules" l="72#2031881" />
      <i t="Local Loading of Your Classes" l="72#2073391" />
      <i t="Delegate Loading" l="72#2073481" />
      <i t="Java Class Repository Listing" l="72#2073515" />
    </i>
    <i t="Special Handling of Collections, Arrays, Maps" l="73">
      <i t="Disable Container Conversion In Some Cases" l="73#2073608" />
      <i t="Details of Container Conversion" l="73#2073639" />
    </i>
    <i t="Java Entity Libraries Overview" l="74" />
    <i t="Using Java Entity Libraries" l="75">
      <i t="Creating Entities from Java" l="75#2073883" />
      <i t="Getting and Setting Properties from Java" l="75#2073892" />
      <i t="Calling Entity Domain Methods from Java" l="75#2073911" />
      <i t="Exception Handling from Java" l="75#2073921" />
      <i t="TypeKey Classes from Java" l="75#2073934" />
      <i t="Parameterization of Types Stripped from Entities in Java" l="75#2073961" />
      <i t="Special Entity-related Java Classes" l="75#2073968" />
    </i>
    <i t="Argument Conversion in Java Entity Libraries" l="76" />
    <i t="How Entities and Typekeys Convert to and from Java" l="77">
      <i t="Comparing Entities" l="77#2074034" />
      <i t="Comparing Typekeys" l="77#2074071" />
      <i t="Comparing Keys" l="77#2074112" />
    </i>
    <i t="Java Entity Utility APIs" l="78">
      <i t="Creating and Accessing Entities From Java" l="78#2074123" />
      <i t="Finding Entities by Public ID Within Java Code" l="78#2074187" />
    </i>
    <i t="Which Java Types Export to Java Entity Libraries?" l="79" />
    <i t="Non-entity Types in the Java Entity Libraries" l="80">
      <i t="Adding Gosu Non-Entity Types to the Entity Libraries" l="80#2074248" />
      <i t="Using Gosu Classes from Java Entity Libraries" l="80#2074285" />
    </i>
    <i t="Static Methods and Variables in Java Entity Libraries" l="81" />
    <i t="Gosu Enhancements in Java Entity Libraries" l="82" />
    <i t="Remapping Package and Type Names in Java Entity Libraries" l="83" />
    <i t="Testing Your Entity Code in Java (EntityMock)" l="84">
      <i t="How EntityMock Works" l="84#2074396" />
      <i t="Using EntityMock" l="84#2074406" />
      <i t="Modifying EntityFactory for Mock Entities" l="84#2074507" />
    </i>
  </i>
  <i t="Query Builder" l="85">
    <i t="Query Builder Overview" l="86">
      <i t="Basic Queries" l="86#2180576" />
      <i t="Using Comparison Predicates with Null Values" l="87" />
      <i t="Viewing the SQL for a Query" l="88" />
      <i t="Column References" l="89" />
      <i t="Database Functions" l="90" />
      <i t="Combining Queries and Predicates" l="91" />
    </i>
    <i t="Returning Query Results" l="92">
      <i t="Getting Single Rows" l="93" />
      <i t="Getting Results With an Iterator" l="94" />
      <i t="Converting to Collections, Lists, Sets, and Arrays" l="95" />
      <i t="Selecting Columns and Returning Results in Custom Formats" l="96" />
      <i t="Ordering results" l="97" />
      <i t="Found Entities Are Read-only Until Added to a Bundle" l="97#2233962" />
      <i t="Result Counts and Dynamic Queries" l="97#2210976" />
      <i t="Setting the Page Size For a Query" l="98" />
    </i>
    <i t="Advanced Queries (Subselects and Joins)" l="99">
      <i t="Using Subselect for Reverse Inner Joins" l="99#2207006" />
      <i t="Join Method" l="100" />
    </i>
  </i>
  <i t="Find Expressions" l="101">
    <i t="Basic Find Expressions" l="101#1216400">
      <i t="Find Expressions Using AND/OR" l="101#1137068" />
      <i t="Find Expressions Using Equality and Relational Operators" l="101#1137084" />
      <i t="Find Expressions Using ‘Where...In’ Clauses" l="101#1359589" />
    </i>
    <i t="Using Exists Expressions in Finders for Database Joins" l="101#1359679">
      <i t="Fixing Invalid Queries by Adding Exists Clauses" l="101#1360475" />
      <i t="Combining Exists Expressions" l="101#1358792" />
    </i>
    <i t="Find Expressions Using Special Substring Keywords" l="101#1359890" />
    <i t="Using the Results of Find Expressions (Using Query Objects)" l="101#1289012">
      <i t="Basic Iterator Example" l="101#1361185" />
      <i t="Large Query Finder Results Example" l="101#1220606" />
      <i t="Sort Results Example" l="101#1220627" />
      <i t="Returning a Single Row of Finder Results" l="101#1137173" />
      <i t="Found Entities Are Read-only Until Added to a Bundle" l="101#1361064" />
      <i t="Queries Are Always Dynamic" l="101#1360246" />
    </i>
  </i>
  <i t="Classes" l="102">
    <i t="What Are Classes?" l="103" />
    <i t="Creating and Instantiating Classes" l="104">
      <i t="Creating a New Instance of a Class" l="104#2449212" />
      <i t="Naming Conventions for Packages and Classes" l="104#2447745" />
    </i>
    <i t="Properties" l="105">
      <i t="Properties are Actually Virtual Like Functions" l="105#2447823" />
      <i t="Property Paths are Null Tolerant" l="105#2465283" />
      <i t="Static Properties" l="105#2449277" />
      <i t="More Property Examples" l="105#2447851" />
    </i>
    <i t="Modifiers" l="106">
      <i t="Access Modifiers" l="106#2445688" />
      <i t="Override Modifier" l="106#2449862" />
      <i t="Abstract Modifier" l="106#2449868" />
      <i t="Final Modifier" l="106#2449875" />
      <i t="Static Modifier" l="106#2446412" />
    </i>
    <i t="Inner Classes" l="107">
      <i t="Named Inner Classes" l="107#2450636" />
      <i t="Anonymous Inner Classes" l="107#2450064" />
    </i>
  </i>
  <i t="Enumerations" l="108">
    <i t="Using Enumerations" l="109">
      <i t="Extracting Information from Enumerations" l="109#1459344" />
      <i t="Comparing Enumerations" l="109#1459295" />
    </i>
  </i>
  <i t="Interfaces" l="110">
    <i t="What is an Interface?" l="111" />
    <i t="Defining and Using an Interface" l="112">
      <i t="Defining and Using Properties with Interfaces" l="112#1457203" />
      <i t="Modifiers and Interfaces" l="112#1459141" />
    </i>
  </i>
  <i t="Composition" l="113">
    <i t="Using Gosu Composition" l="114">
      <i t="Overriding Methods Independent of the Delegate Class" l="114#2201000" />
      <i t="Declaring Delegate Implementation Type in the Variable Definition" l="114#2198236" />
      <i t="Using One Delegate for Multiple Interfaces" l="114#2198240" />
      <i t="Using Composition With Built-in Interfaces" l="114#2198246" />
    </i>
  </i>
  <i t="Annotations and Interceptors" l="115">
    <i t="Annotating a Class, Method, Type, or Constructor" l="116">
      <i t="Built-in Annotations" l="116#1471842" />
    </i>
    <i t="Annotations at Run Time" l="117" />
    <i t="Defining Your Own Annotations" l="118">
      <i t="Customizing Annotation Usage" l="118#1434674" />
    </i>
    <i t="Gosu Interceptors" l="119" />
  </i>
  <i t="Enhancements" l="120">
    <i t="Using Enhancements" l="121">
      <i t="Syntax for Using Enhancements" l="121#1439437" />
      <i t="Creating a New Enhancement" l="121#1439200" />
      <i t="Syntax for Defining Enhancements" l="121#1439430" />
      <i t="Enhancement Naming and Package Conventions" l="121#1437458" />
      <i t="Enhancements on Arrays" l="121#1438604" />
    </i>
  </i>
  <i t="Gosu Blocks" l="122">
    <i t="What Are Blocks?" l="123" />
    <i t="Basic Block Definition and Invocation" l="124" />
    <i t="Variable Scope and Capturing Variables In Blocks" l="125" />
    <i t="Argument Type Inference Shortcut In Certain Cases" l="126" />
    <i t="Block Type Literals" l="127" />
    <i t="Blocks and Collections" l="128" />
    <i t="Blocks as Shortcuts for Anonymous Classes" l="129" />
  </i>
  <i t="Gosu Generics" l="130">
    <i t="Gosu Generics Overview" l="131" />
    <i t="Using Gosu Generics" l="132" />
    <i t="Other Unbounded Generics Wildcards" l="133" />
    <i t="Generics and Blocks" l="134" />
    <i t="How Generics Help Define Collection APIs" l="135" />
    <i t="Multiple Dimensionality Generics" l="136" />
    <i t="Generics With Custom ‘Containers’" l="137">
      <i t="Generics with Non-Containers" l="137#1446525" />
    </i>
  </i>
  <i t="Collections" l="138">
    <i t="Basic Lists" l="139" />
    <i t="Basic HashMaps" l="140">
      <i t="Special Enhancements on Maps" l="140#1452216" />
    </i>
    <i t="List and Array Expansion (*.)" l="141" />
    <i t="Enhancement Reference for Collections and Related Types" l="142">
      <i t="Collections Enhancement Methods" l="143" />
      <i t="Finding Data in Collections" l="143#1462591" />
      <i t="Sorting Collections" l="143#1444564" />
      <i t="Mapping Data in Collections" l="143#1442277" />
      <i t="Iterating Across Collections" l="143#1442285" />
      <i t="Partitioning Collections" l="143#1442296" />
      <i t="Converting Lists, Arrays, and Sets" l="143#1449882" />
      <i t="Flat Mapping a Series of Collections or Arrays" l="143#1450050" />
      <i t="Sizes and Length of Collections and Strings are Equivalent" l="143#1443101" />
    </i>
  </i>
  <i t="Gosu and XML" l="144">
    <i t="Manipulating XML Overview" l="145" />
    <i t="Exporting XML Data" l="146" />
    <i t="Manipulating XML as Untyped Nodes" l="147">
      <i t="Untyped Node Operations" l="147#1445111" />
      <i t="Example of Manipulating XML as Untyped Nodes" l="147#1445635" />
    </i>
    <i t="Collection-like Enhancements with XML Nodes" l="148" />
    <i t="Structured XML Using XSDs" l="149">
      <i t="Importing Strongly-Typed XML" l="149#1444007" />
      <i t="Writing Strongly-Typed XML" l="149#1444034" />
      <i t="Handling Choices in XML" l="149#1451098" />
      <i t="Gosu Type to XSD Type Conversion Reference" l="149#1462005" />
      <i t="XSD Namespaces and QNames" l="149#1497728" />
      <i t="Autocreation of Intermediate Nodes" l="149#1461542" />
      <i t="XML Node IDs" l="149#1461507" />
      <i t="Date Handling in XSDs" l="149#1462736" />
    </i>
    <i t="The Guidewire XML (GX) Modeler" l="150">
      <i t="Automatic Publishing of the Generated XSD" l="151" />
      <i t="Generating XML Using an XML Model" l="152" />
      <i t="Customizing Guidewire Model XML Output (GXOptions)" l="153" />
      <i t="Parsing XML Into an XML Model" l="154" />
      <i t="Arrays of Entities in XML Output" l="155" />
      <i t="Complete Guidewire XML Model Example" l="156" />
      <i t="Type Conversions from Gosu Types to XSD Types" l="157" />
    </i>
  </i>
  <i t="Bundles and Transactions" l="158">
    <i t="Which Circumstances to Manipulate Database Transactions" l="159" />
    <i t="Using Existing Bundles" l="160">
      <i t="Getting an Entity from its Public ID or Internal ID (Key)" l="160#1562498" />
      <i t="Creating New Entities in Specific Bundles" l="160#1567986" />
      <i t="Committing a Bundle" l="160#1568102" />
      <i t="Bundles and Web Services" l="160#1560993" />
      <i t="Removing Entities from the Database Entirely" l="160#1561324" />
    </i>
    <i t="Running Code in an Entirely New Bundle" l="161">
      <i t="Create Bundle For a Specific ClaimCenter User" l="161#1583029" />
      <i t="Warning about Transaction Class Confusion" l="161#1602225" />
    </i>
    <i t="Exception Handling in Transaction Blocks" l="162" />
    <i t="Determining What Entity Data Changed in a Bundle" l="163">
      <i t="Detecting If Any Element Changes Occurred" l="163#1571314" />
      <i t="Getting All Changed Properties From an Entity" l="163#1571181" />
      <i t="Bundle Change Methods Specific to Arrays" l="163#1569999" />
      <i t="Getting Add, Changed, or Deleted Entities In a Bundle" l="163#1571142" />
    </i>
    <i t="Bundle Commit and Query Implementation Details" l="164">
      <i t="How the Application Caches Entity Data and Prevents Problems" l="164#1568957" />
      <i t="Details of What Happens During Bundle Commit" l="164#1571347" />
    </i>
  </i>
  <i t="Gosu Templates" l="165">
    <i t="Template Overview" l="166">
      <i t="Template Expressions" l="166#1464080" />
      <i t="When to Escape Special Characters for Templates" l="167" />
    </i>
    <i t="Using Template Files" l="168">
      <i t="Creating and Running a Template File" l="168#1464601" />
      <i t="Template Scriptlet Tags" l="168#1461443" />
      <i t="Template Parameters" l="168#1463866" />
      <i t="Extending a Template From a Class" l="168#1455745" />
      <i t="Template Comments" l="168#1463274" />
    </i>
    <i t="Template Export Formats" l="168#1465221" />
  </i>
  <i t="Type System" l="169">
    <i t="Basic Type Coercion" l="169#1444327" />
    <i t="Basic Type Checking" l="170">
      <i t="Automatic Downcasting for ‘typeis’ and ‘typeof’" l="170#1455253" />
    </i>
    <i t="Using Reflection" l="171">
      <i t="Type Object Properties" l="171#1441372" />
      <i t="Java Type Reflection" l="171#1441477" />
      <i t="Type System Class" l="171#1465566" />
    </i>
    <i t="Compound Types" l="172" />
  </i>
  <i t="Concurrency" l="173">
    <i t="Overview of Thread Safety and Concurrency" l="174" />
    <i t="Gosu Scoping Classes (Pre-scoped Maps)" l="175" />
    <i t="Concurrent Lazy Variables" l="176" />
    <i t="Concurrent Cache" l="177" />
    <i t="Concurrency with Monitor Locks and Reentrant Objects" l="178" />
  </i>
  <i t="Gosu Programs and Command Line Tools" l="179">
    <i t="Gosu Shell Basics" l="180">
      <i t="Unpacking and Installing the Gosu Shell" l="180#2191323" />
      <i t="Gosu Command Line Tool Options" l="180#2182333" />
      <i t="Writing a Simple Gosu Program" l="180#2180168" />
    </i>
    <i t="Gosu Program Structure" l="181">
      <i t="Metaline as First Line" l="181#2182879" />
      <i t="Functions" l="181#2182773" />
      <i t="Calling Classes" l="181#2183011" />
    </i>
    <i t="Command Line Arguments" l="182" />
    <i t="Advanced Class Loading Registry" l="183" />
    <i t="The Self-Contained Gosu Editor" l="184" />
    <i t="Gosu Interactive Shell" l="185" />
    <i t="Helpful APIs for Command Line Gosu Programs" l="186" />
  </i>
  <i t="Running Local Shell Commands" l="187">
    <i t="Running Command Line Tools from Gosu" l="187#2186018" />
  </i>
  <i t="Checksums" l="188">
    <i t="Overview of Checksums" l="189" />
    <i t="Creating Fingerprints" l="189#1442951">
      <i t="How to Output Data Inside a Fingerprint" l="189#1443786" />
    </i>
    <i t="Extending Fingerprints" l="189#1442456" />
  </i>
  <i t="Coding Style" l="190">
    <i t="General Coding Guidelines" l="191">
      <i t="Omit Semicolons" l="191#1445233" />
      <i t="Type Declarations" l="191#1445238" />
      <i t="The == and != Operator Recommendations and Warnings" l="191#1445388" />
      <i t="Gosu Case Sensitivity Implications" l="191#1446066" />
      <i t="Class Variable and Class Property Recommendations" l="191#1446206" />
      <i t="Use ‘typeis’ Inference" l="191#1454113" />
    </i>
  </i>
</WebWorksHelpTOC>