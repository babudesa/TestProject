function FileData_Pairs(x)
{
x.t("example","initialize");
x.t("example","suppose");
x.t("example","define");
x.t("example","valid");
x.t("example","following");
x.t("example","var");
x.t("interfaces","single");
x.t("interfaces","common");
x.t("interfaces","gosu");
x.t("[key]","type");
x.t("properties","keys");
x.t("method","calls");
x.t("method","takes");
x.t("method","values");
x.t("hashmap","create");
x.t("hashmap","type");
x.t("hashmap","string");
x.t("hashmap","keys");
x.t("hashmap","maps");
x.t("hashmap","following");
x.t("hashmap","var");
x.t("easy","declare");
x.t("just","methods");
x.t("lists","example");
x.t("lists","defined");
x.t("within","gosu");
x.t("infers","type");
x.t("implement","interfaces");
x.t("implement","interface");
x.t("iteration","map");
x.t("create","custom");
x.t("create","empty");
x.t("static","final");
x.t("preserve","commonality");
x.t("commonality","interface");
x.t("key","key");
x.t("key","type");
x.t("key","strmap.keys");
x.t("key","value");
x.t("ensures","list");
x.t("wrapper","keyset");
x.t("java.util.hashmap","creating");
x.t("components","list");
x.t("java.lang.comparable","java.lang.number");
x.t("arguments","key");
x.t("creates","new");
x.t("double","implement");
x.t("double","var");
x.t("strs","new");
x.t("strs","creating");
x.t("strs","var");
x.t("last","example");
x.t("pair","map");
x.t("text_val.select","link");
x.t("interface","support");
x.t("interface","comparable");
x.t("interface","gosu");
x.t("interface","int");
x.t("interface","cases");
x.t("support","interface");
x.t("support","list");
x.t("basic","hashmaps");
x.t("type","example");
x.t("type","method");
x.t("type","hashmap");
x.t("type","within");
x.t("type","ensures");
x.t("type","objects");
x.t("type","includes");
x.t("type","list");
x.t("type","combines");
x.t("type","name");
x.t("type","compound");
x.t("type","map");
x.t("type","simply");
x.t("type","variable");
x.t("type","value");
x.t("type","inference");
x.t("type","following");
x.t("type","class");
x.t("strs.put","strs.put");
x.t("strs.put","syntax");
x.t("strs.put","var");
x.t("explicitly","redundant");
x.t("time","list");
x.t("calls","block");
x.t("bound","components");
x.t("however","implement");
x.t("however","gosu");
x.t("extend","maps");
x.t("typesafe","gosu");
x.t("apis","rely");
x.t("link","directly");
x.t("objects","gosu");
x.t("objects","contains");
x.t("new","hashmap");
x.t("new","map");
x.t("new","mean");
x.t("new","read-only");
x.t("want","initialize");
x.t("getting","setting");
x.t("items","list");
x.t("single","type");
x.t("comparable","type");
x.t("comparable","note");
x.t("includes","interfaces");
x.t("includes","items");
x.t("block","key/value");
x.t("block","two");
x.t("messsage","gosu");
x.t("generics","gosu");
x.t("generics","notation");
x.t("generics","cases");
x.t("infer","type");
x.t("list","type");
x.t("list","simple");
x.t("list","string");
x.t("list","acts");
x.t("list","statically");
x.t("list","types");
x.t("list","least");
x.t("list","untyped");
x.t("upper","bound");
x.t("finds","specific");
x.t("combines","class");
x.t("add","eachkeyandvalue");
x.t("add","two");
x.t("guide","collections");
x.t("easier-to-read","code");
x.t("simple","case");
x.t("collections","basic");
x.t("inherit","java");
x.t("inherit","behavior");
x.t("features","gosu");
x.t("features","allow");
x.t("features","optionally");
x.t("directly","page");
x.t("declare","static");
x.t("declare","explicitly");
x.t("text_val.focus","text_val.select");
x.t("creating","hashmap");
x.t("name","even");
x.t("resulting","type");
x.t("3.4","resulting");
x.t("common","special");
x.t("gosu","infers");
x.t("gosu","generics");
x.t("gosu","infer");
x.t("gosu","finds");
x.t("gosu","easier-to-read");
x.t("gosu","inherit");
x.t("gosu","provides");
x.t("gosu","attempts");
x.t("gosu","permits");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","assigns");
x.t("gosu","shortcuts");
x.t("gosu","special");
x.t("initialize","(load)");
x.t("initialize","java.util.map");
x.t("typed","optional");
x.t("brackets","using");
x.t("initializing","arrays");
x.t("initializing","maps");
x.t("custom","function");
x.t("part","java\u2019s");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","string");
x.t("methods","lists");
x.t("provides","additional");
x.t("makes","easy");
x.t("compound","type");
x.t("java.lang.number","however");
x.t("java.lang.number","means");
x.t("generic","parameters");
x.t("keyset","method");
x.t("map","example");
x.t("map","properties");
x.t("map","key");
x.t("map","string");
x.t("map","allowing");
x.t("map","explicit");
x.t("map","simply");
x.t("map","two");
x.t("map","class");
x.t("map","specify");
x.t("arrays","lists");
x.t("final","data");
x.t("strs.get","write");
x.t("attempts","preserve");
x.t("empty","map");
x.t("string","key");
x.t("string","java.lang.comparable");
x.t("string","strs");
x.t("string","strs.put");
x.t("string","compound");
x.t("string","java.lang.number");
x.t("string","string");
x.t("string","instead");
x.t("string","effectively");
x.t("string","strmap.eachkeyandvalue");
x.t("string","information");
x.t("string","values");
x.t("string","pass");
x.t("string","object");
x.t("allow","natural");
x.t("natural","iteration");
x.t("natural","syntax");
x.t("natural","index");
x.t("shorthand","following");
x.t("sets","gets");
x.t("write","instead");
x.t("printmap","new");
x.t("printmap","gosu");
x.t("printmap","strmap");
x.t("printmap","defined");
x.t("int","double");
x.t("structures","type");
x.t("permits","last");
x.t("rely","support");
x.t("(load)","data");
x.t("calcuates","returns");
x.t("allowing","natural");
x.t("error","occurred");
x.t("equivalent","code");
x.t("java.util.map","however");
x.t("java.util.map","call");
x.t("blocks","map");
x.t("syntax","gosu");
x.t("syntax","initializing");
x.t("syntax","makes");
x.t("syntax","using");
x.t("respectively","var");
x.t("suppose","create");
x.t("acts","expected");
x.t("java.util.arraylist","behavior");
x.t("concise","initializer");
x.t("concise","code");
x.t("initializer","syntax");
x.t("initializer","expression");
x.t("means","map");
x.t("guidewire_selectall","var");
x.t("valuefore","strs");
x.t("valuefore","strs.get");
x.t("initializes","int");
x.t("number","interface");
x.t("number","class");
x.t("function","printmap");
x.t("function","initializer");
x.t("function","guidewire_selectall");
x.t("function","callers");
x.t("function","verbose");
x.t("callers","function");
x.t("statically","typed");
x.t("define","hashmap");
x.t("different","types");
x.t("instead","natural");
x.t("instead","simply");
x.t("index","syntax");
x.t("keyword","new");
x.t("redundant","example");
x.t("compile","time");
x.t("types","implement");
x.t("types","objects");
x.t("explicit","function");
x.t("simply","wrapper");
x.t("simply","type");
x.t("simply","map");
x.t("expected","apis");
x.t("reference","guide");
x.t("code","creates");
x.t("code","type");
x.t("code","sets");
x.t("code","printmap");
x.t("code","equivalent");
x.t("code","initializes");
x.t("code","java");
x.t("code","var");
x.t("strmap","[key]");
x.t("strmap","new");
x.t("strmap","map");
x.t("assigns","compound");
x.t("emptymap","new");
x.t("mean","list");
x.t("least","upper");
x.t("java","getting");
x.t("java","class");
x.t("whose","values");
x.t("effectively","shorthand");
x.t("variable","compile");
x.t("java\u2019s","class");
x.t("occurred","messsage");
x.t("shortcuts","var");
x.t("strmap.eachkeyandvalue","key");
x.t("keys","map");
x.t("keys","calcuates");
x.t("keys","whose");
x.t("keys","values");
x.t("similar","initializing");
x.t("strmap.keys","print");
x.t("value","type");
x.t("value","strmap");
x.t("value","value");
x.t("value","enhancements");
x.t("value","print");
x.t("additional","features");
x.t("additional","enhancements");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","type");
x.t("eachkeyandvalue","method");
x.t("notation","example");
x.t("expression","without");
x.t("valid","typesafe");
x.t("hello","3.4");
x.t("takes","block");
x.t("page","error");
x.t("specifying","type");
x.t("information","generics");
x.t("data","gosu");
x.t("data","structures");
x.t("optional","declare");
x.t("inference","features");
x.t("inference","concise");
x.t("inference","gosu\u2019s");
x.t("defined","part");
x.t("defined","function");
x.t("read-only","properties");
x.t("values","hashmap");
x.t("values","map");
x.t("values","respectively");
x.t("values","enhancements");
x.t("values","returns");
x.t("case","above");
x.t("maps","just");
x.t("maps","gosu");
x.t("maps","string");
x.t("maps","similar");
x.t("maps","additional");
x.t("print","key");
x.t("above","type");
x.t("enhancements","extend");
x.t("enhancements","map");
x.t("enhancements","maps");
x.t("key/value","pair");
x.t("gosu\u2019s","intelligent");
x.t("verbose","code");
x.t("two","arguments");
x.t("two","new");
x.t("two","generic");
x.t("note","number");
x.t("cases","want");
x.t("cases","resulting");
x.t("optionally","concise");
x.t("call","function");
x.t("special","features");
x.t("special","enhancements");
x.t("following","code");
x.t("untyped","list");
x.t("class","interfaces");
x.t("class","implement");
x.t("class","java.util.hashmap");
x.t("class","add");
x.t("class","java.util.arraylist");
x.t("class","number");
x.t("using","generics");
x.t("using","gosu");
x.t("setting","values");
x.t("pass","different");
x.t("returns","keys");
x.t("returns","values");
x.t("without","specifying");
x.t("behavior","java.util.map");
x.t("behavior","maps");
x.t("hashmaps","basic");
x.t("hashmaps","function");
x.t("hashmaps","maps");
x.t("var","strs");
x.t("var","text_val=eval");
x.t("var","valuefore");
x.t("var","strmap");
x.t("var","emptymap");
x.t("var","hello");
x.t("even","keyword");
x.t("specify","type");
x.t("contains","brackets");
x.t("object","string");
x.t("object","var");
x.t("gets","string");
x.t("intelligent","type");
}
