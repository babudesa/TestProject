function FileData_Pairs(x)
{
x.t("example","gosu");
x.t("example","instead");
x.t("example","fully");
x.t("example","following");
x.t("example","class");
x.t("looks","following");
x.t("properties","properties");
x.t("properties","backed");
x.t("properties","functions");
x.t("properties","important");
x.t("properties","information");
x.t("properties","object");
x.t("method","looks");
x.t("method","parameter");
x.t("method","within");
x.t("method","add");
x.t("method","directly");
x.t("method","name");
x.t("method","arg");
x.t("method","function");
x.t("method","simply");
x.t("parameter","list");
x.t("doaction","method");
x.t("doaction","arg1");
x.t("construct","example");
x.t("construct","print");
x.t("construct","super");
x.t("combined","data");
x.t("just","called");
x.t("just","created");
x.t("rather","instance");
x.t("backed","private");
x.t("version","looks");
x.t("claim",":claimid");
x.t("within","class");
x.t("clear","object");
x.t("studio","create");
x.t("studio","creates");
x.t("create","instance");
x.t("create","new");
x.t("create","constructor");
x.t("create","class");
x.t("build","studio");
x.t("build","editor");
x.t("tree","construct");
x.t("tree","extends");
x.t("tree","object");
x.t("static","method");
x.t("static","properties");
x.t("static","variables");
x.t("static","public");
x.t("static","modifier");
x.t("static","methods");
x.t("static","functions");
x.t("variables","properties");
x.t("variables","static");
x.t("variables","public");
x.t("variables","want");
x.t("variables","new");
x.t("variables","supported");
x.t("variables","words");
x.t("variables","instead");
x.t("variables","class");
x.t("instance","type");
x.t("instance","in-memory");
x.t("instance","variable");
x.t("instance","called");
x.t("instance","class");
x.t("testid","information");
x.t("always","start");
x.t("arguments","method");
x.t("arguments","different");
x.t("arguments","separated");
x.t("parametername","typename");
x.t("asso","ciated");
x.t("ciated","process");
x.t("subpackage","gwservices.messaging.queueutils");
x.t("enumerations","package");
x.t("creates","simple");
x.t("creates","template");
x.t("creates","package");
x.t("refers","functions");
x.t("current","constructor");
x.t("customername.subpackage","smithco.messaging.queueutils");
x.t("contexts","functions");
x.t("uses","code");
x.t("line","subclass");
x.t("later","name");
x.t("text_val.select","link");
x.t("interface","enhancement");
x.t("type","example");
x.t("type","defining");
x.t("type","class");
x.t("type","names");
x.t("capital","letter");
x.t("capital","letters");
x.t("gwservices","subpackage");
x.t("public","method");
x.t("public","properties");
x.t("public","variables");
x.t("public","function");
x.t("public","var");
x.t("calls","creating");
x.t("calls","superclass");
x.t("calls","myclass");
x.t("delete","class");
x.t("packages","importing");
x.t("packages","classes");
x.t("followed","method");
x.t("extend","class");
x.t("however","names");
x.t("no-argument","constructor");
x.t("guidewire","recommends");
x.t("guidewire","professional");
x.t("guidewire","strongly");
x.t("guidewire","internal");
x.t("lowercase","characters");
x.t("link","directly");
x.t("new","claim");
x.t("new","instance");
x.t("new","gosu");
x.t("new","in-memory");
x.t("new","expressions");
x.t("new","smithco.messaging.queueutils");
x.t("new","expression");
x.t("new","class");
x.t("new","myclass");
x.t("new","operator");
x.t("new","object");
x.t("want","create");
x.t("want","call");
x.t("objects","simple");
x.t("access","classes");
x.t("start","initial");
x.t("prefix","gw");
x.t("prefix","com.guidewire");
x.t("ambiguity","class");
x.t("messsage","gosu");
x.t("list","arguments");
x.t("list","list");
x.t("list","no");
x.t("list","parentheses");
x.t("list","note");
x.t("initialization","actions");
x.t("need","class");
x.t("_firstname","string");
x.t("namespaces","guidewire");
x.t("namespaces","write");
x.t("namespaces","class");
x.t("clarity","guidewire");
x.t("add","variables");
x.t("add","keyword");
x.t("add","additional");
x.t("add","class");
x.t("actions","create");
x.t("recommends","public");
x.t("recommends","following");
x.t("guide","classes");
x.t("simple","method");
x.t("simple","version");
x.t("simple","gosu");
x.t("simple","class");
x.t("initializers","new");
x.t("initializers","allow");
x.t("initializers","compact");
x.t("directly","page");
x.t("directly","class");
x.t("commas","format");
x.t("desired","delete");
x.t("parameter_list","gosu");
x.t("declare","static");
x.t("writing","public");
x.t("sampleclaim","new");
x.t("creating","static");
x.t("creating","instance");
x.t("creating","new");
x.t("creating","instantiating");
x.t("text_val.focus","text_val.select");
x.t("name","method");
x.t("name","prefix");
x.t("name","clarity");
x.t("name","argument");
x.t("name","namespace");
x.t("name","classes");
x.t("name","class");
x.t("definition","class");
x.t("no","arguments");
x.t("gosu","uses");
x.t("gosu","calls");
x.t("gosu","reference");
x.t("gosu","enhancements");
x.t("gosu","classes");
x.t("gosu","class");
x.t("constructor","example");
x.t("constructor","static");
x.t("constructor","initialization");
x.t("constructor","need");
x.t("constructor","add");
x.t("constructor","name");
x.t("constructor","different");
x.t("constructor","matches");
x.t("constructor","call");
x.t("constructor","special");
x.t("constructor","super");
x.t("initialize","variable");
x.t("someone","just");
x.t("part","resource");
x.t("part","language");
x.t("part","classes");
x.t("argument","list");
x.t("modifier","although");
x.t("modifier","naming");
x.t("enumeration","type");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","example");
x.t("methods","static");
x.t("methods","variables");
x.t("methods","contexts");
x.t("methods","add");
x.t("methods","creating");
x.t("methods","standard");
x.t("methods","keyword");
x.t("useful","combined");
x.t("instantiating","classes");
x.t("instantiating","class");
x.t("standard","object-oriented");
x.t("declarations","especially");
x.t("namespace","importing");
x.t("namespace","class");
x.t("professional","services");
x.t("arg","arg1");
x.t("enhancement","enumeration");
x.t("enhancement","naming");
x.t("gw","package");
x.t("string","public");
x.t("string","simple");
x.t("string","instead");
x.t("string","information");
x.t("string","print");
x.t("string","firstname");
x.t("string","optionally");
x.t("empty","argument");
x.t("allow","properties");
x.t("accessed","package");
x.t("write","gosu");
x.t("resource","pane");
x.t("defining","properties");
x.t("defining","package");
x.t("characters","access");
x.t("contain","additional");
x.t("functions","declare");
x.t("functions","part");
x.t("functions","methods");
x.t("functions","called");
x.t("functions","class");
x.t("in-memory","instance");
x.t("in-memory","copy");
x.t("error","occurred");
x.t("supported","part");
x.t("strongly","recommends");
x.t("compact","clear");
x.t("especially","useful");
x.t("syntax","nested");
x.t("first","line");
x.t("feature","called");
x.t("guidewire_selectall","var");
x.t("constructors","gosu");
x.t("number","arguments");
x.t("importing","types");
x.t("function","doaction");
x.t("function","followed");
x.t("function","guidewire_selectall");
x.t("editor","creates");
x.t("define","customername.subpackage");
x.t("define","methods");
x.t("different","enhancement");
x.t("different","number");
x.t("different","types");
x.t("private","variables");
x.t("private","var");
x.t("words","new");
x.t("expressions","note");
x.t("expressions","object");
x.t("may","contain");
x.t("instead","static");
x.t("instead","writing");
x.t("instead","using");
x.t("language","compatibility");
x.t("keyword","static");
x.t("keyword","first");
x.t("keyword","function");
x.t("keyword","var");
x.t("format","parametername");
x.t("superclass","no-argument");
x.t("superclass","constructor");
x.t("types","current");
x.t("types","package");
x.t("internal","classes");
x.t("object-oriented","terminology");
x.t("simply","construct");
x.t("important","guidewire");
x.t("initial","capital");
x.t("reference","guide");
x.t("right-clicking","package");
x.t("code","new");
x.t("languages","guidewire");
x.t("instantiate","class");
x.t("fully","qualified");
x.t("slightly","different");
x.t("matches","matching");
x.t("upon","build");
x.t("documentation","refers");
x.t("variable","public");
x.t("variable","var");
x.t("parentheses","empty");
x.t("occurred","messsage");
x.t("constructing","new");
x.t("smithco.messaging.queueutils","guidewire");
x.t("smithco.messaging.queueutils","object");
x.t("rules","slightly");
x.t("qualified","class");
x.t("additional","capital");
x.t("additional","class");
x.t("terminology","documentation");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("compatibility","languages");
x.t("extends","plant");
x.t("process","constructing");
x.t("template","class");
x.t("although","public");
x.t("expression","object");
x.t("services","classes");
x.t("page","error");
x.t("butter","define");
x.t("information","static");
x.t("information","packages");
x.t("information","new");
x.t("information","creating");
x.t("information","defining");
x.t("data","asso");
x.t("data","structure");
x.t("gwservices.messaging.queueutils","warning");
x.t("arg1","string");
x.t("arg1","constructors");
x.t("appropriate","constructor");
x.t("nested","objects");
x.t("pane","studio");
x.t("mystringinstancevariable","string");
x.t("mystringinstancevariable","butter");
x.t("letter","however");
x.t("called","doaction");
x.t("called","creating");
x.t("called","methods");
x.t("called","instantiating");
x.t("print","tree");
x.t("print","someone");
x.t("firstname","public");
x.t("firstname","string");
x.t("structure","syntax");
x.t(":claimid","testid");
x.t("enhancements","naming");
x.t("classes","properties");
x.t("classes","studio");
x.t("classes","create");
x.t("classes","enumerations");
x.t("classes","gwservices");
x.t("classes","creating");
x.t("classes","part");
x.t("classes","function");
x.t("classes","private");
x.t("classes","define");
x.t("classes","types");
x.t("classes","information");
x.t("classes","package");
x.t("classes","without");
x.t("note","within");
x.t("note","gosu");
x.t("note","call");
x.t("optionally","initialize");
x.t("typically","want");
x.t("typically","appropriate");
x.t("itself","rather");
x.t("copy","data");
x.t("prevents","ambiguity");
x.t("letters","later");
x.t("package","example");
x.t("package","namespaces");
x.t("package","name");
x.t("package","namespace");
x.t("package","prevents");
x.t("package","names");
x.t("package","naming");
x.t("package","conventions");
x.t("created","desired");
x.t("created","call");
x.t("call","method");
x.t("call","superclass");
x.t("call","super");
x.t("subclass","constructor");
x.t("immediately","new");
x.t("separated","commas");
x.t("following","simple");
x.t("following","package");
x.t("following","class");
x.t("following","var");
x.t("special","method");
x.t("class","within");
x.t("class","tree");
x.t("class","variables");
x.t("class","instance");
x.t("class","interface");
x.t("class","extend");
x.t("class","new");
x.t("class","add");
x.t("class","definition");
x.t("class","name");
x.t("class","constructor");
x.t("class","gosu");
x.t("class","accessed");
x.t("class","functions");
x.t("class","feature");
x.t("class","editor");
x.t("class","right-clicking");
x.t("class","instantiate");
x.t("class","upon");
x.t("class","note");
x.t("class","typically");
x.t("class","itself");
x.t("class","package");
x.t("class","using");
x.t("class","myclass");
x.t("class","names");
x.t("class","var");
x.t("class\u2019s","constructor");
x.t("using","static");
x.t("using","public");
x.t("warning","classes");
x.t("myclass","gosu");
x.t("myclass","class\u2019s");
x.t("myclass","var");
x.t("operator","var");
x.t("without","creating");
x.t("names","always");
x.t("names","type");
x.t("names","may");
x.t("names","consist");
x.t("var","new");
x.t("var","_firstname");
x.t("var","sampleclaim");
x.t("var","text_val=eval");
x.t("var","keyword");
x.t("var","mystringinstancevariable");
x.t("var","firstname");
x.t("naming","rules");
x.t("naming","package");
x.t("naming","conventions");
x.t("conventions","type");
x.t("conventions","packages");
x.t("completely","lowercase");
x.t("com.guidewire","prefix");
x.t("typename","example");
x.t("object","just");
x.t("object","initializers");
x.t("object","declarations");
x.t("object","expressions");
x.t("object","immediately");
x.t("super","parameter_list");
x.t("super","gosu");
x.t("super","keyword");
x.t("super","print");
x.t("plant","construct");
x.t("matching","parameter");
x.t("consist","completely");
}
