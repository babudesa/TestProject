function FileData_Pairs(x)
{
x.t("example","foreign");
x.t("example","creates");
x.t("example","type");
x.t("example","samplechild");
x.t("example","simple");
x.t("example","gosu");
x.t("example","secondary");
x.t("example","outer");
x.t("example","suppose");
x.t("example","adds");
x.t("example","intend");
x.t("example","var");
x.t("example","matching");
x.t("complex","queries");
x.t("tells","database");
x.t("min","max");
x.t("method","example");
x.t("method","contact");
x.t("method","table");
x.t("method","arguments");
x.t("method","later");
x.t("method","variants");
x.t("method","original");
x.t("method","signature");
x.t("method","again");
x.t("method","add");
x.t("method","no");
x.t("method","gosu");
x.t("method","perform");
x.t("method","suppose");
x.t("method","function");
x.t("method","approach");
x.t("method","cannot");
x.t("method","instead");
x.t("method","end");
x.t("method","return");
x.t("method","adds");
x.t("method","thus");
x.t("method","query");
x.t("method","defined");
x.t("method","join");
x.t("method","pass");
x.t("method","returns");
x.t("method","sql");
x.t("chaining","chaining");
x.t("chaining","methods");
x.t("notes","duplicates");
x.t("properties","childtable.compare");
x.t("properties","default");
x.t("properties","joined");
x.t("properties","perform");
x.t("properties","outer");
x.t("properties","q.comparein");
x.t("properties","containing");
x.t("properties","child");
x.t("columns","create");
x.t("columns","outer");
x.t("columns","query");
x.t("columns","join");
x.t("possible","several");
x.t("parameter","example");
x.t("childtable.compare","childpriority");
x.t("building","up");
x.t("pattern","guidewire");
x.t("pattern","called");
x.t("pattern","var");
x.t("version","property");
x.t("claim","foreign");
x.t("claim","claim.exposures");
x.t("claim","contains");
x.t("easy","accidentally");
x.t("implement","interface");
x.t("every","situation");
x.t("retired","flag");
x.t("retired","entities");
x.t("retired","property");
x.t("files","find");
x.t("shown","following");
x.t("table","example");
x.t("table","notes");
x.t("table","possible");
x.t("table","properties");
x.t("table","columns");
x.t("table","table");
x.t("table","related");
x.t("table","best");
x.t("table","getcolumnref");
x.t("table","however");
x.t("table","multiple");
x.t("table","original");
x.t("table","want");
x.t("table","advanced");
x.t("table","desirable");
x.t("table","add");
x.t("table","joined");
x.t("table","due");
x.t("table","referred");
x.t("table","forward");
x.t("table","name");
x.t("table","exists");
x.t("table","secondary");
x.t("table","string");
x.t("table","parent");
x.t("table","design");
x.t("table","outerjoin");
x.t("table","carefully");
x.t("table","unique");
x.t("table","cannot");
x.t("table","linking");
x.t("table","instead");
x.t("table","match");
x.t("table","calling");
x.t("table","primary");
x.t("table","accident");
x.t("table","additional");
x.t("table","--");
x.t("table","result");
x.t("table","join");
x.t("table","joins");
x.t("table","call");
x.t("table","reverse");
x.t("table","following");
x.t("table","links");
x.t("table","entity");
x.t("table","using");
x.t("table","adding");
x.t("table","child");
x.t("table","including");
x.t("table","var");
x.t("table","even");
x.t("table","object");
x.t("contact","guidewire");
x.t("contact","produces");
x.t("contact","associated");
x.t("create","duplicate");
x.t("create","duplicates");
x.t("create","inline");
x.t("create","two");
x.t("create","sql");
x.t("situation","different");
x.t("static","methods");
x.t("key","samplechild");
x.t("key","secondary");
x.t("key","exposure");
x.t("key","retirable");
x.t("key","primary");
x.t("key","column");
x.t("key","child");
x.t("related","teste");
x.t("related","information");
x.t("having","method");
x.t("having","keyword");
x.t("10","q.findretired");
x.t("testa","testa_view");
x.t("testa","instances");
x.t("qroot.externaluser","qroot.retired");
x.t("action","directly");
x.t("foreign","key");
x.t("limits","rows");
x.t("arguments","next");
x.t("arguments","joincolumnonthistable");
x.t("arguments","order");
x.t("likely","want");
x.t("apply","forward");
x.t("performs","better");
x.t("flag","true");
x.t("cc_contact_1.retired","qroot.externaluser");
x.t("tables","following");
x.t("tables","restrictions");
x.t("questions","contact");
x.t("questions","join");
x.t("topic","uses");
x.t("topic","add");
x.t("q.join","contact");
x.t("q.join","samplechild");
x.t("q.join","mychildobjectproperty");
x.t("try","reduce");
x.t("referenced","columns");
x.t(".atmostonerow.id","prints");
x.t("testa_view","group");
x.t("creates","query");
x.t("user","entities");
x.t("uses","namespace");
x.t("uses","terminology");
x.t("later","topic");
x.t("later","section");
x.t("later","call");
x.t("line","builder");
x.t("findretired","property");
x.t("13","cc_contact_1.retired");
x.t("text_val.select","link");
x.t("support","important");
x.t("support","inline");
x.t("interface","tables");
x.t("interface","queries");
x.t("necessary","due");
x.t("statement","takes");
x.t("greaterthan","inlineview.getcolumnref");
x.t("teste","inner");
x.t("teste","thus");
x.t("teste","entity");
x.t("childtable.getcolumnref","childpriority");
x.t("cc_contact","cc_contact_1");
x.t("customer","support");
x.t("type","method");
x.t("type","samplechild");
x.t("type","direct");
x.t("type","query");
x.t("type","sampleparent");
x.t("best","ensure");
x.t("lots","results");
x.t("(testa)","var");
x.t("getcolumnref","method");
x.t("getcolumnref","want");
x.t("calls","inline");
x.t("variants","defined");
x.t("however","columns");
x.t("however","every");
x.t("however","add");
x.t("however","cases");
x.t("multiple","tables");
x.t("multiple","matches");
x.t("inlineviewquery","query");
x.t("guidewire","customer");
x.t("guidewire","entities");
x.t("guidewire","recommends");
x.t("property","default");
x.t("property","joined");
x.t("property","false");
x.t("property","true");
x.t("property","name");
x.t("property","gosu");
x.t("property","mychildobjectproperty");
x.t("property","match");
x.t("property","primary");
x.t("property","value");
x.t("property","called");
x.t("property","links");
x.t("default","properties");
x.t("default","find");
x.t("default","queries");
x.t("original","table");
x.t("original","query");
x.t("entities","properties");
x.t("entities","retired");
x.t("entities","type");
x.t("entities","default");
x.t("entities","logically");
x.t("entities","remain");
x.t("entities","allowing");
x.t("entities","externaluser");
x.t("entities","retirable");
x.t("entities","primary");
x.t("entities","database");
x.t("entities","data");
x.t("entities","query\u2019s");
x.t("entities","child");
x.t("back","claim");
x.t("needed","real-world");
x.t("automatically","selects");
x.t("automatically","adds");
x.t("automatically","predicates");
x.t("viewquery","query.make");
x.t("viewquery","next");
x.t("cc_contact_1","cc_contact_1.id=qroot.contactid");
x.t("link","line");
x.t("link","back");
x.t("link","directly");
x.t("link","parent");
x.t("advanced","queries");
x.t("advanced","feature");
x.t("advanced","inline");
x.t("differences","questions");
x.t("objects","tables");
x.t("objects","link");
x.t("objects","important");
x.t("samplechild","table");
x.t("samplechild","duplicate");
x.t("samplechild","parent");
x.t("samplechild","q.outerjoin");
x.t("samplechild","column");
x.t("samplechild","entity");
x.t("samplechild","contained");
x.t("samplechild","links");
x.t("samplechild","var");
x.t("prefix","cc_mychildobjectproperty");
x.t("want","however");
x.t("want","add");
x.t("want","find");
x.t("want","outer");
x.t("want","maximum");
x.t("want","return");
x.t("want","duplicates");
x.t("want","join");
x.t("details","examples");
x.t("items","secondary");
x.t("items","primary");
x.t("signature","including");
x.t("distinct","results");
x.t("certain","property");
x.t("new","query");
x.t("new","inline");
x.t("new","predicates");
x.t("desirable","cases");
x.t("[false]","select");
x.t("messsage","gosu");
x.t("again","pass");
x.t("dbfunction.max","childtable.getcolumnref");
x.t("dbfunction.max","test");
x.t("cc_user","qroot");
x.t("add","comparison");
x.t("add","extra");
x.t("add","additional");
x.t("add","predicates");
x.t("add","column");
x.t("add","reverse");
x.t("id","teste");
x.t("id","viewquery");
x.t("id","myentityids");
x.t("joined","table");
x.t("recommends","trying");
x.t(".compare","childpriority");
x.t("group","teste.id");
x.t("guide","query");
x.t("due","performance");
x.t("due","sql");
x.t("simple","inner");
x.t("results","distinct");
x.t("results","consider");
x.t("results","join");
x.t("results","turn");
x.t("testing","join");
x.t("api","help");
x.t("normally","needed");
x.t("check","retired");
x.t("duplicate","row");
x.t("duplicate","rows");
x.t("duplicate","issue");
x.t("referred","inner");
x.t("false","parameter");
x.t("false","contact");
x.t("false","q.join");
x.t("selects","referenced");
x.t("directly","page");
x.t("directly","call");
x.t("selective","words");
x.t("true","entities");
x.t("true","advanced");
x.t("true","argument");
x.t("true","var");
x.t("test","code");
x.t("teste.id","testa_view.e");
x.t("requires","join");
x.t("text_val.focus","text_val.select");
x.t("forward","direction");
x.t("forward","join");
x.t("forward","joins");
x.t("name","joined");
x.t("name","cc_");
x.t("name","string");
x.t("name","primary");
x.t("name","join");
x.t("name","column");
x.t("name","pass");
x.t("no","arguments");
x.t("no","samplechild");
x.t("no","items");
x.t("no","additional");
x.t("no","associated");
x.t("direction","contains");
x.t("(true)","q.join");
x.t("creating","join");
x.t("gosu","version");
x.t("gosu","claim");
x.t("gosu","entities");
x.t("gosu","automatically");
x.t("gosu","hides");
x.t("gosu","reference");
x.t("gosu","query");
x.t("gosu","returns");
x.t("subselect","method");
x.t("subselect","advanced");
x.t("subselect","reverse");
x.t("subselect","using");
x.t("query.make","(testa)");
x.t("query.make","(sampleparent)");
x.t("query.make","(teste)");
x.t("query.make","(user)");
x.t("iterate","across");
x.t("performance","testing");
x.t("performance","implications");
x.t("(a)","max_a");
x.t("sample.priority","property");
x.t("searches","user");
x.t("handles","types");
x.t("direct","builder");
x.t("perform","inner");
x.t("perform","minimum");
x.t("perform","better");
x.t("accordingly","warning");
x.t("limit","results");
x.t("limit","query");
x.t("argument","limit");
x.t("comparison","predicates");
x.t("outerquery.select",".atmostonerow.id");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("inner","forward");
x.t("inner","query");
x.t("inner","join");
x.t("inner","joins");
x.t("methods","joined");
x.t("methods","return");
x.t("methods","defined");
x.t("methods","dbfunction");
x.t("secondary","table");
x.t("secondary","clause");
x.t("exists","secondary");
x.t("exists","child");
x.t("alternatively","link");
x.t("parentpriority","dbfunction.min");
x.t("up","complex");
x.t("determine","property");
x.t("cc_","prefix");
x.t("namespace","properties");
x.t("namespace","original");
x.t("namespace","joined");
x.t("standard","design");
x.t("accidentally","create");
x.t("trying","approaches");
x.t("find","retired");
x.t("find","entities");
x.t("find","non-retired");
x.t("mychildobjectproperty","childtable.compare");
x.t("mychildobjectproperty","however");
x.t("mychildobjectproperty","add");
x.t("mychildobjectproperty",".compare");
x.t("mychildobjectproperty","q.having");
x.t("mychildobjectproperty","q.compare");
x.t("mychildobjectproperty","note");
x.t("mychildobjectproperty","reverse");
x.t("mychildobjectproperty","//");
x.t("mychildobjectproperty","contains");
x.t("arrays","entities");
x.t("exposures","link");
x.t("exposures","exposures");
x.t("qroot.retired","notice");
x.t("write","code");
x.t("string","method");
x.t("string","inlineviewquery");
x.t("string","join");
x.t("array","want");
x.t("array","exposures");
x.t("array","parent");
x.t("exposure","links");
x.t("linked","parent");
x.t("critical","note");
x.t("contain","associated");
x.t("understand","reverse");
x.t("addition","having");
x.t("earlier","rewrite");
x.t("logically","deleted");
x.t("remain","database");
x.t("extra","columns");
x.t("prints","id");
x.t("subobjects","type");
x.t("(sampleparent)","q.join");
x.t("(sampleparent)","q.compare");
x.t("(sampleparent)","q.withdistinct");
x.t("(sampleparent)","q.comparein");
x.t("(sampleparent)","//");
x.t("(sampleparent)","var");
x.t("hides","implementation");
x.t("allowing","queries");
x.t("allowing","view");
x.t("quality","defined");
x.t("functions","suppose");
x.t("error","occurred");
x.t("queries","implement");
x.t("queries","guidewire");
x.t("queries","add");
x.t("queries","find");
x.t("queries","subselects");
x.t("queries","carefully");
x.t("queries","view");
x.t("queries","typically");
x.t("contrast","cases");
x.t("notice","automatically");
x.t("notice","duplicate");
x.t("notice","gosu");
x.t("approaches","performance");
x.t("approaches","limiting");
x.t("joincolumnonviewtable","name");
x.t("(teste)","next");
x.t("commands","min");
x.t("outer","table");
x.t("outer","query");
x.t("outer","join");
x.t("outer","joins");
x.t("outer","reverse");
x.t("involve","methods");
x.t("suppose","create");
x.t("suppose","want");
x.t("suppose","add");
x.t("suppose","entity");
x.t("suppose","child");
x.t("next","add");
x.t("next","inline");
x.t("next","column");
x.t("joincolumnonthistable","name");
x.t("first","determine");
x.t("q.having",".compare");
x.t("q.having",".between");
x.t("feature","necessary");
x.t("feature","normally");
x.t("select","statement");
x.t("select","teste");
x.t("select","cc_user");
x.t("select","max");
x.t("minimum","maximum");
x.t("minimum","samplechild.priority");
x.t("guidewire_selectall","var");
x.t("subselects","joins");
x.t("control","whether");
x.t("qroot","inner");
x.t("function","guidewire_selectall");
x.t("approach","instead");
x.t("approach","joins");
x.t("approach","reverse");
x.t("approach","call");
x.t("approach","adding");
x.t("design","pattern");
x.t("design","queries");
x.t("design","query");
x.t("parent","example");
x.t("parent","table");
x.t("parent","foreign");
x.t("parent","want");
x.t("parent","linked");
x.t("parent","q.having");
x.t("parent","duplicates");
x.t("parent","object");
x.t("maximum","commands");
x.t("maximum","row");
x.t("maximum","samplechild.priority");
x.t("maximum","values");
x.t("maximum","entity");
x.t("better","example");
x.t("better","subselect");
x.t("better","using");
x.t("q.compare","externaluser");
x.t("q.compare","childpriority");
x.t("q.compare","parentproperty1");
x.t("determining","items");
x.t("max","static");
x.t("max","(a)");
x.t("externaluser","property");
x.t("externaluser","equals");
x.t("cannot","example");
x.t("cannot","approach");
x.t("outerjoin","method");
x.t("outerjoin","may");
x.t("outerjoin","using");
x.t("carefully","design");
x.t("carefully","mind");
x.t("may","generate");
x.t("unique","secondary");
x.t("different","cases");
x.t("words","add");
x.t("words","secondary");
x.t("whether","predicates");
x.t("non-retired","entities");
x.t("linking","secondary");
x.t("instead","join");
x.t("instead","called");
x.t("instead","using");
x.t("twice","query");
x.t("row","primary");
x.t("row","matches");
x.t("mind","want");
x.t("reduce","duplicates");
x.t("technically","return");
x.t(".between","parentpriority");
x.t("types","tables");
x.t("types","objects");
x.t("types","subselect");
x.t("types","joins");
x.t("match","samplechild");
x.t("match","api");
x.t("match","secondary");
x.t("match","specific");
x.t("returned","twice");
x.t("keyword","tells");
x.t("section","duplicates");
x.t("real-world","code");
x.t("important","building");
x.t("important","understand");
x.t("important","queries");
x.t("important","join");
x.t("rewrite","subselect");
x.t("added","join");
x.t("calling","predicate");
x.t("retirable","quality");
x.t("retirable","query");
x.t("reference","columns");
x.t("reference","guide");
x.t("rows","gosu");
x.t("rows","primary");
x.t("code","feature");
x.t("code","result");
x.t("code","print");
x.t("end","type");
x.t("cc_mychildobjectproperty","add");
x.t("rewriting","subselect");
x.t("optimizer","often");
x.t("optimizer","typically");
x.t("return","type");
x.t("return","duplicate");
x.t("return","maximum");
x.t("return","result");
x.t("return","two");
x.t("primary","table");
x.t("primary","entity");
x.t("level","child");
x.t("often","performs");
x.t("two-parameter","method");
x.t("adds","check");
x.t("adds","predicates");
x.t("adds","sql");
x.t("thus","either");
x.t("thus","generates");
x.t("database","retired");
x.t("database","functions");
x.t("database","level");
x.t("database","interested");
x.t("database","column");
x.t("appear","gosu");
x.t("previous","example");
x.t("matches","example");
x.t("matches","no");
x.t("matches","secondary");
x.t("matches","query");
x.t("matches","entity");
x.t("issue","reverse");
x.t("limiting","duplicates");
x.t("q.withdistinct","(true)");
x.t("produces","sql");
x.t("actual","database");
x.t("ensure","table");
x.t("greater","maximum");
x.t("samplechild.priority","properties");
x.t("samplechild.priority","values");
x.t("occurred","messsage");
x.t("accident","using");
x.t("extremely","important");
x.t("consider","rewriting");
x.t("consider","using");
x.t("null","matches");
x.t("natively","handles");
x.t("configuration","files");
x.t("teste.e","greater");
x.t("teste.e","testa_view.max_a");
x.t("instances","related");
x.t("terminology","inner");
x.t("additional","duplicates");
x.t("additional","predicates");
x.t("additional","join");
x.t("q.comparein","id");
x.t("value","true");
x.t("value","minimum");
x.t("value","following");
x.t("predicate","methods");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","detail");
x.t("several","approaches");
x.t("specific","value");
x.t("--","uses");
x.t("outerquery.compare","greaterthan");
x.t("max_a","testa");
x.t("constant","database");
x.t("dbfunction.min","childtable.getcolumnref");
x.t("builder","pattern");
x.t("builder","advanced");
x.t("builder","approach");
x.t("view","table");
x.t("view","automatically");
x.t("view","add");
x.t("view","extra");
x.t("view","technically");
x.t("view","query");
x.t("view","reverse");
x.t("view","call");
x.t("generate","duplicates");
x.t("childtable","q.join");
x.t("childtable","q.outerjoin");
x.t("subquery","having");
x.t("subquery","limit");
x.t("takes","following");
x.t("page","error");
x.t("help","information");
x.t("query","want");
x.t("query","distinct");
x.t("query","new");
x.t("query","requires");
x.t("query","searches");
x.t("query","accordingly");
x.t("query","limit");
x.t("query","exists");
x.t("query","namespace");
x.t("query","joincolumnonviewtable");
x.t("query","outer");
x.t("query","select");
x.t("query","words");
x.t("query","optimizer");
x.t("query","reference");
x.t("query","matches");
x.t("query","--");
x.t("query","outerquery.compare");
x.t("query","builder");
x.t("query","query");
x.t("query","result");
x.t("query","inline");
x.t("query","mentioned");
x.t("query","created");
x.t("query","returns");
x.t("query","pass");
x.t("query","var");
x.t("iquerybuilder","interface");
x.t("iquerybuilder","forward");
x.t("iquerybuilder","types");
x.t("information","having");
x.t("information","differences");
x.t("information","advanced");
x.t("information","subselect");
x.t("duplicates","later");
x.t("duplicates","want");
x.t("duplicates","primary");
x.t("duplicates","reverse");
x.t("duplicates","created");
x.t("q.outerjoin","samplechild");
x.t("q.outerjoin","mychildobjectproperty");
x.t("data","model");
x.t("claim.exposures","property");
x.t("childpriority","example");
x.t("childpriority","dbfunction.max");
x.t("childpriority","equals");
x.t("query\u2019s","findretired");
x.t("inlineview","method");
x.t("inlineview","outerquery.inlineview");
x.t("defined","iquerybuilder");
x.t("defined","data");
x.t("result","having");
x.t("result","action");
x.t("result","primary");
x.t("result","result");
x.t("result","join");
x.t("result","returns");
x.t("result","extract");
x.t("inline","view");
x.t("inline","views");
x.t("read-only","array");
x.t("examples","however");
x.t("examples","add");
x.t("examples","inner");
x.t("examples","notice");
x.t("equals","10");
x.t("equals","add");
x.t("equals","false");
x.t("equals","alternatively");
x.t("equals","addition");
x.t("equals","//");
x.t("interested","determining");
x.t("save","result");
x.t("inlineview.getcolumnref","dbfunction.max");
x.t("testa_view.max_a","notice");
x.t("cc_contact_1.subtype","13");
x.t("join","example");
x.t("join","method");
x.t("join","table");
x.t("join","create");
x.t("join","cc_contact");
x.t("join","multiple");
x.t("join","property");
x.t("join","samplechild");
x.t("join","forward");
x.t("join","standard");
x.t("join","queries");
x.t("join","outer");
x.t("join","first");
x.t("join","select");
x.t("join","control");
x.t("join","outerjoin");
x.t("join","row");
x.t("join","types");
x.t("join","rewrite");
x.t("join","important");
x.t("join","two-parameter");
x.t("join","consider");
x.t("join","constant");
x.t("join","query");
x.t("join","read-only");
x.t("join","examples");
x.t("join","note");
x.t("join","column");
x.t("join","reverse");
x.t("join","using");
x.t("join","adding");
x.t("join","pass");
x.t("join","definitions");
x.t("join","var");
x.t("join","specify");
x.t("predicates","properties");
x.t("predicates","limits");
x.t("predicates","original");
x.t("predicates","joined");
x.t("predicates","selective");
x.t("predicates","outer");
x.t("predicates","added");
x.t("predicates","primary");
x.t("predicates","subquery");
x.t("predicates","query");
x.t("predicates","result");
x.t("predicates","join");
x.t("predicates","var");
x.t("implications","questions");
x.t("values","testa");
x.t("values","maximum");
x.t("(user)","q.compare");
x.t("called","chaining");
x.t("called","parent");
x.t("called","reverse");
x.t("print","outerquery.select");
x.t("cc_contact_1.id=qroot.contactid","cc_contact_1.subtype");
x.t("two","queries");
x.t("two","types");
x.t("note","easy");
x.t("note","topic");
x.t("note","pass");
x.t("column","property");
x.t("column","new");
x.t("column","name");
x.t("column","sample.priority");
x.t("column","string");
x.t("column","view");
x.t("column","var");
x.t("intend","iterate");
x.t("withdistinct","method");
x.t("joins","example");
x.t("joins","foreign");
x.t("joins","apply");
x.t("joins","try");
x.t("joins","details");
x.t("joins","add");
x.t("joins","perform");
x.t("joins","secondary");
x.t("joins","critical");
x.t("joins","allowing");
x.t("joins","contrast");
x.t("joins","information");
x.t("joins","query");
x.t("joins","join");
x.t("joins","using");
x.t("joins","self-joins");
x.t("typically","performs");
x.t("typically","involve");
x.t("optionally","create");
x.t("optionally","write");
x.t("cases","example");
x.t("cases","likely");
x.t("cases","property");
x.t("cases","using");
x.t("mentioned","earlier");
x.t("reverse","inner");
x.t("reverse","join");
x.t("reverse","joins");
x.t("call","method");
x.t("call","having");
x.t("call","inlineview");
x.t("call","join");
x.t("call","withdistinct");
x.t("order","table");
x.t("created","example");
x.t("created","join");
x.t("dbfunction","object");
x.t("entity","table");
x.t("entity","gosu");
x.t("entity","secondary");
x.t("entity","contain");
x.t("entity","primary");
x.t("entity","teste.e");
x.t("entity","sampleparent");
x.t("entity","even");
x.t("following","example");
x.t("following","arguments");
x.t("links","back");
x.t("links","secondary");
x.t("links","maximum");
x.t("links","primary");
x.t("links","sampleparent");
x.t("links","object");
x.t("model","appear");
x.t("model","configuration");
x.t("contained","property");
x.t("either","null");
x.t("either","save");
x.t("clause","returns");
x.t("turn","behavior");
x.t("outerquery.inlineview","id");
x.t("additionally","reverse");
x.t("using","properties");
x.t("using","getcolumnref");
x.t("using","subselect");
x.t("using","approach");
x.t("using","previous");
x.t("using","join");
x.t("using","reverse");
x.t("//","add");
x.t("//","returns");
x.t("containing","arrays");
x.t("warning","extremely");
x.t("testa_view.e","teste.e");
x.t("terms","advanced");
x.t("pass","foreign");
x.t("pass","false");
x.t("pass","gosu");
x.t("pass","actual");
x.t("pass","value");
x.t("pass","column");
x.t("returns","lots");
x.t("returns","new");
x.t("returns","no");
x.t("returns","match");
x.t("returns","primary");
x.t("returns","query");
x.t("returns","sampleparent");
x.t("adding","original");
x.t("adding","predicates");
x.t("across","result");
x.t("deleted","entities");
x.t("sql","having");
x.t("sql","calls");
x.t("sql","[false]");
x.t("sql","select");
x.t("sql","natively");
x.t("sql","join");
x.t("definitions","terms");
x.t("sampleparent","property");
x.t("sampleparent","entities");
x.t("sampleparent","returned");
x.t("sampleparent","entity");
x.t("sampleparent","sampleparent");
x.t("associated","samplechild");
x.t("associated","entity");
x.t("associated","var");
x.t("child","objects");
x.t("child","gosu");
x.t("child","subobjects");
x.t("child","object");
x.t("behavior","later");
x.t("parentproperty1","equals");
x.t("var","viewquery");
x.t("var","query.make");
x.t("var","text_val=eval");
x.t("var","childtable");
x.t("var","inlineview");
x.t("var","outerquery");
x.t("restrictions","objects");
x.t("restrictions","join");
x.t("restrictions","optionally");
x.t("restrictions","restrictions");
x.t("including","table");
x.t("including","predicates");
x.t("outerquery","query.make");
x.t("self-joins","additionally");
x.t("views","example");
x.t("views","add");
x.t("views","optionally");
x.t("even","no");
x.t("even","creating");
x.t("generates","sql");
x.t("contains","foreign");
x.t("contains","array");
x.t("contains","either");
x.t("myentityids","q.join");
x.t("myentityids","reverse");
x.t("myentityids","//");
x.t("myentityids","var");
x.t("object","example");
x.t("object","shown");
x.t("object","foreign");
x.t("object","type");
x.t("object","samplechild");
x.t("object","certain");
x.t("object","secondary");
x.t("object","matches");
x.t("object","note");
x.t("detail","allowing");
x.t("specify","table");
x.t("extract","properties");
x.t("matching","entities");
x.t("q.findretired","true");
}
