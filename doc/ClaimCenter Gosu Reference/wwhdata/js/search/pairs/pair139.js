function FileData_Pairs(x)
{
x.t("example","new");
x.t("example","simple");
x.t("example","following");
x.t("example","using");
x.t("example","var");
x.t("interfaces","single");
x.t("interfaces","common");
x.t("interfaces","gosu");
x.t("(0)","write");
x.t("rather","class");
x.t("lists","lists");
x.t("lists","basic");
x.t("lists","gosu");
x.t("lists","function");
x.t("lists","similar");
x.t("lists","maps");
x.t("lists","using");
x.t("lists","var");
x.t("nothing","specify");
x.t("infers","type");
x.t("implement","interfaces");
x.t("implement","interface");
x.t("subclasses","java.util.arraylist");
x.t("create","list");
x.t("preserve","commonality");
x.t("commonality","interface");
x.t("ensures","list");
x.t("related","section");
x.t("instance","class");
x.t("abc","strs.set");
x.t("abc","strs");
x.t("abc","type");
x.t("abc","previous");
x.t("components","list");
x.t("java.lang.comparable","java.lang.number");
x.t("strs.set","var");
x.t("double","implement");
x.t("double","var");
x.t("strs","new");
x.t("strs","[3]");
x.t("strs","ab");
x.t("strs","[0]");
x.t("line","effectively");
x.t("text_val.select","link");
x.t("interface","support");
x.t("interface","type");
x.t("interface","comparable");
x.t("interface","gosu");
x.t("interface","int");
x.t("interface","java.util.list");
x.t("interface","cases");
x.t("support","interface");
x.t("support","list");
x.t("basic","lists");
x.t("type","example");
x.t("type","ensures");
x.t("type","includes");
x.t("type","list");
x.t("type","combines");
x.t("type","s3");
x.t("type","compound");
x.t("type","string");
x.t("type","simply");
x.t("type","variable");
x.t("type","inference");
x.t("type","class");
x.t("type","arraylist");
x.t("type","object");
x.t("time","list");
x.t("bound","components");
x.t("however","implement");
x.t("apis","rely");
x.t("automatically","resize");
x.t("link","directly");
x.t("objects","list");
x.t("objects","gosu");
x.t("objects","var");
x.t("new","list");
x.t("new","string");
x.t("new","expressions");
x.t("new","arraylist");
x.t("want","initialize");
x.t("items","list");
x.t("items","following");
x.t("single","type");
x.t("comparable","type");
x.t("comparable","note");
x.t("getting","setting");
x.t("strs.add","abc");
x.t("strs.add","strs.add");
x.t("strs.add","ab");
x.t("includes","interfaces");
x.t("includes","items");
x.t("messsage","gosu");
x.t("list","rather");
x.t("list","nothing");
x.t("list","create");
x.t("list","type");
x.t("list","initialization");
x.t("list","simple");
x.t("list","gosu");
x.t("list","compound");
x.t("list","string");
x.t("list","three");
x.t("list","members");
x.t("list","acts");
x.t("list","types");
x.t("list","least");
x.t("list","values");
x.t("list","using");
x.t("generics","gosu");
x.t("generics","notation");
x.t("generics","cases");
x.t("initialization","gosu\u2019s");
x.t("upper","bound");
x.t("finds","specific");
x.t("combines","class");
x.t("s2","new");
x.t("firststr","strs");
x.t("firststr","strs.get");
x.t("guide","collections");
x.t("simple","array");
x.t("simple","case");
x.t("s3","java.util.arraylist");
x.t("s3","ab");
x.t("collections","basic");
x.t("inherit","java");
x.t("features","allow");
x.t("directly","page");
x.t("test","comparison");
x.t("text_val.focus","text_val.select");
x.t("common","subclasses");
x.t("common","related");
x.t("creating","list");
x.t("resulting","type");
x.t("3.4","resulting");
x.t("gosu","infers");
x.t("gosu","automatically");
x.t("gosu","new");
x.t("gosu","generics");
x.t("gosu","finds");
x.t("gosu","inherit");
x.t("gosu","provides");
x.t("gosu","attempts");
x.t("gosu","instead");
x.t("gosu","reference");
x.t("gosu","assigns");
x.t("gosu","shortcuts");
x.t("gosu","treats");
x.t("gosu","special");
x.t("initialize","instance");
x.t("initialize","(load)");
x.t("brackets","using");
x.t("initializing","lists");
x.t("initializing","arrays");
x.t("comparison","following");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","additional");
x.t("compound","type");
x.t("compound","types");
x.t("java.lang.number","however");
x.t("java.lang.number","means");
x.t("arrays","example");
x.t("arrays","special");
x.t("attempts","preserve");
x.t("strs.get","(0)");
x.t("string","objects");
x.t("string","strs.add");
x.t("string","list");
x.t("string","test");
x.t("string","gosu");
x.t("string","ab");
x.t("string","information");
x.t("string","values");
x.t("string","pass");
x.t("allow","natural");
x.t("natural","syntax");
x.t("natural","index");
x.t("array","list");
x.t("array","initializer");
x.t("shorthand","following");
x.t("int","double");
x.t("sets","gets");
x.t("write","gosu");
x.t("attempt","initialize");
x.t("rely","support");
x.t("three","items");
x.t("myemptylist","new");
x.t("(load)","data");
x.t("error","occurred");
x.t("supported","number");
x.t("java.util.arraylist","creating");
x.t("java.util.arraylist","string");
x.t("syntax","lists");
x.t("syntax","list");
x.t("syntax","initializing");
x.t("syntax","arrays");
x.t("syntax","using");
x.t("members","type");
x.t("acts","expected");
x.t("[3]","//");
x.t("compact","initializer");
x.t("initializer","syntax");
x.t("initializer","var");
x.t("concise","initializer");
x.t("means","array");
x.t("guidewire_selectall","var");
x.t("initializes","int");
x.t("number","interface");
x.t("number","gosu");
x.t("number","class");
x.t("number","higest");
x.t("function","guidewire_selectall");
x.t("different","types");
x.t("expressions","interface");
x.t("java.util.list","common");
x.t("instead","natural");
x.t("index","syntax");
x.t("index","number");
x.t("compile","time");
x.t("types","implement");
x.t("types","objects");
x.t("types","getting");
x.t("section","compound");
x.t("expected","apis");
x.t("simply","arraylist");
x.t("reference","guide");
x.t("ab","abc");
x.t("ab","strs.add");
x.t("code","sets");
x.t("code","initializes");
x.t("code","work");
x.t("code","var");
x.t("assigns","compound");
x.t("previous","line");
x.t("least","upper");
x.t("java","interface");
x.t("java","arraylist");
x.t("effectively","shorthand");
x.t("variable","compile");
x.t("occurred","messsage");
x.t("shortcuts","var");
x.t("similar","initializing");
x.t("similar","gosu\u2019s");
x.t("additional","initializer");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","type");
x.t("native","java");
x.t("notation","example");
x.t("[0]","gosu");
x.t("[0]","var");
x.t("page","error");
x.t("information","generics");
x.t("data","gosu");
x.t("inference","list");
x.t("inference","even");
x.t("case","attempt");
x.t("case","above");
x.t("values","list");
x.t("values","following");
x.t("above","type");
x.t("maps","similar");
x.t("gosu\u2019s","compact");
x.t("gosu\u2019s","intelligent");
x.t("note","number");
x.t("verbose","code");
x.t("cases","want");
x.t("cases","resulting");
x.t("work","strs");
x.t("treats","special");
x.t("special","features");
x.t("special","case");
x.t("special","behavior");
x.t("following","example");
x.t("following","code");
x.t("following","verbose");
x.t("using","generics");
x.t("using","gosu");
x.t("using","syntax");
x.t("using","native");
x.t("using","arraylist");
x.t("class","interfaces");
x.t("class","implement");
x.t("class","type");
x.t("class","number");
x.t("class","var");
x.t("setting","list");
x.t("//","index");
x.t("arraylist","example");
x.t("arraylist","java.lang.comparable");
x.t("arraylist","gosu");
x.t("arraylist","java.lang.number");
x.t("arraylist","string");
x.t("arraylist","class");
x.t("arraylist","var");
x.t("pass","different");
x.t("higest","supported");
x.t("behavior","list");
x.t("var","strs");
x.t("var","s2");
x.t("var","firststr");
x.t("var","s3");
x.t("var","3.4");
x.t("var","text_val=eval");
x.t("var","myemptylist");
x.t("even","concise");
x.t("resize","lists");
x.t("specify","type");
x.t("object","contains");
x.t("contains","brackets");
x.t("intelligent","type");
x.t("gets","string");
}
