function FileData_Pairs(x)
{
x.t("tag","need");
x.t("tag","escape");
x.t("tag","blocks");
x.t("example","define");
x.t("example","following");
x.t("example","var");
x.t("template\u2019s","gosu");
x.t("rare","case");
x.t("within","template\u2019s");
x.t("within","string");
x.t("within","embedded");
x.t("within","template");
x.t("unescaped","quote");
x.t("apply","means");
x.t("apply","template-specific");
x.t("double","quotes");
x.t("double","quote");
x.t("creates","string");
x.t("sequences","begin");
x.t("sequences","actually");
x.t("text_val.select","link");
x.t("open","closing");
x.t("and\\","note");
x.t("hello\\","initial");
x.t("however","template");
x.t("however","following");
x.t("text","hello$");
x.t("text","hello$there");
x.t("text","hello");
x.t("link","directly");
x.t("want","indicate");
x.t("want","either");
x.t("block","unescaped");
x.t("block","gosu");
x.t("block","escaped");
x.t("ambiguity","gosu");
x.t("ambiguity","whether");
x.t("messsage","gosu");
x.t("need","escape");
x.t("backslash","character");
x.t("non-template","text");
x.t("signs","within");
x.t("signs","double");
x.t("escape","example");
x.t("escape","double");
x.t("escape","gosu");
x.t("escape","syntax");
x.t("escape","first");
x.t("escape","character");
x.t("escape","special");
x.t("beginning","special");
x.t("add","backslash");
x.t("around","it\\");
x.t("around","correct");
x.t("guide","gosu");
x.t("due","improper");
x.t("overview","escape");
x.t("remember","standard");
x.t("directly","page");
x.t("hello$","var");
x.t("requires","creating");
x.t("text_val.focus","text_val.select");
x.t("creating","string");
x.t("gosu","block");
x.t("gosu","escaping");
x.t("gosu","syntax");
x.t("gosu","templates");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","parser");
x.t("gosu","var");
x.t("avoid","ambiguity");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("rule","apply");
x.t("standard","gosu");
x.t("standard","characters");
x.t("indicate","beginning");
x.t("indicate","template");
x.t("indicate","special");
x.t("quotedstring","double");
x.t("sign","rare");
x.t("sign","however");
x.t("sign","template");
x.t("escaped","quote");
x.t("escaping","internal");
x.t("escaping","rules");
x.t("string","example");
x.t("string","escape");
x.t("string","literal");
x.t("string","value");
x.t("string","template");
x.t("string","following");
x.t("lines","valid");
x.t("characters","within");
x.t("characters","want");
x.t("characters","templates");
x.t("characters","non-template-tag");
x.t("characters","template");
x.t("structures","cases");
x.t("two-character","sequences");
x.t("hello$there","define");
x.t("hello$there","simply");
x.t("contain","gosu");
x.t("begin","template");
x.t("quotes","around");
x.t("quotes","var");
x.t("error","occurred");
x.t("blocks","standard");
x.t("next","character");
x.t("syntax","avoid");
x.t("syntax","code");
x.t("syntax","rules");
x.t("first","character");
x.t("hello\\$","define");
x.t("means","need");
x.t("guidewire_selectall","var");
x.t("literal","example");
x.t("literal","code");
x.t("literal","containing");
x.t("it\\","correct");
x.t("function","guidewire_selectall");
x.t("quote","signs");
x.t("quote","sign");
x.t("quote","characters");
x.t("quote","character");
x.t("templates","escape");
x.t("templates","gosu");
x.t("templates","standard");
x.t("templates","function");
x.t("templates","template");
x.t("templates","following");
x.t("define","variable");
x.t("whether","ending");
x.t("words","following");
x.t("instead","standard");
x.t("internal","double");
x.t("specially","escape");
x.t("initial","character");
x.t("simply","var");
x.t("important","careful");
x.t("reference","guide");
x.t("code","open");
x.t("code","want");
x.t("code","requires");
x.t("code","instead");
x.t("code","template");
x.t("code","special");
x.t("code","var");
x.t("invalid","due");
x.t("invalid","case");
x.t("non-template-tag","escape");
x.t("variable","containing");
x.t("embedded","gosu");
x.t("occurred","messsage");
x.t("rules","apply");
x.t("rules","typical");
x.t("template-specific","open");
x.t("closing","tags");
x.t("value","double");
x.t("value","including");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("actually","string");
x.t("template","tag");
x.t("template","overview");
x.t("template","rule");
x.t("template","indicate");
x.t("template","structures");
x.t("template","blocks");
x.t("template","expression");
x.t("template","tags");
x.t("template","generates");
x.t("expression","string");
x.t("hello","within");
x.t("hello","simply");
x.t("hello","var");
x.t("valid","gosu");
x.t("page","error");
x.t("parser","specially");
x.t("sequence","escape");
x.t("1\\","invalid");
x.t("typical","defined");
x.t("correct","creates");
x.t("correct","however");
x.t("correct","important");
x.t("correct","note");
x.t("tags","need");
x.t("tags","contain");
x.t("tags","words");
x.t("defined","string");
x.t("case","gosu");
x.t("case","first");
x.t("character","within");
x.t("character","add");
x.t("character","remember");
x.t("character","indicate");
x.t("character","next");
x.t("character","sequence");
x.t("character","immediately");
x.t("two","lines");
x.t("two","special");
x.t("note","first");
x.t("cases","avoid");
x.t("immediately","example");
x.t("special","tag");
x.t("special","block");
x.t("special","characters");
x.t("special","two-character");
x.t("special","template");
x.t("following","two-character");
x.t("following","invalid");
x.t("following","value");
x.t("following","valid");
x.t("following","two");
x.t("either","two");
x.t("ending","string");
x.t("containing","non-template");
x.t("containing","quote");
x.t("improper","escaping");
x.t("var","and\\");
x.t("var","hello\\");
x.t("var","text_val=eval");
x.t("var","quotedstring");
x.t("var","hello$there");
x.t("var","hello\\$");
x.t("var","hello");
x.t("var","1\\");
x.t("var","var");
x.t("including","quote");
x.t("generates","string");
x.t("careful","escape");
}
