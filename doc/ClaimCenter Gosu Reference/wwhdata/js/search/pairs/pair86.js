function FileData_Pairs(x)
{
x.t("complex","queries");
x.t("complex","query");
x.t("root","class");
x.t("example","valuerange");
x.t("example","shows");
x.t("example","want");
x.t("example","substring");
x.t("example","paste");
x.t("example","simple");
x.t("example","search");
x.t("example","q.comparenotin");
x.t("example","q.contains");
x.t("example","important");
x.t("example","q.comparein");
x.t("example","class");
x.t("example","q.select");
x.t("example","q.startswith");
x.t("example","var");
x.t("searching","gosu");
x.t("equal","comparison");
x.t("equal","notequals");
x.t("equal","middle");
x.t("equal","value");
x.t("equal","lessthan");
x.t("passed","compare");
x.t("supports","string");
x.t("unlike","using");
x.t("ignore","case");
x.t("userid","systemtables:1");
x.t("userid","var");
x.t("userid",".select");
x.t("method","supports");
x.t("method","method");
x.t("method","greaterthanorequals");
x.t("method","arguments");
x.t("method","uses");
x.t("method","greaterthan");
x.t("method","support");
x.t("method","lessthanorequals");
x.t("method","range");
x.t("method","comparein");
x.t("method","crucial");
x.t("method","end");
x.t("method","previous");
x.t("method","result");
x.t("method","defined");
x.t("method","called");
x.t("method","call");
x.t("method","entity");
x.t("method","used");
x.t("method","returns");
x.t("method","pass");
x.t("method","compare");
x.t("method","object");
x.t("columns","certain");
x.t("columns","fixed");
x.t("properties","example");
x.t("properties","methods");
x.t("chaining","chaining");
x.t("chaining","methods");
x.t("chaining","concise");
x.t("greaterthanorequals","matches");
x.t("dates","boolean");
x.t("dates","normalize");
x.t("else","print");
x.t("else","date");
x.t("jo","true");
x.t("jo","match");
x.t("easy","write");
x.t("easy","understand");
x.t("restriction","table");
x.t("restriction","subclasses");
x.t("restriction","none");
x.t("restriction","claimcenter");
x.t("restriction","logical");
x.t("restriction","classes");
x.t("abstraction","query");
x.t("building","up");
x.t("pattern","called");
x.t("just","range");
x.t("just","first");
x.t("1234","q.compare");
x.t("defines","range");
x.t("defines","date");
x.t("day","following");
x.t("anything","else");
x.t("version","method");
x.t("implement","interface");
x.t("implement","different");
x.t("implement","inter");
x.t("implement","case");
x.t("shown","previous");
x.t("lists","types");
x.t("sensitivity","gosu");
x.t("sensitivity","choose");
x.t("business","data");
x.t("table","example");
x.t("table","restriction");
x.t("table","abstraction");
x.t("table","lists");
x.t("table","later");
x.t("table","enhancement");
x.t("table","addition");
x.t("table","contrast");
x.t("table","first");
x.t("table","select");
x.t("table","retrieve");
x.t("table","row");
x.t("table","query");
x.t("table","note");
x.t("table","specify");
x.t("refer","studio");
x.t("refer","enhancement");
x.t("refer","ence");
x.t("refer","following");
x.t("iquerybuilderenhancement","details");
x.t("description","queries");
x.t("description","compare");
x.t("queryenhancement","restrictionenhancement");
x.t("queryenhancement","adds");
x.t("subclasses","implement");
x.t("subclasses","boolean");
x.t("subclasses","compare");
x.t("static","method");
x.t("static","methods");
x.t("create","query");
x.t("studio","source");
x.t("having","method");
x.t("having","clause");
x.t("various","query");
x.t("source","enhancement");
x.t("10","compare");
x.t("always","supply");
x.t("parts","described");
x.t("action","directly");
x.t("comparisons","valuerange");
x.t("comparisons","matches");
x.t("arguments","constructor");
x.t("arguments","(type)");
x.t("abc","//");
x.t("valuerange","string");
x.t("valuerange","subclass");
x.t("valuerange","general");
x.t("valuerange","typename");
x.t("sub","string");
x.t("tables","table");
x.t("tables","information");
x.t("tables","restrictions");
x.t("container","class");
x.t("discussed","later");
x.t("user","else");
x.t("user","table");
x.t("user","type");
x.t("user","public");
x.t("user","generics");
x.t("user","entity");
x.t("job","values");
x.t("line","need");
x.t("line","gosu");
x.t("implemented","extends");
x.t("implemented","using");
x.t("query.select","method");
x.t("later","simple");
x.t("later","section");
x.t("later","rows");
x.t("uses","generics");
x.t("uses","denormalization");
x.t("uses","denormalized");
x.t("uses","gosu");
x.t("uses","gw.api.database.query");
x.t("field","certain");
x.t("shows","adding");
x.t("subject","algebraic");
x.t("text_val.select","link");
x.t("interface","example");
x.t("interface","tables");
x.t("interface","loop");
x.t("interface","allows");
x.t("interface","queries");
x.t("interface","including");
x.t(".firstresult","information");
x.t("greaterthan","matches");
x.t("leave","upper");
x.t("support","unbounded");
x.t("supply","non-null");
x.t("(boolean)","checks");
x.t("supportslinguisticsearch","attribute");
x.t("type","searching");
x.t("type","example");
x.t("type","method");
x.t("type","refer");
x.t("type","tables");
x.t("type","relop");
x.t("type","want");
x.t("type","name");
x.t("type","gosu");
x.t("type","comparison");
x.t("type","direct");
x.t("type","number");
x.t("type","value");
x.t("type","several");
x.t("type","extends");
x.t("type","query");
x.t("type","information");
x.t("type","inference");
x.t("type","equals");
x.t("type","date");
x.t("type","pass");
x.t("type","ranges");
x.t("type","restrictions");
x.t("basic","queries");
x.t("relop","enumeration");
x.t("relop","value");
x.t("numberrange","need");
x.t("numberrange","5,10");
x.t("numberrange","similar");
x.t("numberrange","column");
x.t("atmostonerow","enhancement");
x.t("initially","combining");
x.t("orrestriction","andrestriction");
x.t("evaluate","expression");
x.t("time","component");
x.t("time","appropriate");
x.t("non-null","values");
x.t("public","id");
x.t("public","ids");
x.t("multiple","actions");
x.t("multiple","queries");
x.t("multiple","predicate");
x.t("sort","test");
x.t("however","numberrange");
x.t("however","technique");
x.t("however","data");
x.t("bound","empty");
x.t("entities","struc");
x.t("entities","keys");
x.t("apis","query");
x.t("property","first");
x.t("property","q.compare");
x.t("property","ensure");
x.t("property","value");
x.t("property","specific");
x.t("guidewire","entities");
x.t("text","values");
x.t("checks","whether");
x.t("link","multiple");
x.t("link","directly");
x.t("advanced","having");
x.t("advanced","queries");
x.t("advanced","query");
x.t("want","just");
x.t("want","chain");
x.t("want","search");
x.t("want","match");
x.t("want","call");
x.t("single","line");
x.t("single","record");
x.t("details","important");
x.t("consists","parts");
x.t("tableenhancement","adds");
x.t("certain","types");
x.t("certain","value");
x.t("loop","shown");
x.t("loop","enhancement");
x.t("loop","result");
x.t("items","simplest");
x.t("objects","tables");
x.t("objects","important");
x.t("objects","specify");
x.t("ing","values");
x.t("prefix","abc");
x.t("prefix","recordnumber");
x.t("new","valuerange");
x.t("new","numberrange");
x.t("new","datetime");
x.t("new","dbdaterange");
x.t("abc:99","unlike");
x.t("abc:99","leave");
x.t("start","value");
x.t("differences","comparison");
x.t("chain","multiple");
x.t("chain","together");
x.t("chain","predicates");
x.t("includes","queries");
x.t("john","joke");
x.t("messsage","gosu");
x.t("need","add");
x.t("need","worry");
x.t("ment","iquerybuilder");
x.t("generics","type");
x.t("generics","gosu");
x.t("generics","next");
x.t("generics","feature");
x.t("generics","parameterization");
x.t("generics","notation");
x.t("list","objects");
x.t("list","range");
x.t("list","predicate");
x.t("list","values");
x.t("upper","lower");
x.t("denormalization","functions");
x.t("optimize","important");
x.t("actions","line");
x.t("actions","together");
x.t("add","type");
x.t("add","sort");
x.t("add","generics");
x.t("add","tests");
x.t("complete","example");
x.t("complete","list");
x.t("around","names");
x.t("startswith","column");
x.t("startswith","contains");
x.t("substring","example");
x.t("substring","jo");
x.t("substring","value");
x.t("jar","pass");
x.t("paste","gosu");
x.t("id","opportunity");
x.t("id","important");
x.t("id","entity");
x.t("id","//");
x.t("id","var");
x.t(".compare","publicid");
x.t("guide","query");
x.t("results","loop");
x.t("results","returning");
x.t("results","queries");
x.t("results","following");
x.t("results","iqueryresult");
x.t("results","using");
x.t("simple","complete");
x.t("simple","less");
x.t("simple","query");
x.t("simple","equals");
x.t("limitation","example");
x.t("filter","ordering");
x.t("lessthanorequals","matches");
x.t("lessthanorequals","compare");
x.t("5,10","leave");
x.t("denormalized","column");
x.t("overview","gosu");
x.t("overview","function");
x.t("overview","query");
x.t("remember","three");
x.t("features","discussed");
x.t("directly","page");
x.t("directly","call");
x.t("restrictionenhancement","adds");
x.t("restrictionenhancement","package");
x.t("iterable","interface");
x.t("iterable","object");
x.t("test","limitation");
x.t("test","whether");
x.t("test","equality");
x.t("row\u2019s","value");
x.t("recordnumber","1234");
x.t("recordnumber","combine");
x.t("specified","range");
x.t("requires","column");
x.t("true","ignore");
x.t("true","leave");
x.t("true","gosu");
x.t("true","boolean");
x.t("true","final");
x.t("unbounded","queries");
x.t("text_val.focus","text_val.select");
x.t("struc","ture");
x.t("common","methods");
x.t("creating","query");
x.t("no","container");
x.t("no","user");
x.t("no","represents");
x.t("union","intersect");
x.t("simplest","iterate");
x.t("name","angle");
x.t("name","string");
x.t("operation","type");
x.t("symbols","around");
x.t("range","version");
x.t("range","subclasses");
x.t("range","numberrange");
x.t("range","text");
x.t("range","range");
x.t("range","argument");
x.t("range","string");
x.t("range","q.compare");
x.t("range","option");
x.t("range","dbdaterange");
x.t("range","subclass");
x.t("range","numbers");
x.t("range","class");
x.t("range","including");
x.t("definition","column");
x.t("gosu","restriction");
x.t("gosu","uses");
x.t("gosu","basic");
x.t("gosu","generics");
x.t("gosu","provides");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","database");
x.t("gosu","ignores");
x.t("gosu","join");
x.t("gosu","enhancements");
x.t("gosu","generates");
x.t("gosu","tester");
x.t("query.make","(user)");
x.t("iterate","across");
x.t("(a)","result");
x.t("returning","query");
x.t("typekeys","string");
x.t("searches","methods");
x.t("references","extended");
x.t("constructor","however");
x.t("subselect","advanced");
x.t("part","remember");
x.t("base","table");
x.t("aggregate","data");
x.t("comparison","example");
x.t("comparison","complete");
x.t("comparison","test");
x.t("comparison","comparison");
x.t("comparison","methods");
x.t("comparison","q.compare");
x.t("comparison","publicid");
x.t("tests","call");
x.t("argument","method");
x.t("argument","gosu");
x.t("argument","third");
x.t("argument","options");
x.t("direct","builder");
x.t("enumeration","value");
x.t("angle","brackets");
x.t("brackets","following");
x.t("component","midnight");
x.t("perform","join");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","advanced");
x.t("methods","method");
x.t("methods","want");
x.t("methods","gosu");
x.t("methods","argument");
x.t("methods","select");
x.t("methods","return");
x.t("methods","predicate");
x.t("methods","query");
x.t("methods","defined");
x.t("methods","case");
x.t("methods","enhancements");
x.t("methods","mentioned");
x.t("methods","dbfunction");
x.t("methods","compare");
x.t("none","root");
x.t("none","query");
x.t("boolean","argument");
x.t("boolean","value");
x.t("boolean","predicates");
x.t("notequals","matches");
x.t("1980,1,1","true");
x.t(".atmostonerow","null");
x.t("makes","queries");
x.t("makes","easier");
x.t("up","complex");
x.t("combine","column");
x.t("normalize","dates");
x.t("normalize","date");
x.t("1950,1,1","new");
x.t("opportunity","chaining");
x.t("search","user");
x.t("search","public");
x.t("search","result");
x.t("search","application");
x.t("enhancement","properties");
x.t("enhancement","iquerybuilderenhancement");
x.t("enhancement","property");
x.t("enhancement","enhancement");
x.t("enhancement","classes");
x.t("enhancement","class");
x.t("allows","query");
x.t("algebraic","functions");
x.t("q.comparenotin","publicid");
x.t("final","argument");
x.t("write","optimize");
x.t("write","code");
x.t("claimcenter","implements");
x.t("systemtables:1","matches");
x.t("systemtables:1","compares");
x.t("systemtables:1","//");
x.t("string","ignore");
x.t("string","example");
x.t("string","comparisons");
x.t("string","start");
x.t("string","list");
x.t("string","substring");
x.t("string","operation");
x.t("string","types");
x.t("string","abc:1");
x.t("string","variable");
x.t("string","values");
x.t("string","following");
x.t("string","contains");
x.t("empty","(unbounded)");
x.t("third","argument");
x.t("record","atmostonerow");
x.t("three","important");
x.t("three","rows");
x.t("understand","example");
x.t("understand","code");
x.t("addition","iquerybuilder");
x.t("attribute","true");
x.t("functions","static");
x.t("functions","evaluate");
x.t("functions","aggregate");
x.t("functions","q.compare");
x.t("functions","dbfunction");
x.t("functions","internationalization");
x.t("error","occurred");
x.t("queries","easy");
x.t("queries","implement");
x.t("queries","tables");
x.t("queries","user");
x.t("queries","subselects");
x.t("queries","words");
x.t("queries","together");
x.t("queries","query");
x.t("queries","note");
x.t("queries","typically");
x.t("queries","operate");
x.t("contrast","actual");
x.t("commands","features");
x.t("comparein","column");
x.t("next","add");
x.t("next","call");
x.t("logical","database");
x.t("logical","predicates");
x.t("involve","methods");
x.t("syntax","add");
x.t("select","method");
x.t("select","join");
x.t("select","subset");
x.t("select","compare");
x.t("means","want");
x.t("means","assemble");
x.t("concise","code");
x.t("concise","easier");
x.t("first","create");
x.t("first","iterable");
x.t("first","step");
x.t("first","item");
x.t("feature","having");
x.t("feature","include");
x.t("fixed","values");
x.t("options","table");
x.t("functionally","similar");
x.t("guidewire_selectall","var");
x.t("gw.api.database","package");
x.t("gw.api.database","following");
x.t("gw.api.database.query","var");
x.t("number","valuerange");
x.t("number","type");
x.t("number","range");
x.t("number","values");
x.t("datetime","1980,1,1");
x.t("datetime","1950,1,1");
x.t("subselects","joins");
x.t("function","implement");
x.t("function","guidewire_selectall");
x.t("function","contains");
x.t("implements","iterable");
x.t("implements","methods");
x.t("implements","iquerybuilder");
x.t("combining","tables");
x.t("combining","predicates");
x.t("retrieve","results");
x.t("q.compare","publicid");
x.t("q.compare","priority");
x.t("q.compare","dateofbirth");
x.t("quote","symbols");
x.t("technique","requires");
x.t("q.contains","firstname");
x.t("different","type");
x.t("different","actions");
x.t("different","elements");
x.t("different","class");
x.t("whether","method");
x.t("whether","property");
x.t("whether","normalize");
x.t("whether","value");
x.t("imple","ment");
x.t("crucial","creating");
x.t("represents","query");
x.t("middle","argument");
x.t("specifies","type");
x.t("specifies","whether");
x.t("(type)","description");
x.t("may","appropriate");
x.t("ence","pass");
x.t("words","always");
x.t("unique","query");
x.t("row","equal");
x.t("row","example");
x.t("row","list");
x.t("row","matches");
x.t("row","value");
x.t("row","column");
x.t("row","starts");
x.t("row","representing");
x.t("row","contains");
x.t("step","using");
x.t("thinking","exact");
x.t("publicid","property");
x.t("publicid","new");
x.t("publicid","equals");
x.t("publicid","default_data:1");
x.t("publicid","abc:01");
x.t("instead","column");
x.t("instead","sql");
x.t("types","comparisons");
x.t("types","guidewire");
x.t("types","objects");
x.t("types","string");
x.t("types","functions");
x.t("types","imple");
x.t("internal","class");
x.t("abstracted","work");
x.t("match","field");
x.t("match","q.compare");
x.t("match","database");
x.t("match","value");
x.t("section","extract");
x.t("superclass","abstract");
x.t("anjoy","job");
x.t("important","building");
x.t("important","part");
x.t("important","methods");
x.t("important","select");
x.t("important","important");
x.t("important","query");
x.t("important","classes");
x.t("simply","call");
x.t("ordering","results");
x.t("rewrite","code");
x.t("reference","guide");
x.t("reference","algebraic");
x.t("code","easy");
x.t("code","defines");
x.t("code","rewrite");
x.t("code","query");
x.t("code","result");
x.t("code","following");
x.t("end","type");
x.t("end","value");
x.t("follow","ing");
x.t("rows","table");
x.t("rows","list");
x.t("connected","running");
x.t("assemble","complex");
x.t("often","chain");
x.t("adds","method");
x.t("adds","methods");
x.t("primary","table");
x.t("return","two");
x.t("abstract","type");
x.t("ids","unique");
x.t("database","columns");
x.t("database","business");
x.t("database","table");
x.t("database","functions");
x.t("database","row");
x.t("superclasses","restriction");
x.t("exact","type");
x.t("100","add");
x.t("previous","example");
x.t("previous","mentioned");
x.t("matches","row\u2019s");
x.t("matches","methods");
x.t("matches","none");
x.t("matches","row");
x.t("matches","query");
x.t("matches","values");
x.t("extended","discussion");
x.t("lower","bound");
x.t("lower","function");
x.t("abc:1","abc:99");
x.t("option","method");
x.t("successfully","matches");
x.t("together","single");
x.t("together","union");
x.t("together","logical");
x.t("together","different");
x.t("together","typically");
x.t("together","var");
x.t("actual","data");
x.t("variable","parameterized");
x.t("variable","var");
x.t("greater","equal");
x.t("greater","100");
x.t("greater","value");
x.t("ensure","assumption");
x.t("occurred","messsage");
x.t("less","equal");
x.t("less","value");
x.t("null","arguments");
x.t("null","value");
x.t("null","print");
x.t("null","date");
x.t("non-nullable","column");
x.t("non-nullable","compare");
x.t("assumption","correct");
x.t("include","type");
x.t("keys","typekeys");
x.t("discussion","subject");
x.t("midnight","day");
x.t("comparenot","column");
x.t("yo","ji");
x.t("similar","valuerange");
x.t("similar","compare");
x.t("similar","sql");
x.t("easier","chain");
x.t("easier","understand");
x.t("predicate","method");
x.t("predicate","methods");
x.t("predicate","restrictions");
x.t("value","passed");
x.t("value","type");
x.t("value","john");
x.t("value","generics");
x.t("value","operation");
x.t("value","range");
x.t("value","systemtables:1");
x.t("value","string");
x.t("value","specifies");
x.t("value","row");
x.t("value","anjoy");
x.t("value","greater");
x.t("value","value");
x.t("value","column");
x.t("value","two");
x.t("value","object");
x.t("oldpriority","10");
x.t("q.comparein","publicid");
x.t("running","server");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("inter","face");
x.t("specific","sub");
x.t("specific","public");
x.t("specific","substring");
x.t("specific","value");
x.t("several","subclasses");
x.t("builder","pattern");
x.t("builder","apis");
x.t("builder","overview");
x.t("builder","query");
x.t("builder","system");
x.t("worry","whether");
x.t("extends","number");
x.t("extends","implements");
x.t("generate","column");
x.t("parameterization","syntax");
x.t("ture","similar");
x.t("notation","valuerange");
x.t("notation","meaning");
x.t("represent","operation");
x.t("expression","evaluated");
x.t("takes","two");
x.t("page","error");
x.t("extracting","filter");
x.t("dbdaterange","new");
x.t("dbdaterange","takes");
x.t("dbdaterange","column");
x.t("gw.api.database.query.make","(user)");
x.t("query","restriction");
x.t("query","table");
x.t("query","user");
x.t("query","initially");
x.t("query","link");
x.t("query","results");
x.t("query","methods");
x.t("query","first");
x.t("query","different");
x.t("query","abstracted");
x.t("query","successfully");
x.t("query","predicate");
x.t("query","builder");
x.t("query","query");
x.t("query","defined");
x.t("query","result");
x.t("query","system");
x.t("query","entity");
x.t("query","similarly");
x.t("query","class");
x.t("query","class\u2019s");
x.t("query","pass");
x.t("query","returns");
x.t("query","object");
x.t("data","properties");
x.t("data","entities");
x.t("data","base");
x.t("data","combining");
x.t("data","model");
x.t("iquerybuilder","description");
x.t("iquerybuilder","interface");
x.t("iquerybuilder","type");
x.t("iquerybuilder","includes");
x.t("iquerybuilder","common");
x.t("iquerybuilder","enhancement");
x.t("iquerybuilder","means");
x.t("iquerybuilder","important");
x.t("dbfunctionenhancement","adds");
x.t("information","advanced");
x.t("information","generics");
x.t("information","extracting");
x.t("correct","uses");
x.t("defined","interface");
x.t("defined","iterable");
x.t("defined","superclasses");
x.t("defined","iquerybuilder");
x.t("defined","enhancements");
x.t("result","table");
x.t("result","action");
x.t("result","query.select");
x.t("result","concise");
x.t("result","implements");
x.t("result","query");
x.t("result","result");
x.t("result","q.select");
x.t("inference","code");
x.t("meaning","query");
x.t("equals","example");
x.t("equals","userid");
x.t("equals","prefix");
x.t("equals","comparison");
x.t("equals","systemtables:1");
x.t("equals","matches");
x.t("equals","q.getcolumnref");
x.t("appropriate","type");
x.t("appropriate","cases");
x.t("ignores","case");
x.t("examples","following");
x.t("application","database");
x.t("join","table");
x.t("join","methods");
x.t("join","means");
x.t("predicates","orrestriction");
x.t("predicates","link");
x.t("predicates","queries");
x.t("predicates","restrictions");
x.t("values","equal");
x.t("values","columns");
x.t("values","method");
x.t("values","anything");
x.t("values","just");
x.t("values","relop");
x.t("values","jar");
x.t("values","functionally");
x.t("values","number");
x.t("values","may");
x.t("values","match");
x.t("values","yo");
x.t("values","represent");
x.t("values","values");
x.t("values","date");
x.t("values","without");
x.t("(user)",".compare");
x.t("(user)","q.compare");
x.t("(user)","note");
x.t("case","sensitivity");
x.t("case","(boolean)");
x.t("case","differences");
x.t("case","subselect");
x.t("case","note");
x.t("case","insensitive");
x.t("called","chaining");
x.t("called","iquerybuilder");
x.t("called","pass");
x.t("enhancements","types");
x.t("enhancements","iquerybuilder");
x.t("enhancements","query");
x.t("described","following");
x.t("intersect","commands");
x.t("print","user");
x.t("print","no");
x.t("print","(a)");
x.t("(unbounded)","pass");
x.t("permit","null");
x.t("q.between","publicid");
x.t("default_data:1","default_data:3");
x.t("joke","values");
x.t("firstname","jo");
x.t("choose","however");
x.t("choose","case");
x.t("classes","refer");
x.t("classes","queryenhancement");
x.t("classes","system");
x.t("note","variable");
x.t("note","choose");
x.t("note","class");
x.t("two","dates");
x.t("two","types");
x.t("two","values");
x.t("column","refer");
x.t("column","supportslinguisticsearch");
x.t("column","type");
x.t("column","specified");
x.t("column","name");
x.t("column","references");
x.t("column","row");
x.t("column","instead");
x.t("column","reference");
x.t("column","greater");
x.t("column","less");
x.t("column","non-nullable");
x.t("column","value");
x.t("column","generate");
x.t("column","permit");
x.t("column","object");
x.t("priority","new");
x.t("priority","lessthanorequals");
x.t("priority","equals");
x.t("date","arguments");
x.t("date","time");
x.t("date","range");
x.t("date","number");
x.t("date","values");
x.t("subset","data");
x.t("typically","involve");
x.t("typically","without");
x.t("work","user");
x.t("mentioned","implemented");
x.t("mentioned","later");
x.t("optionally","write");
x.t("numeric","types");
x.t("cases","startswith");
x.t("default_data:3","startswith");
x.t("default_data:3","comparenot");
x.t("joins","perform");
x.t("joins","examples");
x.t("call","methods");
x.t("call","enhancement");
x.t("call","select");
x.t("call","specifies");
x.t("call","defined");
x.t("package","implemented");
x.t("package","gw.api.database");
x.t("dbfunction","internal");
x.t("dbfunction","class");
x.t("operate","primary");
x.t("subclass","numberrange");
x.t("subclass","however");
x.t("subclass","dbdaterange");
x.t("subclass","compares");
x.t("subclass","specify");
x.t("numbers","q.compare");
x.t("dateofbirth","new");
x.t("system","implement");
x.t("system","consists");
x.t("system","search");
x.t("elements","often");
x.t("following","example");
x.t("following","table");
x.t("following","uses");
x.t("following","simple");
x.t("following","three");
x.t("following","code");
x.t("clause","feature");
x.t("andrestriction","note");
x.t("entity","type");
x.t("entity","public");
x.t("entity","specific");
x.t("insensitive","searches");
x.t("run","time");
x.t("used","range");
x.t("abc:01","abc:99");
x.t("starts","specific");
x.t("model","definition");
x.t("class","queryenhancement");
x.t("class","tableenhancement");
x.t("class","restrictionenhancement");
x.t("class","no");
x.t("class","enhancement");
x.t("class","gw.api.database");
x.t("class","implements");
x.t("class","represents");
x.t("class","superclass");
x.t("class","database");
x.t("class","dbfunctionenhancement");
x.t("class","queryresultenhancement");
x.t("class","contains");
x.t("using","loop");
x.t("using","gosu");
x.t("using","query");
x.t("using","compare");
x.t("similarly","advanced");
x.t("iqueryresult","internal");
x.t("class\u2019s","static");
x.t("compares","publicid");
x.t("compares","row");
x.t("compares","value");
x.t("compares","column");
x.t("lessthan","matches");
x.t("//","chain");
x.t("//","search");
x.t("//","string");
x.t("general","value");
x.t("face","called");
x.t("returns","table");
x.t("returns","single");
x.t("compare","method");
x.t("compare","range");
x.t("compare","methods");
x.t("compare","enhancement");
x.t("compare","number");
x.t("compare","database");
x.t("compare","value");
x.t("compare","q.between");
x.t("compare","column");
x.t("compare","date");
x.t("queryresultenhancement","adds");
x.t("pass","method");
x.t("pass","true");
x.t("pass","instead");
x.t("pass","follow");
x.t("pass","null");
x.t("pass","values");
x.t("pass","entity");
x.t("adding","test");
x.t("across","results");
x.t("q.select","example");
x.t("q.select",".firstresult");
x.t("q.select",".atmostonerow");
x.t("q.select","query");
x.t("q.select","print");
x.t("evaluated","run");
x.t("ji","pass");
x.t("sql","makes");
x.t("sql","lower");
x.t("without","quote");
x.t("without","thinking");
x.t("names","values");
x.t("ranges","refer");
x.t("q.startswith","firstname");
x.t("var","userid");
x.t("var","prefix");
x.t("var","recordnumber");
x.t("var","query.make");
x.t("var","text_val=eval");
x.t("var","gw.api.database.query.make");
x.t("var","q.select");
x.t("including","common");
x.t("including","string");
x.t("restrictions","restriction");
x.t("restrictions","objects");
x.t("restrictions","makes");
x.t("restrictions","queries");
x.t("restrictions","together");
x.t("restrictions","optionally");
x.t("parameterized","type");
x.t("representing","different");
x.t("equality","comparison");
x.t("q.getcolumnref","oldpriority");
x.t("internationalization","gosu");
x.t("generates","sql");
x.t(".select",".atmostonerow");
x.t("object","checks");
x.t("object","next");
x.t("object","implements");
x.t("object","end");
x.t("object","predicate");
x.t("object","query");
x.t("object","numeric");
x.t("object","compares");
x.t("object","var");
x.t("object","specify");
x.t("contains","various");
x.t("contains","common");
x.t("contains","methods");
x.t("contains","value");
x.t("contains","specific");
x.t("contains","column");
x.t("specify","create");
x.t("specify","type");
x.t("specify","column");
x.t("extract","items");
x.t("item","simply");
x.t("typename","example");
x.t("tester","connected");
x.t("server","queries");
}
