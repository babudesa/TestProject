function FileData_Pairs(x)
{
x.t("interfaces","enhancing");
x.t("interfaces","classes");
x.t("interfaces","used");
x.t("example","add");
x.t("example","gosu");
x.t("example","enhancement");
x.t("example","suppose");
x.t("example","java-based");
x.t("example","define");
x.t("example","code");
x.t("example","enhance");
x.t("example","typing");
x.t("example","call");
x.t("example","following");
x.t("looks","similar");
x.t("ghi","jkl");
x.t("properties","example");
x.t("properties","available");
x.t("properties","necessary");
x.t("properties","class/type");
x.t("properties","however");
x.t("properties","guidewire");
x.t("properties","property");
x.t("properties","add");
x.t("properties","methods");
x.t("properties","auto");
x.t("properties","important");
x.t("properties","appear");
x.t("properties","existing");
x.t("properties","already");
x.t("properties","enhancements");
x.t("properties","enhanced");
x.t("properties","valuable");
x.t("properties","adding");
x.t("available","within");
x.t("available","places");
x.t("available","instances");
x.t("method","basic");
x.t("method","calls");
x.t("method","choice");
x.t("method","need");
x.t("method","string");
x.t("method","syntax");
x.t("method","collection");
x.t("method","length");
x.t("method","value");
x.t("method","although");
x.t("method","defined");
x.t("method","enhancements");
x.t("method","called");
x.t("method","print");
x.t("provide","compile");
x.t("exist","enhanced");
x.t("possible","enhancements");
x.t("possible","package");
x.t("universally","available");
x.t("rather","interface");
x.t("claim","financials");
x.t("com.mycompany.reportenhancement","even");
x.t("rare","cases");
x.t("protected","property");
x.t("protected","keyword");
x.t("within","gosu");
x.t("within","enhancement");
x.t("within","function");
x.t("lists","gosu");
x.t("implement","interface");
x.t("def","ghi");
x.t("functional","description");
x.t("built-in","type");
x.t("built-in","string");
x.t("built-in","types");
x.t("built-in","enhancements");
x.t("describes","application");
x.t("create","new");
x.t("studio","creates");
x.t("studio","right-click");
x.t("description","followed");
x.t("func","tional");
x.t("source","code");
x.t(".myproperty","new");
x.t(".myproperty","//");
x.t("variables","properties");
x.t("variables","type");
x.t("variables","different");
x.t("variables","enhanced");
x.t("variables","object");
x.t("instance","variable");
x.t("instance","data");
x.t("persistent","database");
x.t("related","claim");
x.t("calculatehash","method");
x.t("calculatehash","typical");
x.t("demonstrated","getprettylengthstring");
x.t("abc","def");
x.t("limits","types");
x.t("subpackage","enhanced");
x.t("modifiers","information");
x.t("regular","types");
x.t("myproperty","string");
x.t("creates","new");
x.t("topic","note");
x.t("lastitem","item");
x.t("uses","java.util.arraylist");
x.t("contexts","example");
x.t("dialog","appears");
x.t("later","section");
x.t("outputs","abc");
x.t("outputs","following");
x.t("text_val.select","link");
x.t("augment","classes");
x.t("interface","example");
x.t("interface","new");
x.t("interface","means");
x.t("interface","inappropriate");
x.t("interface","cannot");
x.t("interface","instead");
x.t("interface","mean");
x.t("interface","enhanced");
x.t("interface","itself");
x.t("modified","useful");
x.t("support","blocks");
x.t("displays","calculatehash");
x.t("necessary","access");
x.t("necessary","defining");
x.t("state","information");
x.t("state","management");
x.t("type","possible");
x.t("type","studio");
x.t("type","modifiers");
x.t("type","regular");
x.t("type","later");
x.t("type","however");
x.t("type","s1");
x.t("type","need");
x.t("type","add");
x.t("type","name");
x.t("type","enhancement");
x.t("type","store");
x.t("type","period");
x.t("type","different");
x.t("type","keyword");
x.t("type","code");
x.t("type","additional");
x.t("type","enhancements");
x.t("type","typically");
x.t("basic","definition");
x.t("basic","string");
x.t("change","source");
x.t("reportfinancialsenhancement","enhancement");
x.t("enhancing","studio");
x.t("enhancing","built-in");
x.t("enhancing","interface");
x.t("enhancing","class");
x.t("learned","gosu");
x.t("time","string");
x.t("hierarchy","package");
x.t("class/type","example");
x.t("class/type","within");
x.t("class/type","symbol");
x.t("external","interface");
x.t("public","property");
x.t("public","function");
x.t("mymethod","string");
x.t("calls","built-in");
x.t("packages","company");
x.t("sort","find");
x.t("however","avoid");
x.t("however","contrast");
x.t("however","actually");
x.t("however","enhancements");
x.t(".calculatehash","similarly");
x.t("17","secret");
x.t("(item)","test");
x.t("followed","word");
x.t("[optionalfunctionaldescripton]","enhancement");
x.t("automatically","universally");
x.t("automatically","additional");
x.t("guidewire","includes");
x.t("guidewire","types");
x.t("guidewire","entity");
x.t("original","java");
x.t("original","object");
x.t("entities","new");
x.t("property","example");
x.t("property","method");
x.t("property","myproperty");
x.t("property","lastitem");
x.t("property","propertyname");
x.t("property","functions");
x.t("property","appends");
x.t("property","called");
x.t("property","print");
x.t("property","package");
x.t("property","storage");
x.t("put","file");
x.t("getprettylengthstring","method");
x.t("require","additional");
x.t("link","directly");
x.t("new","method");
x.t("new","properties");
x.t("new","variables");
x.t("new","requirements");
x.t("new","gosu");
x.t("new","methods");
x.t("new","enhancement");
x.t("new","settable");
x.t("new","native");
x.t("new","dynamic");
x.t("new","enhancements");
x.t("new","arraylist");
x.t("objects","whose");
x.t("want","first");
x.t("differences","basic");
x.t("differences","classes");
x.t("access","properties");
x.t("includes","built-in");
x.t("choice","creating");
x.t("messsage","gosu");
x.t("list","list");
x.t("list","methods");
x.t("list","appears");
x.t("list","enhancements");
x.t("list","package");
x.t("utilities","without");
x.t("places","gosu");
x.t("suddenly","newly-added");
x.t("s1","list");
x.t("s1","string");
x.t("file","hierarchy");
x.t("file","gosu");
x.t("need","protected");
x.t("need","define");
x.t("need","match");
x.t("need","enhance");
x.t("myaction","method");
x.t("add","properties");
x.t("add","variables");
x.t("add","property");
x.t("add","new");
x.t("add","utilities");
x.t("add","custom");
x.t("add","useful");
x.t("add","enhancement");
x.t("add","appear");
x.t("add","additional");
x.t("classtoextend","reference");
x.t("group","code");
x.t("guide","enhancements");
x.t("go","detail");
x.t("unless","using");
x.t("propertyname","syntax");
x.t("collections","learned");
x.t("collections","reference");
x.t("java.lang.string","public");
x.t("mirror","storage");
x.t("directly","modified");
x.t("directly","change");
x.t("directly","page");
x.t("products","gosu");
x.t("requirements","classes");
x.t("java.util.collection","interface");
x.t("test","code");
x.t("text_val.focus","text_val.select");
x.t("no","special");
x.t("creating","new");
x.t("name","com.mycompany.reportenhancement");
x.t("name","type");
x.t("name","enhancing");
x.t("name","enhancement");
x.t("name","optional");
x.t("name","entity");
x.t("definition","differences");
x.t("conflicts","guidewire");
x.t("gosu","contexts");
x.t("gosu","however");
x.t("gosu","automatically");
x.t("gosu","makes");
x.t("gosu","enhancement");
x.t("gosu","blocks");
x.t("gosu","syntax");
x.t("gosu","editor");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","memory");
x.t("gosu","natively");
x.t("gosu","extends");
x.t("gosu","enhancements");
x.t("gosu","class");
x.t("gosu","var");
x.t("gosu","tester");
x.t("dictionary","documentation");
x.t("allocating","new");
x.t("concrete","methods");
x.t("direct","modifications");
x.t("custom","properties");
x.t("dramatically","different");
x.t("transparently","mirror");
x.t("avoid","namespace");
x.t("avoid","approach");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","interfaces");
x.t("methods","properties");
x.t("methods","related");
x.t("methods","interface");
x.t("methods","automatically");
x.t("methods","add");
x.t("methods","appears");
x.t("methods","straightforward");
x.t("methods","cannot");
x.t("methods","code");
x.t("methods","java");
x.t("methods","internally");
x.t("methods","enhanced");
x.t("methods","call");
x.t("methods","either");
x.t("methods","setting");
x.t("useful","methods");
x.t("useful","class\u2019s");
x.t("overcome","language");
x.t("parameters","original");
x.t("makes","new");
x.t("makes","additional");
x.t("find","map");
x.t("standard","method");
x.t("standard","array");
x.t("namespace","conflicts");
x.t("generic","types");
x.t("final","cannot");
x.t("enhancement","looks");
x.t("enhancement","example");
x.t("enhancement","method");
x.t("enhancement","create");
x.t("enhancement","limits");
x.t("enhancement","subpackage");
x.t("enhancement","creates");
x.t("enhancement","dialog");
x.t("enhancement","reportfinancialsenhancement");
x.t("enhancement","packages");
x.t("enhancement","put");
x.t("enhancement","property");
x.t("enhancement","new");
x.t("enhancement","need");
x.t("enhancement","add");
x.t("enhancement","unless");
x.t("enhancement","methods");
x.t("enhancement","string");
x.t("enhancement","array");
x.t("enhancement","stringtestenhancement");
x.t("enhancement","words");
x.t("enhancement","instead");
x.t("enhancement","added");
x.t("enhancement","follow");
x.t("enhancement","adds");
x.t("enhancement","listtestenhancement");
x.t("enhancement","appropriate");
x.t("enhancement","fully-qualified");
x.t("enhancement","note");
x.t("enhancement","class");
x.t("enhancement","naming");
x.t("map","members");
x.t("this.myaction","contrast");
x.t("enhancement\u2019s","func");
x.t("arrays","specify");
x.t("allow","augment");
x.t("allow","blocks");
x.t("allow","save");
x.t("string","method");
x.t("string",".myproperty");
x.t("string","abc");
x.t("string","type");
x.t("string",".calculatehash");
x.t("string","generic");
x.t("string","return");
x.t("string","instances");
x.t("string",".mymethod");
x.t("string","class");
x.t("string","var");
x.t("string","object");
x.t("implies","superclass");
x.t("lines","outputs");
x.t("array","type");
x.t("array","syntax");
x.t("defining","new");
x.t("defining","enhancements");
x.t("defining","class");
x.t("in-line","within");
x.t("s1.calculatehash","type");
x.t("s1.calculatehash","even");
x.t("functions","properties");
x.t("functions","type");
x.t("functions","defined");
x.t("functions","enhancements");
x.t("auto","matically");
x.t("stringtestenhancement","java.lang.string");
x.t("store","instance");
x.t("techniques","persistent");
x.t("error","occurred");
x.t("blocks","however");
x.t("blocks","guidewire");
x.t("blocks","parameters");
x.t("blocks","syntax");
x.t("blocks","may");
x.t("blocks","java");
x.t("blocks","anonymous");
x.t("review","gosu");
x.t("contrast","keyword");
x.t("contrast","class");
x.t("java.util.arraylist","public");
x.t("java.util.arraylist","concise");
x.t("java.util.arraylist","enhance");
x.t("java.util.arraylist","var");
x.t("syntax","example");
x.t("syntax","necessary");
x.t("syntax","sort");
x.t("syntax","property");
x.t("syntax","this.myaction");
x.t("syntax","string");
x.t("syntax","defining");
x.t("syntax","syntax");
x.t("syntax","typetoextend");
x.t("syntax","effectively");
x.t("syntax","call");
x.t("syntax","using");
x.t("members","list");
x.t("suppose","enhancement");
x.t("period","character");
x.t("appends","item");
x.t("tional","purpose");
x.t("feature","define");
x.t("means","objects");
x.t("means","add");
x.t("means","arrays");
x.t("commonly-used","java");
x.t("concise","gosu");
x.t("collection","types");
x.t("first","review");
x.t("appears","displays");
x.t("appears","type");
x.t("appears","enter");
x.t("guidewire_selectall","var");
x.t("typetoextend","instead");
x.t("function","mymethod");
x.t("function","gosu");
x.t("function","guidewire_selectall");
x.t("merely","subclass");
x.t("java-based","classes");
x.t("implements","interface");
x.t("newly-added","method");
x.t("inappropriate","enhancements");
x.t("length","17");
x.t("length","important");
x.t("length","this.length");
x.t("approach","possible");
x.t("define","new");
x.t("define","enhancement");
x.t("define","enhance");
x.t("define","additional");
x.t("cannot","create");
x.t("cannot","add");
x.t("cannot","directly");
x.t("cannot","transparently");
x.t("cannot","define");
x.t("cannot","override");
x.t("cannot","save");
x.t("cannot","subclassed");
x.t("different","property");
x.t("different","types");
x.t("different","subclassing");
x.t("may","want");
x.t("editor","example");
x.t("editor","gosu");
x.t("represents","enhancement");
x.t("straightforward","special");
x.t("words","format");
x.t("language","support");
x.t("language","shortcomings");
x.t("instead","enhancing");
x.t("instead","extends");
x.t("instead","class");
x.t("technically","defined");
x.t("report","class");
x.t("almost","cases");
x.t("types","state");
x.t("types","new");
x.t("types","suddenly");
x.t("types","dramatically");
x.t("types","avoid");
x.t("types","standard");
x.t("types","syntax");
x.t("types","almost");
x.t("types","additional");
x.t("compile","time");
x.t("match","package");
x.t("keyword","however");
x.t("keyword","enhancement");
x.t("keyword","super");
x.t("superclass","rather");
x.t("section","topic");
x.t("format","[enhancedtypename]");
x.t("subclassing","enhancing");
x.t("accessible","gosu");
x.t("important","enhancements");
x.t("(strlist)","code");
x.t("(strlist)","strlist.lastitem");
x.t("simply","reportenhancement");
x.t("added","methods");
x.t("emphasize","enhancement\u2019s");
x.t("purpose","naming");
x.t("reference","guide");
x.t("reference","methods");
x.t("reference","documentation");
x.t("code","example");
x.t("code","uses");
x.t("code","outputs");
x.t("code","gosu");
x.t("code","separate");
x.t("code","unavailable");
x.t("code","values");
x.t("code","enhanced");
x.t("code","following");
x.t("code","var");
x.t("languages","defining");
x.t("follow","following");
x.t("adds","property");
x.t("adds","standard");
x.t("folder","click");
x.t("return","length");
x.t("return","secret");
x.t("override","property");
x.t("override","methods");
x.t("override","existing");
x.t("hierarchically","group");
x.t("given","class");
x.t("mean","enhancement");
x.t("appear","list");
x.t("appear","generated");
x.t("message","public");
x.t("message","enhanced");
x.t("database","storage");
x.t("memory","storage");
x.t("java","lists");
x.t("java","language");
x.t("java","languages");
x.t("java","classes");
x.t("java","class");
x.t("enhance","built-in");
x.t("enhance","interface");
x.t("enhance","java.util.collection");
x.t("enhance","syntax");
x.t("enhance","report");
x.t("whose","class");
x.t("documentation","describes");
x.t("documentation","collections");
x.t("already-defined","enhancement");
x.t("click","new");
x.t("enter","enhancement");
x.t("secret","message");
x.t("variable","properties");
x.t("strlist.lastitem","hello");
x.t("effectively","means");
x.t("occurred","messsage");
x.t("existing","properties");
x.t("existing","entities");
x.t("existing","methods");
x.t("existing","class");
x.t("r1","s1.calculatehash");
x.t("typing","s1.calculatehash");
x.t("extremely","rare");
x.t("instances","example");
x.t("instances","gosu");
x.t("instances","class");
x.t("natively","allow");
x.t("include","keyword");
x.t("settable","property");
x.t("mechanisms","although");
x.t("financials","emphasize");
x.t("additional","method");
x.t("additional","concrete");
x.t("additional","methods");
x.t("additional","data");
x.t("additional","utility");
x.t("value","provide");
x.t("right-click","package");
x.t("similar","defining");
x.t("[enhancedtypename]","[optionalfunctionaldescripton]");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","exist");
x.t("already","defined");
x.t("listtestenhancement","java.util.arraylist");
x.t("reportenhancement","enhancement");
x.t("extends","classtoextend");
x.t("extends","java");
x.t("generated","data");
x.t("actually","allow");
x.t("native","variables");
x.t("convention","enhanced");
x.t("although","add");
x.t("although","enhancements");
x.t("although","using");
x.t("hello","add");
x.t("hello","print");
x.t("word","enhancement");
x.t("page","error");
x.t("strlist","new");
x.t("dynamic","property");
x.t("separate","built-in");
x.t("data","dictionary");
x.t("data","enhancement");
x.t("data","model");
x.t("data","storage");
x.t("typical","method");
x.t("information","protected");
x.t("information","allocating");
x.t("information","enhancement");
x.t("internally","demonstrated");
x.t("optional","functional");
x.t("defined","property");
x.t("defined","in-line");
x.t("defined","enhanced");
x.t("defined","terms");
x.t("appropriate","syntax");
x.t("appropriate","existing");
x.t("save","state");
x.t("this.add","(item)");
x.t("utility","methods");
x.t("unavailable","given");
x.t("application","data");
x.t("values","appropriate");
x.t("values","//");
x.t("enhancements","within");
x.t("enhancements","create");
x.t("enhancements","add");
x.t("enhancements","collections");
x.t("enhancements","no");
x.t("enhancements","gosu");
x.t("enhancements","overcome");
x.t("enhancements","arrays");
x.t("enhancements","allow");
x.t("enhancements","defining");
x.t("enhancements","commonly-used");
x.t("enhancements","function");
x.t("enhancements","cannot");
x.t("enhancements","technically");
x.t("enhancements","include");
x.t("enhancements","although");
x.t("enhancements","enhancements");
x.t("enhancements","used");
x.t("enhancements","using");
x.t("subclassed","enhancements");
x.t("modifications","class");
x.t("called","calculatehash");
x.t("called","myproperty");
x.t("character","gosu");
x.t("print","string");
x.t("print","(strlist)");
x.t("fully-qualified","name");
x.t("classes","interfaces");
x.t("classes","implement");
x.t("classes","products");
x.t("classes","means");
x.t("classes","types");
x.t("classes","enhancements");
x.t("enhanced","properties");
x.t("enhanced","type");
x.t("enhanced","class/type");
x.t("enhanced","methods");
x.t("enhanced","object\u2019s");
x.t("enhanced","object");
x.t("note","syntax");
x.t("note","although");
x.t("note","enhancements");
x.t("itself","enhancement");
x.t("itself","extremely");
x.t("typically","class");
x.t("object\u2019s","myaction");
x.t("cases","example");
x.t("cases","need");
x.t("valuable","feature");
x.t("subclass","instances");
x.t("call","method");
x.t("call","methods");
x.t("call","simply");
x.t("call","enhanced");
x.t("package","example");
x.t("package","enhancement");
x.t("package","represents");
x.t("package","folder");
x.t("package","hierarchically");
x.t("package","enhanced");
x.t("package","conventions");
x.t("file-based","storage");
x.t("used","interfaces");
x.t("used","gosu");
x.t("anonymous","functions");
x.t("model","example");
x.t("model","go");
x.t("special","syntax");
x.t("entity","type");
x.t("entity","types");
x.t("following","enhancement");
x.t("following","length");
x.t("following","values");
x.t("following","naming");
x.t(".mymethod","lines");
x.t("management","cannot");
x.t("storage","original");
x.t("storage","gosu");
x.t("storage","techniques");
x.t("storage","mechanisms");
x.t("storage","enhancements");
x.t("storage","file-based");
x.t("either","enhancement");
x.t("using","variables");
x.t("using","already-defined");
x.t("using","enhancements");
x.t("using","enhanced");
x.t("class","instance");
x.t("class","interface");
x.t("class","support");
x.t("class","type");
x.t("class","property");
x.t("class","file");
x.t("class","name");
x.t("class","gosu");
x.t("class","makes");
x.t("class","final");
x.t("class","string");
x.t("class","java.util.arraylist");
x.t("class","merely");
x.t("class","implements");
x.t("class","define");
x.t("class","enhancements");
x.t("class","itself");
x.t("class","call");
x.t("class","minor");
x.t("class\u2019s","source");
x.t("similarly","enhancement");
x.t("symbol","enhanced");
x.t("//","enhancement");
x.t("setting","properties");
x.t("terms","external");
x.t("arraylist","string");
x.t("adding","new");
x.t("company","package");
x.t("shortcomings","java");
x.t("without","direct");
x.t("matically","available");
x.t("this.length","note");
x.t("var","s1");
x.t("var","text_val=eval");
x.t("var","string");
x.t("var","r1");
x.t("var","strlist");
x.t("minor","differences");
x.t("jkl","abc");
x.t("jkl","hello");
x.t("jkl","print");
x.t("even","method");
x.t("even","enhancing");
x.t("naming","enhancement");
x.t("naming","convention");
x.t("naming","package");
x.t("conventions","name");
x.t("detail","built-in");
x.t("object","require");
x.t("object","accessible");
x.t("object","enhancements");
x.t("object","call");
x.t("super","enhancement");
x.t("super","implies");
x.t("item","list");
x.t("item","this.add");
x.t("tester","code");
x.t("specify","enhanced");
}
