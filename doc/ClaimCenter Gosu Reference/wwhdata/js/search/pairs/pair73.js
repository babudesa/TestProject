function FileData_Pairs(x)
{
x.t("interfaces","called");
x.t("example","working");
x.t("example","public");
x.t("example","add");
x.t("example","no");
x.t("example","array");
x.t("example","suppose");
x.t("example","fail");
x.t("example","adds");
x.t("example","var");
x.t(".class","files");
x.t("happen","member");
x.t("passed","arguments");
x.t("passed","map");
x.t("safely","pass");
x.t("method","calls");
x.t("method","dosomething");
x.t("method","gosu");
x.t("method","parameters");
x.t("method","adds");
x.t("method","getwords");
x.t("method","call");
x.t("method","returns");
x.t("library","interface");
x.t("possible","libraries");
x.t("possible","cases");
x.t("sentence","sentence");
x.t("sentence","consists");
x.t("sentence","new");
x.t("sentence","gosu");
x.t("sentence","sentence.words.add");
x.t("sentence","private");
x.t("sentence","words");
x.t("sentence","sentence.addword");
x.t("sentence","class");
x.t("sentence","object");
x.t("converted","example");
x.t("converted","arguments");
x.t("converted","converting");
x.t("converted","continues");
x.t("converted","array");
x.t("converted","versions");
x.t("version","container");
x.t("hashmap","objects");
x.t("rather","directly");
x.t("(java)","interface");
x.t("(java)","address");
x.t("implement","claimcenter");
x.t("files","lib");
x.t("files","classes");
x.t("files","special");
x.t("caller","last");
x.t("caller","expects");
x.t("caller","elements");
x.t("===","return");
x.t("within","method");
x.t("within","converted");
x.t("within","mappings");
x.t("within","map");
x.t("every","method");
x.t("create","wrapper");
x.t("create","new");
x.t("create","arrays");
x.t("create","following");
x.t("studio","words");
x.t("table","summaries");
x.t("table","no");
x.t("instance","variables");
x.t("instance","current");
x.t("instance","array");
x.t("instance","class");
x.t("always","aware");
x.t("variables","objects");
x.t("variables","careful");
x.t("wrapper","class");
x.t("once","java");
x.t("once","copy");
x.t("java.util.hashmap","issue");
x.t("arguments","parameters");
x.t("arguments","even");
x.t("void","insertword");
x.t("void","addword");
x.t("container","converted");
x.t("container","container");
x.t("container","type");
x.t("container","objects");
x.t("container","again");
x.t("container","clone");
x.t("container","wrap");
x.t("container","remember");
x.t("container","directly");
x.t("container","conversion");
x.t("container","gosu");
x.t("container","references");
x.t("container","custom");
x.t("container","arrays");
x.t("container","next");
x.t("container","changes");
x.t("container","adds");
x.t("container","effectively");
x.t("container","whose");
x.t("plugin","interfaces");
x.t("plugin","studio");
x.t("plugin","interface");
x.t("claimcenter/modules/configuration/plugins/shared/basic/classes","claimcenter/modules/configuration/plugins/shared/basic/lib");
x.t(".jar","files");
x.t("converting","entity");
x.t("user","objects");
x.t("creates","new");
x.t("creates","copy");
x.t("current","class");
x.t("covert","objects");
x.t("try","following");
x.t("until","containers");
x.t("uses","argument");
x.t("last","line");
x.t("line","example");
x.t("text_val.select","link");
x.t("working","entities");
x.t("working","collections");
x.t("interface","creates");
x.t("interface","libraries");
x.t("interface","attempts");
x.t("interface","information");
x.t("interface","disable");
x.t("interface","entity");
x.t("recur","sively");
x.t("statement","a1");
x.t("type","caller");
x.t("type","claimcenter");
x.t("type","return");
x.t("type","matches");
x.t("type","existing");
x.t("evaluates","true");
x.t("maintained","inside");
x.t("external","(java)");
x.t("external","user");
x.t("external","side");
x.t("external","java");
x.t("calls","add");
x.t("calls","conversion");
x.t("calls","accessing");
x.t("public","sentence");
x.t("public","void");
x.t("public","no-argument");
x.t("public","list");
x.t("public","class");
x.t("public","member");
x.t("mappings","field1");
x.t("however","method");
x.t("however","works");
x.t("however","actual");
x.t("duplicating","container");
x.t("inside","example");
x.t("inside","sentence");
x.t("default","first");
x.t("original","container");
x.t("original","arrays");
x.t("guidewire","entity");
x.t("convert","entire");
x.t("convert","internal");
x.t("entities","java");
x.t("put","libraries");
x.t("put","java");
x.t("put","classes");
x.t("put","general");
x.t("no-argument","constructor");
x.t("dosomething","activity");
x.t("dosomething","entity");
x.t("property","access");
x.t("property","converts");
x.t("property","conversion");
x.t("property","accessor");
x.t("property","starts");
x.t("really","method");
x.t("link","directly");
x.t("new","sentence");
x.t("new","instance");
x.t("new","container");
x.t("new","array");
x.t("new","copy");
x.t("new","arraylist");
x.t("element","once");
x.t("element","original");
x.t("objects","passed");
x.t("objects","java.util.hashmap");
x.t("objects","container");
x.t("objects","convert");
x.t("objects","large");
x.t("objects","converts");
x.t("objects","conversion");
x.t("objects","internal");
x.t("objects","java");
x.t("objects","hashset");
x.t("objects","themselves");
x.t("objects","two");
x.t("objects","mentioned");
x.t("objects","entity");
x.t("objects","contained");
x.t("objects","pass");
x.t("speaking","put");
x.t("details","container");
x.t("==","===");
x.t("==","a2");
x.t("access","public");
x.t("access","libraries");
x.t("access","gosu");
x.t("items","collection");
x.t("want","map");
x.t("want","define");
x.t("want","call");
x.t("english","sentence");
x.t("consists","list");
x.t("hierarchies","package");
x.t("includes","java.util.arraylist");
x.t("passes","across");
x.t("messsage","gosu");
x.t("ment","claimcenter");
x.t("list","maintained");
x.t("list","however");
x.t("list","objects");
x.t("list","element");
x.t("list","gosu");
x.t("list","returning");
x.t("list","direct");
x.t("list","string");
x.t("list","words");
x.t("list","created");
x.t("continues","recur");
x.t("again","return");
x.t("invoked","gosu");
x.t("clone","original");
x.t("clone","collection");
x.t("jar","files");
x.t("expect","side");
x.t("add","method");
x.t("add","remove");
x.t("add","methods");
x.t("add","words");
x.t("add","mutator");
x.t("guide","java");
x.t("summaries","implications");
x.t("applies","objects");
x.t("applies","map");
x.t("remove","sentence");
x.t("remove","items");
x.t("remove","elements");
x.t("wrap","container");
x.t("collections","safely");
x.t("collections","method");
x.t("collections","argument");
x.t("collections","arrays");
x.t("collections","maps");
x.t("overview","follow");
x.t("overview","disable");
x.t("large","list");
x.t("large","generic");
x.t("large","containers");
x.t("remember","conversion");
x.t("remember","gosu");
x.t("false","comparing");
x.t("referred","earlier");
x.t("recommended","approach");
x.t("directly","access");
x.t("directly","page");
x.t("directly","called");
x.t("directly","entity");
x.t("converts","container");
x.t("converts","element");
x.t("converts","array");
x.t("converts","different");
x.t("converts","return");
x.t("converts","appropriate");
x.t("writing","types");
x.t("writing","java");
x.t("true","evaluates");
x.t("true","none");
x.t("true","graph");
x.t("true","even");
x.t("java.util.collection","includes");
x.t("java.util.collection","applies");
x.t("text_val.focus","text_val.select");
x.t("libraries","hashmap");
x.t("libraries","create");
x.t("libraries",".jar");
x.t("libraries","covert");
x.t("libraries","convert");
x.t("libraries","overview");
x.t("libraries","maintain");
x.t("libraries","directory");
x.t("libraries","java");
x.t("libraries","special");
x.t("no","public");
x.t("no","add");
x.t("no","conversion");
x.t("no","arrays");
x.t("name","put");
x.t("guidelines","passing");
x.t("maintain","relations");
x.t("gosu","version");
x.t("gosu","caller");
x.t("gosu","dosomething");
x.t("gosu","converts");
x.t("gosu","makes");
x.t("gosu","different");
x.t("gosu","words");
x.t("gosu","specially");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","java");
x.t("gosu","seem");
x.t("gosu","considers");
x.t("gosu","special");
x.t("gosu","class");
x.t("gosu","equality");
x.t("conversion","happen");
x.t("conversion","example");
x.t("conversion","external");
x.t("conversion","applies");
x.t("conversion","large");
x.t("conversion","different");
x.t("conversion","java");
x.t("conversion","happens");
x.t("conversion","strategy");
x.t("conversion","cases");
x.t("references","within");
x.t("references","important");
x.t("references","object");
x.t("constructor","case");
x.t("returning","gosu");
x.t("handles","containers");
x.t("argument","type");
x.t("argument","conversion");
x.t("argument","types");
x.t("direct","modifications");
x.t("avoid","passing");
x.t("custom","java");
x.t("custom","class");
x.t("declares","method");
x.t("part","collection");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","example");
x.t("methods","add");
x.t("methods","argument");
x.t("methods","manipulate");
x.t("methods","java");
x.t("none","class\u2019s");
x.t("sively","until");
x.t("parameters","convert");
x.t("parameters","return");
x.t("parameters","entity");
x.t("inner","collection");
x.t("makes","new");
x.t("place","disble");
x.t("directories","claimcenter/modules/configuration/plugins/shared/basic/classes");
x.t("standard","java");
x.t("cloned","copy");
x.t("generic","container");
x.t("field1","field2");
x.t("field1","mapping");
x.t("sentence.words.add","once");
x.t("arrays","collections");
x.t("arrays","libraries");
x.t("arrays","address");
x.t("arrays","arrays");
x.t("arrays","move");
x.t("arrays","appropriate");
x.t("arrays","maps");
x.t("arrays","including");
x.t("address","objects");
x.t("address","class");
x.t("address","arraylist");
x.t("map","create");
x.t("map","objects");
x.t("map","passes");
x.t("map","part");
x.t("map","suppose");
x.t("map","collection");
x.t("map","load");
x.t("map","contains");
x.t("attempts","create");
x.t("field2","words");
x.t("field2","mapping");
x.t("array","example");
x.t("array","uses");
x.t("array","type");
x.t("array","external");
x.t("array","guidewire");
x.t("array","address");
x.t("array","array");
x.t("array","internal");
x.t("array","untyped");
x.t("claimcenter","plugin");
x.t("claimcenter","creates");
x.t("claimcenter","converts");
x.t("claimcenter","substitutes");
x.t("claimcenter","entity");
x.t("lib","directory");
x.t("write","gosu");
x.t("write","java");
x.t("entire","collection");
x.t("string","public");
x.t("string","words");
x.t("string","getwords");
x.t("string","word");
x.t("accessor","really");
x.t("int","position");
x.t("earlier","wrapping");
x.t("contain","themselves");
x.t("manipulate","collection");
x.t("manipulate","data");
x.t("relations","references");
x.t("insertword","int");
x.t("error","occurred");
x.t("registered","java");
x.t("tion","java");
x.t("something","following");
x.t("next","gosu");
x.t("(gosu)","external");
x.t("(gosu)","address");
x.t("operators","==");
x.t("java.util.arraylist","collection");
x.t("suppose","want");
x.t("suppose","map");
x.t("suppose","write");
x.t("suppose","mymap.field1");
x.t("outer","class");
x.t("first","gosu");
x.t("affects","collections");
x.t("collection","example");
x.t("collection","possible");
x.t("collection","every");
x.t("collection","inside");
x.t("collection","passes");
x.t("collection","custom");
x.t("collection","parameters");
x.t("collection","arrays");
x.t("collection","outer");
x.t("collection","private");
x.t("collection","java");
x.t("collection","value");
x.t("fail","list");
x.t("means","however");
x.t("guidewire_selectall","var");
x.t("conversions","array");
x.t("side","entity");
x.t("side","modify");
x.t("activity","a1");
x.t("activity","a2");
x.t("(word)","public");
x.t("function","guidewire_selectall");
x.t("function","call");
x.t("resource-intensive","remember");
x.t("approach","add");
x.t("person","java");
x.t("words","sentence");
x.t("words","public");
x.t("words","property");
x.t("words","new");
x.t("words","list");
x.t("words","write");
x.t("words","something");
x.t("words","suppose");
x.t("words","java");
x.t("words","problem");
x.t("words","model");
x.t("imple","ment");
x.t("cannot","modify");
x.t("different","container");
x.t("different","objects");
x.t("different","types");
x.t("different","value");
x.t("different","object");
x.t("move","across");
x.t("substitutes","class");
x.t("private","variable");
x.t("private","arraylist");
x.t("define","class");
x.t("aware","behavior");
x.t("accessing","object");
x.t("handling","collections");
x.t("internal","user");
x.t("internal","array");
x.t("internal","(gosu)");
x.t("types","objects");
x.t("types","claimcenter");
x.t("types","return");
x.t("types","java");
x.t("types","containers");
x.t("types","object");
x.t("directory","no");
x.t("directory","using");
x.t("directory","generally");
x.t("changes","visible");
x.t("implementing","class");
x.t("properly","means");
x.t("specially","handles");
x.t("calling","java");
x.t("works","properly");
x.t("works","containers");
x.t("works","following");
x.t("purpose","third-party");
x.t("important","pass");
x.t("important","careful");
x.t("accessible","gosu");
x.t("reference","guide");
x.t("reference","different");
x.t("reference","equality");
x.t("code","put");
x.t("code","cannot");
x.t("code","adds");
x.t("code","operating");
x.t("code","call");
x.t("code","//");
x.t("code","modify");
x.t("disble","behavior");
x.t("follow","following");
x.t("adds","new");
x.t("adds","list");
x.t("adds","words");
x.t("adds","item");
x.t("return","type");
x.t("return","false");
x.t("return","words");
x.t("return","types");
x.t("return","value");
x.t("return","result");
x.t("return","values");
x.t("expects","java.util.collection");
x.t("sentence.addword","once");
x.t("operating","cloned");
x.t("matches","type");
x.t("collection.singletonlist","implementing");
x.t("issue","mentioned");
x.t("java","method");
x.t("java","plugin");
x.t("java","statement");
x.t("java","default");
x.t("java","objects");
x.t("java","hierarchies");
x.t("java","expect");
x.t("java","gosu");
x.t("java","conversion");
x.t("java","map");
x.t("java","code");
x.t("java","java");
x.t("java","maps");
x.t("java","classes");
x.t("java","plugins");
x.t("java","entity");
x.t("java","following");
x.t("java","class");
x.t("java","pass");
x.t("java","returns");
x.t("java","modify");
x.t("java","visible");
x.t("effectively","new");
x.t("whose","elements");
x.t("assumptions","object");
x.t("variable","access");
x.t("variable","add");
x.t("ensure","outer");
x.t("seem","try");
x.t("considers","property");
x.t("actual","list");
x.t("occurred","messsage");
x.t("existing","array");
x.t("instances","example");
x.t("instances","instance");
x.t("instances","none");
x.t("instances","claimcenter");
x.t("mymap","property");
x.t("value","field1");
x.t("value","field2");
x.t("value","mymap");
x.t("value","returns");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("native","java");
x.t("getwords","return");
x.t("getwords","becomes");
x.t("third-party","jar");
x.t("hashset","objects");
x.t("wrapping","collection");
x.t("mutator","methods");
x.t("word","public");
x.t("word","words.add");
x.t("page","error");
x.t("addword","string");
x.t("information","working");
x.t("graph","references");
x.t("data","ensure");
x.t("becomes","property");
x.t("appropriate","conversions");
x.t("appropriate","internal");
x.t("appropriate","class");
x.t("happens","method");
x.t("happens","classes");
x.t("result","different");
x.t("strategy","referred");
x.t("mymap.field1","references");
x.t("disable","container");
x.t("comparing","different");
x.t("implications","conversion");
x.t("case","claimcenter");
x.t("case","containers");
x.t("themselves","example");
x.t("themselves","converted");
x.t("mymap.field2","map");
x.t("values","without");
x.t("maps","gosu");
x.t("maps","function");
x.t("maps","calling");
x.t("maps","native");
x.t("maps","special");
x.t("called","java");
x.t("called","in-place");
x.t("modifications","java");
x.t("problem","class");
x.t("containers","converted");
x.t("containers","gosu");
x.t("containers","arrays");
x.t("containers","claimcenter");
x.t("containers","contain");
x.t("containers","resource-intensive");
x.t("containers","reference");
x.t("classes",".class");
x.t("classes","implement");
x.t("classes","details");
x.t("classes","libraries");
x.t("classes","registered");
x.t("classes","directory");
x.t("plugins","always");
x.t("two","directories");
x.t("two","sides");
x.t("a1","==");
x.t("a1","activity");
x.t("copy","container");
x.t("copy","list");
x.t("copy","words");
x.t("cases","example");
x.t("cases","writing");
x.t("mentioned","table");
x.t("mentioned","java.util.collection");
x.t("a2","evaluates");
x.t("a2","invoked");
x.t("itself","property");
x.t("package","name");
x.t("call","example");
x.t("call","avoid");
x.t("call","claimcenter");
x.t("call","works");
x.t("call","important");
x.t("call","java");
x.t("call","remains");
x.t("sides","function");
x.t("created","using");
x.t("mapping","true");
x.t("mapping","object");
x.t("special","libraries");
x.t("special","place");
x.t("special","handling");
x.t("elements","converted");
x.t("elements","rather");
x.t("elements","container");
x.t("elements","original");
x.t("entity","passed");
x.t("entity","library");
x.t("entity","external");
x.t("entity","libraries");
x.t("entity","instances");
x.t("following","example");
x.t("following","table");
x.t("following","true");
x.t("following","guidelines");
x.t("following","gosu");
x.t("following","two");
x.t("following","var");
x.t("untyped","converted");
x.t("used","collection");
x.t("contained","within");
x.t("model","following");
x.t("starts","even");
x.t("class","possible");
x.t("class","method");
x.t("class","sentence");
x.t("class","external");
x.t("class","public");
x.t("class","writing");
x.t("class","no");
x.t("class","gosu");
x.t("class","declares");
x.t("class","methods");
x.t("class","inner");
x.t("class","manipulate");
x.t("class","imple");
x.t("class","works");
x.t("class","accessible");
x.t("class","information");
x.t("class","used");
x.t("class","arraylist");
x.t("class","including");
x.t("class","representing");
x.t("class\u2019s","methods");
x.t("using","standard");
x.t("using","collection.singletonlist");
x.t("general","purpose");
x.t("//","bad");
x.t("words.add","(word)");
x.t("words.add","position");
x.t("arraylist","list");
x.t("arraylist","string");
x.t("arraylist","person");
x.t("pass","container");
x.t("pass","collections");
x.t("returns","container");
x.t("returns","clone");
x.t("across","entity");
x.t("bad","example");
x.t("behavior","however");
x.t("behavior","affects");
x.t("claimcenter/modules/configuration/plugins/shared/basic/lib","put");
x.t("modify","container");
x.t("modify","directly");
x.t("modify","gosu");
x.t("modify","map");
x.t("modifica","tion");
x.t("member","variables");
x.t("member","variable");
x.t("without","duplicating");
x.t("load","gosu");
x.t("var","sentence");
x.t("var","text_val=eval");
x.t("versions","elements");
x.t("including","appropriate");
x.t("including","case");
x.t("in-place","modifica");
x.t("passing","large");
x.t("passing","containers");
x.t("position","string");
x.t("position","word");
x.t("visible","gosu");
x.t("visible","function");
x.t("careful","assumptions");
x.t("equality","operators");
x.t("equality","pass");
x.t("equality","passing");
x.t("even","objects");
x.t("even","gosu");
x.t("even","argument");
x.t("even","object");
x.t("representing","english");
x.t("object","within");
x.t("object","instance");
x.t("object","original");
x.t("object","recommended");
x.t("object","methods");
x.t("object","reference");
x.t("object","value");
x.t("object","mymap.field2");
x.t("object","itself");
x.t("generally","speaking");
x.t("remains","even");
x.t("contains","object");
x.t("item","collection");
}
