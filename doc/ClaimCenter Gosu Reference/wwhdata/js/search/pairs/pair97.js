function FileData_Pairs(x)
{
x.t("supports","multiple");
x.t("example","uses");
x.t("example","sort");
x.t("example","simple");
x.t("example","gosu");
x.t("example","rely");
x.t("example","row.mychildentity.anotherchildentity.lastname");
x.t("example","row");
x.t("example","follow");
x.t("example","following");
x.t("example","//");
x.t("example","specify");
x.t("searching","block");
x.t(".thenbydescending","\\row-");
x.t("active","read-write");
x.t("safely","exist");
x.t("passed","method");
x.t("passed","read-only");
x.t("happen","thread");
x.t("columns","example");
x.t("method","descending");
x.t("method","description");
x.t("method","current");
x.t("method","ascending");
x.t("method","want");
x.t("method","iterate");
x.t("method","cloned");
x.t("method","important");
x.t("method","bundle");
x.t("method","order");
x.t("method","modify");
x.t("method","specify");
x.t("properties","directly");
x.t("properties","methods");
x.t("properties","cannot");
x.t("properties","move");
x.t("exist","writable");
x.t("transactions","bundles");
x.t("transactions","discusses");
x.t("role","container");
x.t("version","field");
x.t("row.e.e","20");
x.t("row.e.e","query");
x.t("row.e.e","following");
x.t("claim","query.select");
x.t("within","single");
x.t("within","block");
x.t("within","blocks");
x.t("within","function");
x.t("clear","previous");
x.t("every","foreign");
x.t("sensitivity","ordering");
x.t("runing","code");
x.t("query.compare","equals");
x.t("poor","instead");
x.t("table","method");
x.t("table","last");
x.t("descending","order");
x.t("description","orderby");
x.t("result.orderby","\\row-");
x.t("commits","successfully");
x.t("create","new");
x.t("create","query");
x.t("key","property");
x.t("10",".thenbydescending");
x.t("instance","entity");
x.t("keep","reference");
x.t("bundles","transactions");
x.t("related","apis");
x.t("always","dynamic");
x.t("forever","access");
x.t("foreign","key");
x.t("foreign","keys");
x.t("11","//");
x.t("11","var");
x.t("java.lang.comparable","methods");
x.t("orderbydescending","next");
x.t("orderbydescending","clears");
x.t("execute","block");
x.t("container","specify");
x.t("current","count");
x.t("current","(ambient)");
x.t("current","bundle");
x.t("current","value");
x.t("current","server");
x.t("plugin","method");
x.t("user","interface");
x.t("user","var");
x.t("integerext","notequals");
x.t("uses","java.util.arraylist");
x.t("uses","information");
x.t("uses","locale-sensitive");
x.t("last","name");
x.t("last","names");
x.t("field","path");
x.t("field","paths");
x.t("until","added");
x.t("query.select","result.orderby");
x.t("query.select","snapshot");
x.t("query.select",".count");
x.t("query.select","index");
x.t("contexts","simple");
x.t("line","unsafe");
x.t("line","throws");
x.t("snapshot","current");
x.t("text_val.select","link");
x.t("highly","unusual");
x.t("support","ordering");
x.t("period-delimited","expression");
x.t("row.a2",".thenbydescending");
x.t("row.a2","10");
x.t("interface","java.lang.comparable");
x.t("interface","display");
x.t("errors","run");
x.t("times","desired");
x.t("type","block");
x.t("type","entity");
x.t("calculations","single");
x.t("(testa)","query.compare");
x.t("(testa)","q.compare");
x.t("change","remove");
x.t("change","quickly");
x.t("change","read-only");
x.t("change","object");
x.t("unsafe","var");
x.t("thing","remember");
x.t("time","gosu");
x.t("time","against");
x.t("time","instead");
x.t("time","call");
x.t("orders","results");
x.t("orders","specified");
x.t("multiple","order");
x.t("multiple","levels");
x.t("sort","address");
x.t("sort","string");
x.t("sort","lastname");
x.t("sort","first");
x.t("sort","birth");
x.t("sort","column");
x.t("ascending","order");
x.t("third-level","sorting");
x.t("however","no");
x.t("however","different");
x.t("however","include");
x.t("(row.lastname)","gosu");
x.t("locale","sensitivity");
x.t("copied","database");
x.t("entities","list");
x.t("entities","iterate");
x.t("entities","loaded");
x.t("entities","memory");
x.t("entities","read-only");
x.t("require","memory");
x.t("property","example");
x.t("property","access");
x.t("property","final");
x.t("property","claimcenter");
x.t("property","syntax");
x.t("property","words");
x.t("property","accesses");
x.t("property","query");
x.t("listed","following");
x.t("automatically","uses");
x.t("default","find");
x.t("default","entity");
x.t("original","entity");
x.t("apis","detail");
x.t("count","method");
x.t("count","property");
x.t("count","items");
x.t("count","upward");
x.t("count","number");
x.t("count","staying");
x.t("count","calculated");
x.t("link","directly");
x.t("objects","support");
x.t("objects","order");
x.t("extracts","information");
x.t("access","query.select");
x.t("access","simply");
x.t("access","database-backed");
x.t("single","block");
x.t("single","legal");
x.t("new","claim");
x.t("new","list");
x.t("new","bundle");
x.t("new","writable");
x.t("new","arraylist");
x.t("want","reference");
x.t("items","common");
x.t("items","returned");
x.t("items","1-10");
x.t("contents","change");
x.t("block","highly");
x.t("block","however");
x.t("block","plays");
x.t("block","exactly");
x.t("block","gosu");
x.t("block","argument");
x.t("block","contain");
x.t("block","essence");
x.t("block","define");
x.t("block","row");
x.t("block","variable");
x.t("block","forces");
x.t("messsage","gosu");
x.t("need","load");
x.t("dbfunction.max","(row.lastname)");
x.t("found","entities");
x.t("again","results");
x.t("list","generics");
x.t("list","mylist.add");
x.t("list","good");
x.t("generics","parameterize");
x.t("add","method");
x.t("add","change");
x.t("add","search");
x.t("add","entity");
x.t("bundle.add","(c)");
x.t("mylist.add","(x)");
x.t("results","however");
x.t("results","automatically");
x.t("results","desired");
x.t("results","specified");
x.t("results","gosu");
x.t("results","function");
x.t("results","may");
x.t("results","returned");
x.t("results","ordering");
x.t("results","return");
x.t("results","appear");
x.t("results","result");
x.t("guide","query");
x.t("thenbydescending","method");
x.t("thenbydescending","times");
x.t("thenbydescending","orders");
x.t("simple","version");
x.t("simple","user");
x.t("simple","property");
x.t("remove","database");
x.t("remember","calling");
x.t("remember","entity");
x.t(".count","query.select");
x.t(".count","property");
x.t("throws","bounds");
x.t("directly","page");
x.t("directly","entity");
x.t("desired","third-level");
x.t("desired","column");
x.t("desired","order");
x.t("specified","column");
x.t("built","java");
x.t("true","important");
x.t("counts","dynamic");
x.t("text_val.focus","text_val.select");
x.t("name","last");
x.t("name","first");
x.t("name","match");
x.t("second-level","sort");
x.t("no","time");
x.t("plays","role");
x.t("path","simple");
x.t("path","row.lastname");
x.t("common","mistake");
x.t("gosu","supports");
x.t("gosu","uses");
x.t("gosu","need");
x.t("gosu","provides");
x.t("gosu","modifies");
x.t("gosu","implements");
x.t("gosu","represents");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","actually");
x.t("gosu","expression");
x.t("gosu","query");
x.t("gosu","result");
x.t("returning","query");
x.t("performance","poor");
x.t("exactly","argument");
x.t("query.make","(testa)");
x.t("query.make","(user)");
x.t("iterate","across");
x.t("changed","entity");
x.t("changed","removed");
x.t("discusses","issue");
x.t("argument","type");
x.t("argument","block");
x.t("virtual","properties");
x.t("comparison","methods");
x.t("comparison","contrast");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","methods");
x.t("methods","orders");
x.t("methods","sort");
x.t("methods","listed");
x.t("methods","block");
x.t("methods","built");
x.t("methods","types");
x.t("methods","sorting");
x.t("methods","result");
x.t("methods","call");
x.t("modifies","sql");
x.t("alternatively","order");
x.t("rule","plugin");
x.t("further","changes");
x.t("useful","contexts");
x.t("notequals","11");
x.t("combine","within");
x.t("find","query");
x.t("loaded","database");
x.t("loaded","read-only");
x.t("cloned","instance");
x.t("records","correct");
x.t("loading","entities");
x.t("address","book");
x.t("search","gosu");
x.t("search","result");
x.t("final","property");
x.t("enhancement","methods");
x.t("array-out-of-bounds","errors");
x.t("appending","query");
x.t("orderby","descending");
x.t("orderby","clears");
x.t("string","values");
x.t("gw.transaction.transaction.getcurrent","var");
x.t("upward","appending");
x.t("claimcenter","runs");
x.t("contain","following");
x.t("addition","disallowed");
x.t("rely","count");
x.t("rely","comparison");
x.t("rely","result");
x.t("subobjects","c.myproperty1");
x.t("risks","throwing");
x.t("thread","current");
x.t("lastname","property");
x.t("legal","dbfunction");
x.t("legal","var");
x.t("functions","combine");
x.t("(read-write)","bundle");
x.t("myarray","new");
x.t("myarray","[y]");
x.t("error","occurred");
x.t("introspects","within");
x.t("mathematical","operators");
x.t("blocks","work");
x.t("contrast","note");
x.t("queries","query");
x.t("display","displaying");
x.t("next","result");
x.t("syntax","block");
x.t("syntax","row");
x.t("intermediate","property");
x.t("operators","addition");
x.t("java.util.arraylist","var");
x.t("first","last");
x.t("first","desired");
x.t("first","name");
x.t("first","call");
x.t("row.mychildentity.anotherchildentity.lastname","every");
x.t("collection","entities");
x.t("collection","enhancement");
x.t("(c)","//");
x.t("guidewire_selectall","var");
x.t("entity\u2019s","properties");
x.t("number","items");
x.t("number","useful");
x.t("number","remaining");
x.t("function","example");
x.t("function","count");
x.t("function","guidewire_selectall");
x.t("function","using");
x.t("essence","block");
x.t("implements","ordering-related");
x.t("clears","previous");
x.t("q.compare","integerext");
x.t("q.compare","equals");
x.t("different","columns");
x.t("different","number");
x.t("different","sql");
x.t("represents","series");
x.t("define","extracts");
x.t("against","data");
x.t("words","period-delimited");
x.t("cannot","safely");
x.t("cannot","nest");
x.t("cannot","include");
x.t("move","entity");
x.t("may","change");
x.t("may","add");
x.t("may","added");
x.t("staying","constant");
x.t("instead","gosu");
x.t("instead","iterate");
x.t("row","property");
x.t("row","block");
x.t("row","dbfunction.max");
x.t("row","row");
x.t("row","ending");
x.t("row","row.lastname");
x.t("starting","block");
x.t("non-foreign-key","database");
x.t("index","maxresult");
x.t("index","//");
x.t("match","sort");
x.t("match","two");
x.t("compile","time");
x.t("types","calculations");
x.t("types","gosu");
x.t("returned","query");
x.t("returned","read-only");
x.t("changes","happen");
x.t("changes","properties");
x.t("changes","keep");
x.t("changes","copied");
x.t("changes","new");
x.t("changes","entity");
x.t("parameterize","var");
x.t("maxresult","100");
x.t("maxresult","break");
x.t("ordering","orders");
x.t("ordering","results");
x.t("ordering","methods");
x.t("ordering","rely");
x.t("ordering","ordered");
x.t("ordering","returns");
x.t("calling","query.select");
x.t("calling","thenby");
x.t("nest","database");
x.t("added","changed");
x.t("added","bundle");
x.t("simply","add");
x.t("important","passed");
x.t("important","thing");
x.t("important","information");
x.t("reference","keep");
x.t("reference","original");
x.t("reference","guide");
x.t("reference","cannot");
x.t("reference","return");
x.t("reference","entity");
x.t("book","table");
x.t("rows","sort");
x.t("forth","methods");
x.t("code","example");
x.t("code","change");
x.t("code","risks");
x.t("code","adds");
x.t("code","triggered");
x.t("code","var");
x.t("follow","example");
x.t("return","appropriate");
x.t("return","result");
x.t("often","require");
x.t("adds","entity");
x.t("database","time");
x.t("database","property");
x.t("database","remember");
x.t("database","functions");
x.t("database","function");
x.t("database","changes");
x.t("database","ordering");
x.t("database","query");
x.t("database","column");
x.t("database","server");
x.t("memory","default");
x.t("memory","performance");
x.t("memory","often");
x.t("memory","order");
x.t("previous","ordering");
x.t("previous","orderings");
x.t("previous","order");
x.t("triggered","rule");
x.t("successfully","entity");
x.t("(ambient)","bundle");
x.t("issue","related");
x.t("appear","count");
x.t("100","q.select");
x.t("(x)","important");
x.t("sorting","different");
x.t("sorting","ordering");
x.t("sorting","forth");
x.t("variable","row");
x.t("accesses","foreign");
x.t("illegal","mathematical");
x.t("20","locale");
x.t("java","interface");
x.t("bundle","runing");
x.t("bundle","commits");
x.t("bundle","entities");
x.t("bundle","access");
x.t("bundle","gw.transaction.transaction.getcurrent");
x.t("bundle","collection");
x.t("bundle","move");
x.t("bundle","return");
x.t("bundle","running");
x.t("bundle","separate");
x.t("bundle","typical");
x.t("bundle","save");
x.t("bundle","permit");
x.t("bundle","call");
x.t("mylist","new");
x.t("quickly","database");
x.t("occurred","messsage");
x.t("longer","field");
x.t("keys","example");
x.t("database-backed","properties");
x.t("include","multiple");
x.t("include","virtual");
x.t("unusual","type");
x.t("running","code");
x.t("value","result");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("writable","(read-write)");
x.t("writable","bundle");
x.t("mistake","rely");
x.t("constant","number");
x.t("constant","//");
x.t("throwing","array-out-of-bounds");
x.t("builder","returning");
x.t("builder","introspects");
x.t("generate","different");
x.t("actually","execute");
x.t("bounds","exception");
x.t("exception","results");
x.t("expression","starting");
x.t("expression","returns");
x.t("clauses","var");
x.t("clauses","contains");
x.t("afterward","results");
x.t("runs","query");
x.t("page","error");
x.t("orderings","thenbydescending");
x.t("orderings","argument");
x.t("separate","active");
x.t("dynamic","queries");
x.t("dynamic","returns");
x.t("good","example");
x.t("query","always");
x.t("query","contents");
x.t("query","bundle.add");
x.t("query","results");
x.t("query","query.make");
x.t("query","builder");
x.t("query","query");
x.t("query","read-only");
x.t("query","result");
x.t("query","var");
x.t("query","even");
x.t("query","object");
x.t("query","gets");
x.t("information","bundles");
x.t("information","however");
x.t("information","generate");
x.t("correct","order");
x.t("data","model");
x.t("typical","code");
x.t("result","method");
x.t("result","forever");
x.t("result","query.select");
x.t("result","count");
x.t("result","entities");
x.t("result","objects");
x.t("result","list");
x.t("result","add");
x.t("result","counts");
x.t("result","gosu");
x.t("result","memory");
x.t("result","database");
x.t("result","q.select");
x.t("appropriate","order");
x.t("equals","11");
x.t("read-only","until");
x.t("read-only","default");
x.t("read-only","entity\u2019s");
x.t("read-only","bundle");
x.t("read-only","entity");
x.t("save","result");
x.t("ordering-related","argument");
x.t("disallowed","within");
x.t("values","locale-sensitive");
x.t("displaying","items");
x.t("(user)","q.compare");
x.t("birth","date");
x.t("ordered","database");
x.t("permit","changes");
x.t("two","rows");
x.t("date","gosu");
x.t("column","descending");
x.t("column","ascending");
x.t("column","search");
x.t("column","calling");
x.t("column","either");
x.t("column","following");
x.t("column","names");
x.t("note","collection");
x.t("work","order");
x.t("mark","entity");
x.t("1-10","236");
x.t("236","results");
x.t("cases","code");
x.t("order","clear");
x.t("order","orderbydescending");
x.t("order","results");
x.t("order","thenbydescending");
x.t("order","gosu");
x.t("order","methods");
x.t("order","loading");
x.t("order","orderby");
x.t("order","first");
x.t("order","database");
x.t("order","clauses");
x.t("order","result");
x.t("order","call");
x.t("order","thenby");
x.t("call","method");
x.t("call","count");
x.t("call","add");
x.t("call","first");
x.t("call","thenby");
x.t("dbfunction","reference");
x.t("dbfunction","class");
x.t("immediately","afterward");
x.t("either","ascending");
x.t("entity","searching");
x.t("entity","passed");
x.t("entity","example");
x.t("entity","current");
x.t("entity","new");
x.t("entity","changed");
x.t("entity","further");
x.t("entity","loaded");
x.t("entity","subobjects");
x.t("entity","cannot");
x.t("entity","changes");
x.t("entity","reference");
x.t("entity","writable");
x.t("entity","mark");
x.t("model","specify");
x.t("following","table");
x.t("following","line");
x.t("following","legal");
x.t("following","syntax");
x.t("following","types");
x.t("following","illegal");
x.t("ending","non-foreign-key");
x.t("run","time");
x.t("break","//");
x.t("using","dbfunction");
x.t("class","example");
x.t("//","create");
x.t("//","current");
x.t("//","line");
x.t("//","add");
x.t("//","changes");
x.t("//","following");
x.t("//","bad");
x.t("remaining","constant");
x.t("calculated","myarray");
x.t("returns","field");
x.t("returns","results");
x.t("returns","records");
x.t("levels","sorting");
x.t("series","methods");
x.t("q.select","result.orderby");
x.t("q.select","index");
x.t("across","count");
x.t("across","find");
x.t("across","immediately");
x.t("across","bad");
x.t("bad","example");
x.t("arraylist","user");
x.t("sql","results");
x.t("sql","returns");
x.t("load","result");
x.t("names","match");
x.t("names","checked");
x.t("paths","intermediate");
x.t("read-write","bundle");
x.t("modify","original");
x.t("var","query.make");
x.t("var","text_val=eval");
x.t("var","myarray");
x.t("var","maxresult");
x.t("var","bundle");
x.t("var","mylist");
x.t("var","query");
x.t("var","result");
x.t("\\row-","row.e.e");
x.t("\\row-","row.a2");
x.t("c.myproperty1","true");
x.t("[y]","cases");
x.t("thenby","method");
x.t("thenby","orders");
x.t("thenby","thenbydescending");
x.t("forces","column");
x.t("removed","database");
x.t("even","within");
x.t("even","iterate");
x.t("specify","sort");
x.t("specify","second-level");
x.t("specify","database");
x.t("checked","compile");
x.t("row.lastname","alternatively");
x.t("row.lastname","longer");
x.t("contains","database");
x.t("locale-sensitive","found");
x.t("locale-sensitive","comparison");
x.t("server","cluster");
x.t("server","memory");
x.t("server","server");
x.t("detail","result");
x.t("object","again");
x.t("object","query");
x.t("gets","current");
}
