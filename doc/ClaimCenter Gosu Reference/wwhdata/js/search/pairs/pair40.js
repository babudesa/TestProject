function FileData_Pairs(x)
{
x.t("equal","==");
x.t("equal","greater");
x.t("example","==");
x.t("statements","expressions");
x.t("statements","technically");
x.t("determined","operator");
x.t("creation","object");
x.t("right","parentheses");
x.t("within","parentheses");
x.t("bitwise","bitwise");
x.t("bitwise","shifting");
x.t("bitwise","exclusive");
x.t("bitwise","inclusive");
x.t("===","equality");
x.t("evaluating","remainder");
x.t("description","property");
x.t("lowest","precedence");
x.t("unary","operands");
x.t("uses","value");
x.t("conditional","ternary");
x.t("/=","&=");
x.t("text_val.select","link");
x.t("evaluates","operators");
x.t("evaluates","expression");
x.t("orders","gosu");
x.t("left","right");
x.t("calls","expression");
x.t("bit-wise","logical");
x.t("variants","equivalent");
x.t("property","access");
x.t("division","bitwise");
x.t("division","modulo");
x.t("precedence","left");
x.t("precedence","gosu");
x.t("precedence","function");
x.t("precedence","following");
x.t("precedence","operator");
x.t("link","directly");
x.t("access","array");
x.t("new","object");
x.t("==","===");
x.t("==","true");
x.t("messsage","gosu");
x.t("list","orders");
x.t("list","parameter1");
x.t("list","value1");
x.t("operands","positive");
x.t("ternary","example");
x.t("assignment","operator");
x.t("guide","gosu");
x.t("reflection","array");
x.t("false","-=");
x.t("directly","page");
x.t("shifting","addition");
x.t("exclusive","bitwise");
x.t("true","false");
x.t("text_val.focus","text_val.select");
x.t("gosu","statements");
x.t("gosu","variables");
x.t("gosu","evaluates");
x.t("gosu","operators");
x.t("gosu","first");
x.t("gosu","reference");
x.t("parameter1","parameter2");
x.t("inclusive","logical");
x.t("argument","list");
x.t("parameter2","parameter3");
x.t("comparison","==");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameter3","typeas");
x.t("typeis","typeis");
x.t("typeis","multiplication");
x.t("concatenation","less");
x.t("array","indexing");
x.t("array","value");
x.t("string","concatenation");
x.t("addition","subtraction");
x.t("error","occurred");
x.t("multiplication","division");
x.t("equivalent","conditional");
x.t("equivalent","logical");
x.t("operators","precedence");
x.t("operators","expressions");
x.t("operators","highest");
x.t("operators","operator");
x.t("logical","typeof");
x.t("logical","two");
x.t("first","evaluates");
x.t("guidewire_selectall","var");
x.t("function","calls");
x.t("function","guidewire_selectall");
x.t("indexing","function");
x.t("expressions","bitwise");
x.t("expressions","gosu");
x.t("expressions","information");
x.t("technically","gosu");
x.t("reference","guide");
x.t("eval","bit-wise");
x.t("eval","expression");
x.t("parentheses","uses");
x.t("parentheses","modify");
x.t("greater","equal");
x.t("greater","greater");
x.t("occurred","messsage");
x.t("typeof","eval");
x.t("less","equal");
x.t("less","less");
x.t("discussion","comparison");
x.t("value","evaluating");
x.t("value","list");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("evaluation","order");
x.t("expression","within");
x.t("expression","typeis");
x.t("expression","grouping");
x.t("expression","operator");
x.t("page","error");
x.t("value1","value2");
x.t("typeas","unary");
x.t("typeas","typeas");
x.t("subtraction","string");
x.t("information","gosu");
x.t("value2","value3");
x.t("highest","lowest");
x.t("value3","argument");
x.t("values","typeof");
x.t("two","variants");
x.t("positive","negative");
x.t("order","determined");
x.t("following","list");
x.t("inequality","general");
x.t("general","discussion");
x.t("remainder","expression");
x.t("grouping","new");
x.t("&=","assignment");
x.t("operator","statements");
x.t("operator","description");
x.t("operator","precedence");
x.t("modify","evaluation");
x.t("modulo","division");
x.t("var","text_val=eval");
x.t("equality","expressions");
x.t("equality","inequality");
x.t("-=","/=");
x.t("object","creation");
x.t("object","reflection");
x.t("negative","values");
}
