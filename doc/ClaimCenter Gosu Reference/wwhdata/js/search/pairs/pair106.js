function FileData_Pairs(x)
{
x.t("example","defines");
x.t("example","gosu");
x.t("example","methods");
x.t("example","constructs");
x.t("example","suppose");
x.t("example","cannot");
x.t("example","subclass");
x.t("example","following");
x.t("example","class");
x.t("interfaces","enumerations");
x.t("interfaces","functions");
x.t("coding","style");
x.t("differently","supertype");
x.t("synchronized","access");
x.t("synchronized","thread");
x.t("properties","example");
x.t("properties","backed");
x.t("properties","static");
x.t("properties","separates");
x.t("properties","implemented");
x.t("properties","public");
x.t("properties","overridden");
x.t("properties","modifier");
x.t("properties","inner");
x.t("properties","indicate");
x.t("properties","final");
x.t("properties","shortcuts");
x.t("properties","implementation");
x.t("properties","subtype");
x.t("properties","package");
x.t("properties","style");
x.t("properties","class");
x.t("method","declared");
x.t("method","property");
x.t("method","signature");
x.t("method","name");
x.t("method","part");
x.t("method","superclass");
x.t("method","implementation");
x.t("method","although");
x.t("method","defined");
x.t("method","real");
x.t("provide","implementations");
x.t("provide","code");
x.t("construct","instance");
x.t("parameter","cannot");
x.t("parameter","code");
x.t("parameter","prevent");
x.t("parameter","class");
x.t("combined","abstract");
x.t("suffixtest","greeting");
x.t("suffixtest","final");
x.t("protected","accessible");
x.t("protected","class");
x.t("defines","static");
x.t("defines","abstract");
x.t("defines","method\u2019s");
x.t("defines","--");
x.t("retrieval","properties");
x.t("just","inherit");
x.t("t.registerwithdmv","http://dmv.ca.gov/register");
x.t("anything","modifiers");
x.t("backed","instance");
x.t("rather","once");
x.t("rather","instances");
x.t("rather","specific");
x.t("ever","static");
x.t("lists","gosu");
x.t("applicability","visibility");
x.t("intended","base");
x.t("implement","method");
x.t("implement","allowed");
x.t("implement","function");
x.t("implement","abstract");
x.t("implement","actual");
x.t("every","concrete");
x.t("needs","done");
x.t("within","greeting");
x.t("within","function");
x.t("static","variables");
x.t("static","public");
x.t("static","property");
x.t("static","referred");
x.t("static","modifier");
x.t("static","inner");
x.t("static","functions");
x.t("static","function");
x.t("static","variable");
x.t("static","consequently");
x.t("static","class");
x.t("static","var");
x.t("subclasses","class");
x.t("table","lists");
x.t("description","applies");
x.t("_name","static");
x.t("_name","string");
x.t("_name","str");
x.t("create","instance");
x.t("create","subclass");
x.t("create","class");
x.t("contact","guidewire");
x.t("refer","next");
x.t("variables","synchronized");
x.t("variables","properties");
x.t("variables","always");
x.t("variables","convert");
x.t("variables","sure");
x.t("variables","gosu");
x.t("variables","final");
x.t("variables","marked");
x.t("variables","underscore");
x.t("variables","function");
x.t("variables","private");
x.t("variables","multi-threaded");
x.t("variables","sparingly");
x.t("variables","tempted");
x.t("variables","visible");
x.t("always","prefix");
x.t("seems","appropriate");
x.t("instance","example");
x.t("instance","truck");
x.t("instance","variables");
x.t("instance","type");
x.t("instance","greeting");
x.t("instance","concrete");
x.t("instance","supertype");
x.t("instance","variable");
x.t("instance","although");
x.t("instance","class");
x.t("truck","things");
x.t("truck","extends");
x.t("truck","var");
x.t("truck","even");
x.t("doing","concrete");
x.t("once","per");
x.t("saywhat","string");
x.t("modifiers","static");
x.t("modifiers","modifiers");
x.t("modifiers","apply");
x.t("modifiers","access");
x.t("modifiers","function");
x.t("modifiers","one\u2019s");
x.t("modifiers","override");
x.t("modifiers","mutually");
x.t("modifiers","several");
x.t("apply","type");
x.t("apply","entire");
x.t("apply","override");
x.t("enumerations","encapsulated");
x.t("enumerations","means");
x.t("enumerations","following");
x.t("current","package");
x.t("test.name","variable");
x.t("topic","refer");
x.t("uses","public");
x.t("uses","syntax");
x.t("separates","code");
x.t("line","appear");
x.t("declared","abstract");
x.t("implemented","gosu");
x.t("implemented","functions");
x.t("later","statement");
x.t("text_val.select","link");
x.t("interface","defines");
x.t("interface","enumeration");
x.t("look","package");
x.t("look","following");
x.t("tell","gosu");
x.t("displays","compiler");
x.t("register","guidewire");
x.t("register","_licenseplate");
x.t("modified","initial");
x.t("statement","final");
x.t("tions","prevent");
x.t("support","gosu");
x.t("type","example");
x.t("type","provide");
x.t("type","intended");
x.t("type","type");
x.t("type","however");
x.t("type","specified");
x.t("type","gosu");
x.t("type","members");
x.t("type","may");
x.t("type","cannot");
x.t("type","types");
x.t("type","subtype");
x.t("type","itself");
x.t("type","following");
x.t("type","member");
x.t("change","final");
x.t("customer","support");
x.t("public","coding");
x.t("public","properties");
x.t("public","variables");
x.t("public","property");
x.t("public","access");
x.t("public","functions");
x.t("public","function");
x.t("public","accessible");
x.t("public","fully");
x.t("public","var");
x.t("public","visible");
x.t("compiler","warning");
x.t("fly","print");
x.t("keywords","level");
x.t("however","add");
x.t("however","code");
x.t("however","instantiate");
x.t("extend","implement");
x.t("property","just");
x.t("property","doing");
x.t("property","access");
x.t("property","signature");
x.t("property","plate");
x.t("property","name");
x.t("property","final");
x.t("property","local");
x.t("property","functions");
x.t("property","function");
x.t("property","instantiate");
x.t("property","implementation");
x.t("property","--");
x.t("property","hello");
x.t("modi","fiers");
x.t("assumes","following");
x.t("default","access");
x.t("default","modifier");
x.t("convert","public");
x.t("automatically","insert");
x.t("guidewire","customer");
x.t("guidewire","pretending");
x.t("guidewire","http://dmv.ca.gov/register");
x.t("guidewire","print");
x.t("encapsulated","list");
x.t("greeting","static");
x.t("greeting","fly");
x.t("greeting","greeting");
x.t("greeting","string");
x.t("greeting","private");
x.t("greeting","class");
x.t("f.suffixtest","prints");
x.t("link","directly");
x.t("access","contact");
x.t("access","modifiers");
x.t("access","name");
x.t("access","gosu");
x.t("access","modifier");
x.t("access","different");
x.t("access","level");
x.t("access","fully");
x.t("access","levels");
x.t("element","default");
x.t("prefix","private");
x.t("signature","example");
x.t("signature","implement");
x.t("signature","concrete");
x.t("new","truck");
x.t("new","instance");
x.t("new","com.mycompany.truck");
x.t("new","mytype");
x.t("new","keyword");
x.t("new","override");
x.t("new","example.finaltest");
x.t("getting","setting");
x.t("plate","implement");
x.t("plate","guidewire");
x.t("plate","string");
x.t("plate","t.plate");
x.t("plate","newplate");
x.t("plate","var");
x.t("finaltest","function");
x.t("belongs","type");
x.t("trucklength","create");
x.t("trucklength","code");
x.t("license","plate");
x.t("bonjour","static");
x.t("messsage","gosu");
x.t("determines","whether");
x.t("lets","variable");
x.t("indicates","type");
x.t("doesn't","define");
x.t("pretending","register");
x.t("list","enumerated");
x.t("need","information");
x.t("add","final");
x.t("add","members");
x.t("guide","classes");
x.t("applies","type");
x.t("applies","top-level");
x.t("applies","types");
x.t("applies","classes");
x.t("simple","abstract");
x.t("(greeting)","static");
x.t("(greeting)","test");
x.t("referred","static");
x.t("referred","concrete");
x.t("inherit","method");
x.t("inherit","property\u2019s");
x.t("sure","understand");
x.t("remember","access");
x.t("directly","construct");
x.t("directly","page");
x.t("test","gosu");
x.t("test","code");
x.t("test","classes");
x.t("test","var");
x.t("declare","variable");
x.t("declare","subtype");
x.t("detects","overriding");
x.t("specified","abstract");
x.t("desired","means");
x.t("exclusive","final");
x.t("text_val.focus","text_val.select");
x.t("outside","current");
x.t("test1","public");
x.t("name","construct");
x.t("name","property");
x.t("name","omit");
x.t("name","supertype");
x.t("name","string");
x.t("name","variable");
x.t("name","subtype");
x.t("name","com.mycompany.utils.test2");
x.t("name","str");
x.t("com.mycompany.integration.test3","cannot");
x.t("no","gosu");
x.t("no","concrete");
x.t("no","abstract");
x.t("no","subtype");
x.t("no","restrictions");
x.t("guidelines","coding");
x.t("property\u2019s","name");
x.t("stored","once");
x.t("(greeting.name)","greeting.printgreeting");
x.t("gosu","displays");
x.t("gosu","assumes");
x.t("gosu","access");
x.t("gosu","detects");
x.t("gosu","editor");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","subtype");
x.t("gosu","classes");
x.t("gosu","class");
x.t("gosu","tester");
x.t("test2","internal");
x.t("enumerated","constants");
x.t("overridden","call");
x.t("initialize","later");
x.t("initialize","value");
x.t("modifier","parameter");
x.t("modifier","anything");
x.t("modifier","static");
x.t("modifier","description");
x.t("modifier","seems");
x.t("modifier","apply");
x.t("modifier","type");
x.t("modifier","keywords");
x.t("modifier","access");
x.t("modifier","lets");
x.t("modifier","indicates");
x.t("modifier","applies");
x.t("modifier","gosu");
x.t("modifier","final");
x.t("modifier","implies");
x.t("modifier","local");
x.t("modifier","function");
x.t("modifier","cannot");
x.t("modifier","types");
x.t("modifier","abstract");
x.t("modifier","information");
x.t("modifier","implicit");
x.t("modifier","prevents");
x.t("modifier","used");
x.t("modifier","class");
x.t("enumeration","type");
x.t("enumeration","final");
x.t("avoid","public");
x.t("base","type");
x.t("perform","function");
x.t("concrete","method");
x.t("concrete","type");
x.t("concrete","property");
x.t("concrete","implementation");
x.t("concrete","subtype");
x.t("concrete","subclass");
x.t("virtual","virtual");
x.t("virtual","means");
x.t("part","greeting");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","variables");
x.t("methods","abstract");
x.t("inner","types");
x.t("inner","classes");
x.t("inner","class");
x.t("inherited","example");
x.t("inherited","property");
x.t("inherited","function");
x.t("parameters","final");
x.t("parameters","specifies");
x.t("parameters","return");
x.t("none","members");
x.t("_licenseplate","string");
x.t("_licenseplate","registrationurl");
x.t("precau","tions");
x.t("constructs","new");
x.t("overriding","inherited");
x.t("overriding","myfunction");
x.t("overriding","item");
x.t("omit","override");
x.t("implementations","none");
x.t("implementations","abstract");
x.t("implementations","actual");
x.t("supertype","defines");
x.t("supertype","referred");
x.t("supertype","means");
x.t("supertype","override");
x.t("supertype","vehicle");
x.t("supertype","information");
x.t("supertype","case");
x.t("com.mycompany.truck","t.plate");
x.t("constants","implemented");
x.t("indicate","belongs");
x.t("final","example");
x.t("final","parameter");
x.t("final","property");
x.t("final","greeting");
x.t("final","initialize");
x.t("final","modifier");
x.t("final","local");
x.t("final","functions");
x.t("final","function/method");
x.t("final","function");
x.t("final","cannot");
x.t("final","types");
x.t("final","variable");
x.t("final","class");
x.t("final","var");
x.t("attempts","change");
x.t("attempts","modify");
x.t("string","example");
x.t("string","static");
x.t("string","_name");
x.t("string","modifiers");
x.t("string","greeting");
x.t("string","plate");
x.t("string","name");
x.t("string","gosu");
x.t("string","concrete");
x.t("string","final");
x.t("string","contrast");
x.t("string","ways");
x.t("string","abstract");
x.t("string","return");
x.t("string","//");
x.t("accessed","package");
x.t("entire","type");
x.t("write","abstract");
x.t("int","trucklength");
x.t("http://dmv.ca.gov/register","final");
x.t("http://dmv.ca.gov/register","prints");
x.t("local","variables");
x.t("local","variable");
x.t("implies","no");
x.t("implies","concrete");
x.t("marked","static");
x.t("marked","public");
x.t("myfunction","method");
x.t("myfunction","myparameter");
x.t("contain","implementations");
x.t("contain","members");
x.t("com.mycompany.vehicle","var");
x.t("prints","boujour");
x.t("prints","butterfly");
x.t("prints","following");
x.t("understand","synchronized");
x.t("thread","access");
x.t("functions","properties");
x.t("functions","variables");
x.t("functions","public");
x.t("functions","printgreeting");
x.t("functions","defined");
x.t("auto","//");
x.t("error","attempts");
x.t("error","function");
x.t("error","occurred");
x.t("contrast","internal");
x.t("com.mycompany","abstract");
x.t("com.mycompany","class");
x.t("whatever","needs");
x.t("reimplement","method");
x.t("reimplement","override");
x.t("notice","example");
x.t("frenchgreeting.saywhat","test");
x.t("members","look");
x.t("members","desired");
x.t("members","no");
x.t("members","supertype");
x.t("members","local");
x.t("members","functions");
x.t("members","top-level");
x.t("members","package");
x.t("members","var");
x.t("members","visible");
x.t("outer","gosu");
x.t("suppose","write");
x.t("suppose","define");
x.t("suppose","expand");
x.t("syntax","define");
x.t("next","section");
x.t("top-level","types");
x.t("means","properties");
x.t("means","doesn't");
x.t("means","no");
x.t("means","cannot");
x.t("allowed","instantiated");
x.t("guidewire_selectall","var");
x.t("function","example");
x.t("function","method");
x.t("function","parameter");
x.t("function","suffixtest");
x.t("function","saywhat");
x.t("function","property");
x.t("function","parameters");
x.t("function","supertype");
x.t("function","final");
x.t("function","attempts");
x.t("function","myfunction");
x.t("function","functions");
x.t("function","guidewire_selectall");
x.t("function","printgreeting");
x.t("function","abstract");
x.t("function","variable");
x.t("function","registerwithdmv");
x.t("function","class");
x.t("one\u2019s","applicability");
x.t("underscore","character");
x.t("implements","abstract");
x.t("function/method","--");
x.t("printgreeting","method");
x.t("printgreeting","final");
x.t("printgreeting","print");
x.t("printgreeting","var");
x.t("whether","classes");
x.t("particular","function");
x.t("particular","variable");
x.t("cannot","construct");
x.t("cannot","combined");
x.t("cannot","create");
x.t("cannot","test.name");
x.t("cannot","modified");
x.t("cannot","directly");
x.t("cannot","declare");
x.t("cannot","inherited");
x.t("cannot","reimplement");
x.t("cannot","code");
x.t("subtypes","--");
x.t("private","protected");
x.t("private","static");
x.t("private","functions");
x.t("private","accessible");
x.t("myparameter","string");
x.t("editor","offers");
x.t("may","contain");
x.t("define","properties");
x.t("define","implement");
x.t("define","property");
x.t("define","concrete");
x.t("define","variable");
x.t("define","subtype");
x.t("define","class");
x.t("specifies","value");
x.t("different","threads");
x.t("frenchgreeting","within");
x.t("frenchgreeting","static");
x.t("mytype","abstract");
x.t("ways","properties");
x.t("ways","information");
x.t("types","static");
x.t("types","modifiers");
x.t("types","type");
x.t("types","modi");
x.t("types","applies");
x.t("types","indicate");
x.t("types","final");
x.t("types","outer");
x.t("types","classes");
x.t("types","typically");
x.t("types","package");
x.t("internal","public");
x.t("internal","access");
x.t("internal","accessible");
x.t("internal","class");
x.t("internal","var");
x.t("declaring","type");
x.t("superclass","function");
x.t("superclass","override");
x.t("keyword","static");
x.t("keyword","tell");
x.t("keyword","compiler");
x.t("keyword","gosu");
x.t("things","work");
x.t("compile","error");
x.t("section","inner");
x.t("accessible","no");
x.t("accessible","types");
x.t("accessible","declaring");
x.t("accessible","package");
x.t("accessible","class");
x.t("initial","value");
x.t("assigned","final");
x.t("boujour","information");
x.t("reference","guide");
x.t("code","method");
x.t("code","uses");
x.t("code","new");
x.t("code","gosu");
x.t("code","perform");
x.t("code","virtual");
x.t("code","cannot");
x.t("code","accesses");
x.t("code","valid");
x.t("code","print");
x.t("code","subclass");
x.t("code","following");
x.t("code","class");
x.t("code","var");
x.t("code","generates");
x.t("override","modifier");
x.t("override","final");
x.t("override","function");
x.t("override","keyword");
x.t("abstract","properties");
x.t("abstract","method");
x.t("abstract","defines");
x.t("abstract","type");
x.t("abstract","property");
x.t("abstract","test");
x.t("abstract","gosu");
x.t("abstract","modifier");
x.t("abstract","methods");
x.t("abstract","supertype");
x.t("abstract","members");
x.t("abstract","function");
x.t("abstract","function/method");
x.t("abstract","class");
x.t("level","access");
x.t("level","determines");
x.t("level","internal");
x.t("fully","implements");
x.t("fully","accessible");
x.t("fully","qualified");
x.t("fully","information");
x.t("vehicle","defines");
x.t("vehicle","look");
x.t("vehicle","type");
x.t("vehicle","contain");
x.t("vehicle","abstract");
x.t("vehicle","//");
x.t("vehicle","class");
x.t("vehicle","var");
x.t("instantiate","type");
x.t("instantiate","subtype");
x.t("instantiate","subclass");
x.t("return","_name");
x.t("return","bonjour");
x.t("return","frenchgreeting.saywhat");
x.t("return","value");
x.t("t.plate","t.registerwithdmv");
x.t("t.plate","guidewire");
x.t("appear","subtype");
x.t("method\u2019s","parameters");
x.t("environment","special");
x.t("variable","parameter");
x.t("variable","static");
x.t("variable","uses");
x.t("variable","property");
x.t("variable","remember");
x.t("variable","stored");
x.t("variable","initialize");
x.t("variable","final");
x.t("variable","accessed");
x.t("variable","define");
x.t("variable","cannot");
x.t("variable","package");
x.t("variable","warning");
x.t("variable","invoke");
x.t("accesses","properties");
x.t("actual","code");
x.t("actual","behavior");
x.t("occurred","messsage");
x.t("shortcuts","define");
x.t("changing","example");
x.t("changing","within");
x.t("concurrency","additional");
x.t("qualified","name");
x.t("instantiated","new");
x.t("instances","type");
x.t("com.mycompany.utils","internal");
x.t("com.mycompany.utils","class");
x.t("value","provide");
x.t("value","property");
x.t("value","final");
x.t("value","assigned");
x.t("value","prevent");
x.t("value","print");
x.t("value","immediately");
x.t("mutually","exclusive");
x.t("additional","help");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","types");
x.t("--","every");
x.t("--","no");
x.t("--","private");
x.t("--","internal");
x.t("--","--");
x.t("--","specify");
x.t("implementation","implement");
x.t("implementation","declare");
x.t("implementation","inherited");
x.t("implementation","final");
x.t("implementation","abstract");
x.t("implementation","storage");
x.t("consequently","code");
x.t("specific","instance");
x.t("extends","com.mycompany.vehicle");
x.t("extends","vehicle");
x.t("extends","package");
x.t("subtype","implement");
x.t("subtype","truck");
x.t("subtype","type");
x.t("subtype","add");
x.t("subtype","overriding");
x.t("subtype","reimplement");
x.t("subtype","define");
x.t("subtype","fully");
x.t("subtype","instantiate");
x.t("subtype","vehicle");
x.t("subtype","overrides");
x.t("subtype","contains");
x.t("although","define");
x.t("although","specify");
x.t("valid","package");
x.t("valid","class");
x.t("hello","string");
x.t("hello","world");
x.t("page","error");
x.t("com.mycompany.utils.test2","access");
x.t("dynamic","however");
x.t("dynamic","//");
x.t("help","static");
x.t("str","static");
x.t("str","string");
x.t("_trucklength","int");
x.t("information","properties");
x.t("information","static");
x.t("information","enumerations");
x.t("information","topic");
x.t("information","access");
x.t("information","concurrency");
x.t("butter","f.suffixtest");
x.t("appropriate","example");
x.t("appropriate","abstract");
x.t("defined","superclass");
x.t("defined","code");
x.t("final1","function");
x.t("recommendations","variables");
x.t("case","vehicle");
x.t("expand","vehicle");
x.t("newplate","string");
x.t("prevent","changing");
x.t("prevent","simultaneous");
x.t("frozen","dynamic");
x.t("example.finaltest","var");
x.t("greeting.name","initial");
x.t("fiers","apply");
x.t("character","avoid");
x.t("called","frenchgreeting");
x.t("called","vehicle");
x.t("print","license");
x.t("print","pretending");
x.t("print","(greeting)");
x.t("print","(greeting.name)");
x.t("print","hello");
x.t("print","(example.greeting.hello)");
x.t("butterfly","however");
x.t("simultaneous","access");
x.t("classes","interfaces");
x.t("classes","modifiers");
x.t("classes","public");
x.t("classes","outside");
x.t("classes","particular");
x.t("classes","define");
x.t("classes","ways");
x.t("classes","package");
x.t("classes","using");
x.t("done","print");
x.t("typically","abstract");
x.t("work","differently");
x.t("implicit","enumerations");
x.t("prevents","subtype");
x.t("itself","rather");
x.t("itself","instance");
x.t("itself","marked");
x.t("itself","class");
x.t("package","example");
x.t("package","com.mycompany");
x.t("package","subtypes");
x.t("package","com.mycompany.utils");
x.t("package","--");
x.t("package","additionally");
x.t("package","class");
x.t("package","similarly");
x.t("package","visible");
x.t("subclass","gosu");
x.t("subclass","concrete");
x.t("subclass","enumeration");
x.t("subclass","final");
x.t("subclass","abstract");
x.t("subclass","visible");
x.t("real","code");
x.t("registerwithdmv","abstract");
x.t("registerwithdmv","registrationurl");
x.t("call","inherited");
x.t("immediately","declare");
x.t("following","example");
x.t("following","table");
x.t("following","create");
x.t("following","line");
x.t("following","default");
x.t("following","license");
x.t("following","simple");
x.t("following","code");
x.t("following","package");
x.t("style","guidelines");
x.t("style","override");
x.t("style","recommendations");
x.t("storage","retrieval");
x.t("offers","automatically");
x.t("used","variables");
x.t("used","inner");
x.t("used","functions");
x.t("multi-threaded","environment");
x.t("special","precau");
x.t("sparingly","ever");
x.t("class","rather");
x.t("class","variables");
x.t("class","truck");
x.t("class","instance");
x.t("class","interface");
x.t("class","extend");
x.t("class","greeting");
x.t("class","finaltest");
x.t("class","need");
x.t("class","test");
x.t("class","test1");
x.t("class","com.mycompany.integration.test3");
x.t("class","test2");
x.t("class","concrete");
x.t("class","final");
x.t("class","auto");
x.t("class","define");
x.t("class","cannot");
x.t("class","frenchgreeting");
x.t("class","fully");
x.t("class","abstract");
x.t("class","vehicle");
x.t("class","variable");
x.t("class","extends");
x.t("class","final1");
x.t("class","greeting.name");
x.t("class","called");
x.t("class","classes");
x.t("class","itself");
x.t("class","package");
x.t("class","used");
x.t("class","class");
x.t("class","using");
x.t("class","visible");
x.t("additionally","public");
x.t("additionally","gosu");
x.t("similarly","modifiers");
x.t("warning","static");
x.t("warning","additionally");
x.t("//","final");
x.t("//","whatever");
x.t("//","compile");
x.t("//","abstract");
x.t("//","subtype");
x.t("setting","property");
x.t("using","new");
x.t("using","code");
x.t("using","following");
x.t("levels","element");
x.t("levels","access");
x.t("tempted","public");
x.t("overrides","inherited");
x.t("overrides","implementation");
x.t("per","instance");
x.t("per","gosu");
x.t("member","function");
x.t("invoke","particular");
x.t("visibility","modifier");
x.t("behavior","just");
x.t("behavior","getting");
x.t("modify","value");
x.t("world","name");
x.t("var","_name");
x.t("var","new");
x.t("var","name");
x.t("var","text_val=eval");
x.t("var","_licenseplate");
x.t("var","_trucklength");
x.t("var","butter");
x.t("var","frozen");
x.t("restrictions","protected");
x.t("insert","modifier");
x.t("insert","override");
x.t("greeting.printgreeting","notice");
x.t("visible","subclasses");
x.t("visible","public");
x.t("visible","classes");
x.t("visible","package");
x.t("visible","subclass");
x.t("visible","class");
x.t("registrationurl","construct");
x.t("registrationurl","string");
x.t("even","cannot");
x.t("generates","compile");
x.t("(example.greeting.hello)","prints");
x.t("specify","method");
x.t("specify","modifier");
x.t("contains","implementations");
x.t("tester","accesses");
x.t("tester","using");
x.t("tester","var");
x.t("item","example");
x.t("threads","static");
}
