function FileData_Pairs(x)
{
x.t("example","harder");
x.t("integers","reference");
x.t("just","looking");
x.t("relational","inequality");
x.t("relational","equality");
x.t("===","false");
x.t("===","true");
x.t("===","three");
x.t("===","operators");
x.t("===","expression");
x.t("===","operator");
x.t("smart","enough");
x.t("refer","object");
x.t("description","print");
x.t("triple-equals","operator");
x.t("always","boolean");
x.t("always","compares");
x.t("variables","reference");
x.t("seems","two");
x.t("uses","object");
x.t("text_val.select","link");
x.t("evaluates","true");
x.t("times","want");
x.t("calls","object");
x.t("compiler","smart");
x.t("time","gosu");
x.t("however","case");
x.t("however","cases");
x.t("automatically","calls");
x.t("primitive","types");
x.t("detect","string");
x.t("link","directly");
x.t("==","===");
x.t("==","false");
x.t("==","true");
x.t("==","examples");
x.t("==","operator");
x.t("details","syntax");
x.t("want","identity");
x.t("want","know");
x.t("want","reference");
x.t("want","compare");
x.t("objects","triple-equals");
x.t("objects","however");
x.t("objects","literally");
x.t("objects","contain");
x.t("objects","double-equals");
x.t("objects","different");
x.t("objects","memory");
x.t("literally","reference");
x.t("usually","want");
x.t("messsage","gosu");
x.t("operands","compatible");
x.t("operands","in-memory");
x.t("operands","exact");
x.t("signs","compare");
x.t(".equals","==");
x.t("guide","gosu");
x.t("identity","reference");
x.t("harder","understand");
x.t("false","===");
x.t("false","false");
x.t("false","true");
x.t("false","gosu");
x.t("false","indicating");
x.t("false","wo");
x.t("false","print");
x.t("false","two");
x.t("looking","code");
x.t("directly","page");
x.t("true","example");
x.t("true","refer");
x.t("true","==");
x.t("true","operands");
x.t("true","false");
x.t("true","wo");
x.t("true","two");
x.t("true","var");
x.t("text_val.focus","text_val.select");
x.t("gosu","compiler");
x.t("gosu","operators");
x.t("gosu","represents");
x.t("gosu","language");
x.t("gosu","reference");
x.t("gosu","optimizes");
x.t("gosu","operator");
x.t("references","point");
x.t("comparison","words");
x.t("comparison","reference");
x.t("comparison","two");
x.t("tests","relational");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","reference");
x.t("boolean","value");
x.t("boolean","examples");
x.t("compatible","types");
x.t("string","objects");
x.t("string","literal");
x.t("string","compile");
x.t("string","print");
x.t("string","literals");
x.t("three","equals");
x.t("prints","result");
x.t("contain","different");
x.t("contain","value");
x.t("understand","just");
x.t("in-memory","object");
x.t("error","occurred");
x.t("point","in-memory");
x.t("point","object");
x.t("operators","expressions");
x.t("operators","examples");
x.t("syntax","==");
x.t("syntax","examples");
x.t("know","two");
x.t("logical","operator");
x.t("guidewire_selectall","var");
x.t("underlying","object");
x.t("literal","point");
x.t("function","guidewire_selectall");
x.t("indicating","result");
x.t("wo","string");
x.t("enough","detect");
x.t("expressions","function");
x.t("expressions","return");
x.t("expressions","equality");
x.t("expressions","consist");
x.t("whether","references");
x.t("whether","two");
x.t("words","evaluates");
x.t("words","times");
x.t("different","objects");
x.t("different","values");
x.t("represents","two");
x.t("double-equals","operator");
x.t("language","==");
x.t("instead","===");
x.t("instead","compare");
x.t("types","integers");
x.t("types","however");
x.t("types","==");
x.t("types","usually");
x.t("types","gosu");
x.t("types","result");
x.t("types","cases");
x.t("compile","time");
x.t("works","primitive");
x.t("simply","comparing");
x.t("reference","guide");
x.t("reference","in-memory");
x.t("reference","types");
x.t("reference","simply");
x.t("reference","value");
x.t("code","seems");
x.t("code","usages");
x.t("code","typically");
x.t("return","boolean");
x.t("optimizes","code");
x.t("exact","reference");
x.t("memory","works");
x.t("memory","separate");
x.t("memory","usages");
x.t("java","language");
x.t("java","code");
x.t("occurred","messsage");
x.t("value","true");
x.t("value","words");
x.t("value","different");
x.t("value","print");
x.t("value","equality");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("expression","prints");
x.t("expression","result");
x.t("page","error");
x.t("separate","objects");
x.t("separate","values");
x.t("result","description");
x.t("result","always");
x.t("result","==");
x.t("result","false");
x.t("result","comparison");
x.t("equals","signs");
x.t("equals","comparison");
x.t("equals","compare");
x.t("examples","logical");
x.t("examples","expression");
x.t("examples","comparing");
x.t("examples","demonstrate");
x.t("values","print");
x.t("values","using");
x.t("values","compare");
x.t("values","var");
x.t("comparing","==");
x.t("comparing","values");
x.t("case","gosu");
x.t("usages","string");
x.t("usages","operator");
x.t("print","===");
x.t("print","==");
x.t("two","variables");
x.t("two","objects");
x.t("two","operands");
x.t("two","string");
x.t("two","expressions");
x.t("typically","uses");
x.t("cases","want");
x.t("literals","separate");
x.t("following","types");
x.t("following","examples");
x.t("inequality","operands");
x.t("compares","whether");
x.t("compares","object");
x.t("using","underlying");
x.t("demonstrate","difference");
x.t("compare","whether");
x.t("compare","instead");
x.t("compare","value");
x.t("compare","values");
x.t("compare","object");
x.t("returns","false");
x.t("returns","true");
x.t("operator","===");
x.t("operator","evaluates");
x.t("operator","automatically");
x.t("operator","==");
x.t("operator","gosu");
x.t("operator","tests");
x.t("operator","syntax");
x.t("operator","instead");
x.t("operator","compares");
x.t("operator","returns");
x.t("operator","operator");
x.t("var","text_val=eval");
x.t("var","string");
x.t("var","var");
x.t("equality","always");
x.t("equality","details");
x.t("equality","operands");
x.t("equality","expressions");
x.t("equality","java");
x.t("consist","following");
x.t("object","===");
x.t("object",".equals");
x.t("object","gosu");
x.t("object","memory");
x.t("object","equals");
x.t("object","following");
x.t("object","equality");
x.t("difference","==");
}
