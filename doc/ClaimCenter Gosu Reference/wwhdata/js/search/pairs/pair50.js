function FileData_Pairs(x)
{
x.t("example","following");
x.t("hashmap","example");
x.t("hashmap","important");
x.t("full","package");
x.t("full","class");
x.t("saying","package");
x.t("built-in","guidewire");
x.t("built-in","types");
x.t("studio","displays");
x.t("studio","prevents");
x.t("create","package");
x.t("refer","java");
x.t("always","precedence");
x.t("always","scope");
x.t("instance","try");
x.t("asterisk","character");
x.t("java.util.hashmap","instead");
x.t("java.util.hashmap","//");
x.t("unary","operator");
x.t("toplevelpackage.subpackage","example");
x.t("try","create");
x.t("creates","arraylist");
x.t("scripts","without");
x.t("uses","java.util.hashmap");
x.t("uses","toplevelpackage.subpackage");
x.t("uses","type");
x.t("uses","namespace");
x.t("uses","java.util");
x.t("uses","expression");
x.t("uses","fully-qualified");
x.t("uses","operator");
x.t("uses","imports");
x.t("later","section");
x.t("snapshot","soap");
x.t("text_val.select","link");
x.t("statement","words");
x.t("displays","message");
x.t("type","uses");
x.t("type","list");
x.t("type","name");
x.t("type","fully-qualified");
x.t("type","system");
x.t("type","names");
x.t("wildcard","namespace");
x.t("productmodel","snapshot");
x.t("hierarchy","uses");
x.t("packages","always");
x.t("packages","entity");
x.t("packages","names");
x.t("simpler","expression");
x.t("however","need");
x.t("put","uses");
x.t("guidewire","packages");
x.t("text","saying");
x.t("require","qualification");
x.t("qualification","built-in");
x.t("qualification","however");
x.t("link","directly");
x.t("single","operand");
x.t("new","hashmap");
x.t("new","java.util.hashmap");
x.t("new","list");
x.t("new","expression");
x.t("precedence","wildcard");
x.t("command","although");
x.t("namespaces","specified");
x.t("namespaces","gosu");
x.t("namespaces","importing");
x.t("namespaces","function");
x.t("namespaces","types");
x.t("messsage","gosu");
x.t("fashion","java");
x.t("file","script");
x.t("need","full");
x.t("need","fully-qualified");
x.t("list","special");
x.t("list","object");
x.t("beginning","file");
x.t("guide","gosu");
x.t("soap","studio");
x.t("soap","typekey");
x.t("resolves","java.util.arraylist");
x.t("resolves","java.util.list");
x.t("directly","page");
x.t("language\u2019s","import");
x.t("specified","asterisk");
x.t("text_val.focus","text_val.select");
x.t("name","uses");
x.t("name","syntax");
x.t("name","including");
x.t("name","var");
x.t("functionality","provides");
x.t("creating","custom");
x.t("no","packages");
x.t("gosu","scripts");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","resolves");
x.t("gosu","operators");
x.t("gosu","reference");
x.t("references","different");
x.t("declares","explicit");
x.t("declares","package");
x.t("custom","packages");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","useful");
x.t("useful","second");
x.t("boolean","string");
x.t("operand","functionality");
x.t("omit","fully-qualified");
x.t("namespace","namespaces");
x.t("namespace","references");
x.t("namespace","specific");
x.t("indicate","hierarchy");
x.t("map","new");
x.t("lines","code");
x.t("string","number");
x.t("second","statement");
x.t("simplify","lines");
x.t("error","occurred");
x.t("operators","expressions");
x.t("syntax","uses");
x.t("red","text");
x.t("java.util.arraylist","special");
x.t("means","need");
x.t("issues","warning");
x.t("importing","types");
x.t("guidewire_selectall","var");
x.t("number","list");
x.t("function","guidewire_selectall");
x.t("expressions","importing");
x.t("words","purpose");
x.t("different","compared");
x.t("may","appear");
x.t("technically","unary");
x.t("instead","following");
x.t("instead","using");
x.t("language","types");
x.t("java.util.list","general");
x.t("types","always");
x.t("types","type");
x.t("types","namespaces");
x.t("types","may");
x.t("types","include");
x.t("types","package");
x.t("section","convention");
x.t("pcf","pcftest");
x.t("purpose","using");
x.t("explicit","type");
x.t("explicit","types");
x.t("important","explicit");
x.t("scope","built-in");
x.t("scope","refer");
x.t("scope","boolean");
x.t("scope","means");
x.t("reference","guide");
x.t("code","creates");
x.t("code","uses");
x.t("code","declares");
x.t("code","omit");
x.t("typekey","xsd");
x.t("fully","qualifying");
x.t("qualifying","full");
x.t("pcftest","perm");
x.t("message","red");
x.t("appear","java");
x.t("java","packages");
x.t("java","language\u2019s");
x.t("java","language");
x.t("java","import");
x.t("occurred","messsage");
x.t("compared","behavior");
x.t("include","packages");
x.t("suggesting","instead");
x.t("similar","fashion");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","type");
x.t("java.util","//");
x.t("import","command");
x.t("import","operator");
x.t("convention","put");
x.t("although","note");
x.t("takes","single");
x.t("expression","example");
x.t("expression","uses");
x.t("expression","simplify");
x.t("expression","without");
x.t("page","error");
x.t("script","uses");
x.t("specifying","full");
x.t("behaves","similar");
x.t("gw.lang","pcf");
x.t("perm","productmodel");
x.t("case","used");
x.t("fully-qualified","type");
x.t("fully-qualified","class");
x.t("character","indicate");
x.t("called","soap");
x.t("note","minor");
x.t("mentioned","later");
x.t("prevents","creating");
x.t("package","hierarchy");
x.t("package","qualification");
x.t("package","namespaces");
x.t("package","name");
x.t("package","no");
x.t("package","gosu");
x.t("package","namespace");
x.t("package","called");
x.t("following","code");
x.t("entity","gw.lang");
x.t("special","gosu");
x.t("special","case");
x.t("system","gosu");
x.t("used","new");
x.t("class","name");
x.t("using","uses");
x.t("using","arraylist");
x.t("//","uses");
x.t("//","simpler");
x.t("general","resolves");
x.t("warning","suggesting");
x.t("xsd","studio");
x.t("arraylist","issues");
x.t("arraylist","var");
x.t("without","fully");
x.t("without","specifying");
x.t("operator","uses");
x.t("operator","packages");
x.t("operator","technically");
x.t("operator","types");
x.t("operator","takes");
x.t("operator","behaves");
x.t("operator","//");
x.t("operator","specify");
x.t("behavior","java");
x.t("names","instance");
x.t("names","uses");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","map");
x.t("including","package");
x.t("minor","difference");
x.t("imports","beginning");
x.t("difference","mentioned");
x.t("specify","package");
x.t("object","require");
}
