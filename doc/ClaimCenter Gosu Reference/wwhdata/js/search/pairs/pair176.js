function FileData_Pairs(x)
{
x.t("example","inside");
x.t("example","passes");
x.t("example","simplifies");
x.t("example","easier");
x.t("method","shown");
x.t("method","once");
x.t("method","signature");
x.t("method","requires");
x.t("method","var");
x.t("method","object");
x.t("parameter","block");
x.t("pattern","typesafe");
x.t("version","var");
x.t("just","call");
x.t("shown","example");
x.t("create","load");
x.t("create","object");
x.t("static","variable");
x.t("variables","concurrent");
x.t("variables","addition");
x.t("variables","function");
x.t("variables","define");
x.t("always","calls");
x.t("once","first");
x.t("locking","pattern");
x.t("creates","new");
x.t("creates","object");
x.t("execute","block");
x.t("uses","lazyvar");
x.t("uses","java");
x.t("text_val.select","link");
x.t("rency","functionality");
x.t("people","call");
x.t("best","gosu");
x.t("type","block");
x.t("type","result");
x.t("time","someone");
x.t("time","code");
x.t("calls","method");
x.t("calls","property");
x.t("calls","resource-intensive");
x.t("thread-safe","lazyvar");
x.t("cached","value");
x.t("inside","gosu");
x.t("however","gosu");
x.t("lazyvar","list");
x.t("lazyvar","value");
x.t("lazyvar","class");
x.t("wraps","double-checked");
x.t("typesafe","holder");
x.t("lazyvar.make","block");
x.t("lazyvar.make","gw.util.concurrent.lazyvar.lazyvarinit");
x.t("lazyvar.make","\\-");
x.t("property","again");
x.t("property","mylazystring");
x.t("property","accessor");
x.t("property","function");
x.t("link","directly");
x.t("access","lazyvar");
x.t("access","lazy");
x.t("access","gosu");
x.t("signature","lazyvar.make");
x.t("signature","following");
x.t("signature","returns");
x.t("new","arraylist");
x.t("new","object");
x.t("want","system");
x.t("includes","utility");
x.t("block","creates");
x.t("block","type");
x.t("block","calls");
x.t("block","access");
x.t("block","again");
x.t("block","argument");
x.t("block","first");
x.t("block","resource-intensive");
x.t("block","simply");
x.t("block","good");
x.t("block","itself");
x.t("passes","block");
x.t("lazy","variables");
x.t("lazy","variable");
x.t("messsage","gosu");
x.t("infer","proper");
x.t("proper","type");
x.t("need","explicit");
x.t("generics","syntax");
x.t("list","string");
x.t("again","cached");
x.t("again","useful");
x.t("add","additional");
x.t("simplifies","code");
x.t("guide","concurrency");
x.t("holder","gosu");
x.t("directly","page");
x.t("requires","gosu");
x.t("text_val.focus","text_val.select");
x.t("functionality","lazyvar");
x.t("libraries","access");
x.t("definition","class");
x.t("operation","retuns");
x.t("mylazystring","gosu");
x.t("mylazystring","string");
x.t("gosu","method");
x.t("gosu","execute");
x.t("gosu","calls");
x.t("gosu","includes");
x.t("gosu","block");
x.t("gosu","infer");
x.t("gosu","generics");
x.t("gosu","constructs");
x.t("gosu","reference");
x.t("gosu","runs");
x.t("gosu","run");
x.t("gosu","class");
x.t("someone","accesses");
x.t("argument","lazyvar.make");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("constructs","first");
x.t("useful","cases");
x.t("gw.util.concurrent.lazyvar.lazyvarinit","method");
x.t("retuns","string");
x.t("up","quickly");
x.t("concur","rency");
x.t("away","implementation");
x.t("concurrent","lazy");
x.t("string","parameter");
x.t("string","lazyvar.make");
x.t("string","lazy");
x.t("string","return");
x.t("string","class");
x.t("string","var");
x.t("accessor","always");
x.t("accessor","function");
x.t("addition","using");
x.t("understand","method");
x.t("error","occurred");
x.t("syntax","define");
x.t("expensive","method");
x.t("means","gosu");
x.t("first","time");
x.t("first","access");
x.t("guidewire_selectall","var");
x.t("_lazy.get","gosu");
x.t("_lazy.get","code");
x.t("function","property");
x.t("function","guidewire_selectall");
x.t("function","abstract");
x.t("function","gets");
x.t("implements","people");
x.t("resource-intensive","create");
x.t("resource-intensive","operation");
x.t("resource-intensive","value");
x.t("approach","using");
x.t("incremental","costs");
x.t("define","static");
x.t("define","type");
x.t("define","property");
x.t("explicit","gosu");
x.t("simply","returns");
x.t("reference","guide");
x.t("code","uses");
x.t("code","need");
x.t("code","accesses");
x.t("abstract","away");
x.t("return","_lazy.get");
x.t("java","concurrency");
x.t("java","native");
x.t("variable","just");
x.t("variable","thread-safe");
x.t("variable","means");
x.t("variable","define");
x.t("variable","value");
x.t("variable","following");
x.t("variable","using");
x.t("variable","object");
x.t("accesses","property");
x.t("accesses","lazy");
x.t("quickly","pay");
x.t("occurred","messsage");
x.t("concurrency","libraries");
x.t("concurrency","concurrent");
x.t("concurrency","classes");
x.t("additional","concur");
x.t("value","example");
x.t("value","calculations");
x.t("value","property");
x.t("value","code");
x.t("value","used");
x.t("value","rerun");
x.t("easier","understand");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","variable");
x.t("pay","incremental");
x.t("native","concurrency");
x.t("double-checked","locking");
x.t("runs","block");
x.t("runs","expensive");
x.t("page","error");
x.t("good","approach");
x.t("result","method");
x.t("utility","classes");
x.t("case","returns");
x.t("classes","add");
x.t("classes","gosu");
x.t("verbose","version");
x.t("cases","want");
x.t("cases","block");
x.t("itself","following");
x.t("call","method");
x.t("call","lazy");
x.t("real","world");
x.t("veryexpensivemethodthatretunsastring","//");
x.t("costs","resource-intensive");
x.t("following","example");
x.t("following","verbose");
x.t("\\-","new");
x.t("\\-","veryexpensivemethodthatretunsastring");
x.t("run","block");
x.t("used","gosu");
x.t("system","up");
x.t("using","block");
x.t("using","lazy");
x.t("using","java");
x.t("class","uses");
x.t("class","wraps");
x.t("class","definition");
x.t("class","implements");
x.t("class","myclass");
x.t("class","var");
x.t("//","lazy");
x.t("//","define");
x.t("returns","cached");
x.t("returns","new");
x.t("returns","lazy");
x.t("arraylist","create");
x.t("arraylist","string");
x.t("arraylist","parameterized");
x.t("world","cases");
x.t("load","object");
x.t("rerun","block");
x.t("myclass","//");
x.t("var","text_val=eval");
x.t("var","_lazy.get");
x.t("var","_lazy");
x.t("parameterized","string");
x.t("object","method");
x.t("object","best");
x.t("object","however");
x.t("object","gosu");
x.t("object","case");
x.t("object","real");
x.t("_lazy","lazyvar.make");
x.t("_lazy","lazyvar");
x.t("gets","value");
}
