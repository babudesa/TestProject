function FileData_Pairs(x)
{
x.t("supports","unary");
x.t("supports","semicolon");
x.t("supports","java-");
x.t("coding","style");
x.t("statements","omit");
x.t("statements","expressions");
x.t("statements","--");
x.t("statements","optional");
x.t("statements","-=");
x.t("system.out.println","typeof");
x.t("system.out.println","hello");
x.t(".length","optional");
x.t(".length","var");
x.t("example","assume");
x.t("example","int");
x.t("zero-based","index");
x.t("zero-based","object");
x.t("interfaces","blocks");
x.t("a.b","c.d");
x.t("delimited","colon");
x.t("properties","improve");
x.t("properties","type");
x.t("properties","gosu");
x.t("downcasting","typeis");
x.t("param","eterization");
x.t("construct","id");
x.t("construct","omit");
x.t("method","calls");
x.t("method","argument");
x.t("targetbranch","branch");
x.t("right","side");
x.t("rather","typeof");
x.t("rather","import");
x.t("sc","string");
x.t("sc","string.class");
x.t("simplified","initialization");
x.t("easy","initialization");
x.t("sensitivity","a.b");
x.t("console","print");
x.t("vararg","functions");
x.t("lists","gosu");
x.t("lists","format");
x.t("lists","maps");
x.t("lists","following");
x.t("i=1","20");
x.t("table","briefly");
x.t("func","tions");
x.t("static","properties");
x.t("static","methods");
x.t("static","members");
x.t("static","member");
x.t("//java","compatability");
x.t("preserve","type");
x.t("create","additional");
x.t("required","static");
x.t("required","change");
x.t("required","loop");
x.t("required","declare");
x.t("required","gosu");
x.t("required","omit");
x.t("required","defining");
x.t("required","control");
x.t("required","annotations");
x.t("required","code");
x.t("required","variable");
x.t("required","cases");
x.t("required","call");
x.t("variables","function");
x.t("parts","//");
x.t("arguments","declarations");
x.t("arguments","arrays");
x.t("arguments","instead");
x.t("arguments","calling");
x.t("comparisons","type");
x.t("abc","construct");
x.t("abc","public");
x.t("abc","string");
x.t("abc","//");
x.t("regular","function");
x.t("prettylength","string");
x.t("improve","functionality");
x.t("converting","existing");
x.t("null-safe","property");
x.t("unary","operator");
x.t("preserves","type");
x.t("preserves","parameterization");
x.t("user","targetbranch");
x.t("user","branch");
x.t("field","declarations");
x.t("semicolons","code");
x.t("uses","rather");
x.t("uses","com.abc.myclass");
x.t("uses","java-based");
x.t("uses","named");
x.t("uses","java.lang.system");
x.t("declared","type");
x.t("skipped","no");
x.t("ize","compare");
x.t("strs","[1]");
x.t("strs","ab");
x.t("strs","[0]");
x.t("text_val.select","link");
x.t("tions","apis");
x.t("tions","called");
x.t("tions","act");
x.t("support","arguments");
x.t("support","array-style");
x.t("support","java-style");
x.t("support","initial");
x.t("support","special");
x.t("support","xsd");
x.t("support","consuming");
x.t("variance","different");
x.t("statement","example");
x.t("introduction","notable");
x.t("change","port");
x.t("change","general");
x.t("type","static");
x.t("type","erasure");
x.t("type","however");
x.t("type","list");
x.t("type","need");
x.t("type","directly");
x.t("type","name");
x.t("type","gosu");
x.t("type","comparison");
x.t("type","automatic");
x.t("type","subtypes");
x.t("type","match");
x.t("type","switch");
x.t("type","safety");
x.t("type","variable");
x.t("type","declaration");
x.t("type","parameterization");
x.t("type","internally");
x.t("type","information");
x.t("type","inference");
x.t("type","java.lang.math");
x.t("type","system");
x.t("type","class");
x.t("type","names");
x.t("type","even");
x.t("best","typeis");
x.t("close","parenthesis");
x.t("times","loop");
x.t("schema.parse","(xmltext)");
x.t("colon","true");
x.t("colon","coerce");
x.t("public","abc");
x.t("public","property");
x.t("public","int");
x.t("public","string");
x.t("public","function");
x.t("public","format");
x.t("explicitly","declare");
x.t("0.5","note");
x.t("0.5","math.cos");
x.t("sl","(string)");
x.t("sl","x.length");
x.t("sl","typeis");
x.t("sl","instanceof");
x.t("time","type");
x.t("time","list");
x.t("time","generally");
x.t("erasure","gosu");
x.t("first-class","symbols");
x.t("calls","calling");
x.t("compiles","runs");
x.t("multiple","statements");
x.t("bb","required");
x.t("however","duplicate");
x.t("however","direct");
x.t("however","native");
x.t("however","call");
x.t("however","operator");
x.t("form","statements");
x.t("extapi.mymethod","true");
x.t("total","optional");
x.t("listed","optional");
x.t("property","prettylength");
x.t("property","type");
x.t("property","declarations");
x.t("property","accessor");
x.t("apis","however");
x.t("apis","improves");
x.t("apis","arrays");
x.t("apis","java");
x.t("automatically","downcasts");
x.t("removes","information");
x.t("checks","type");
x.t("differences","gosu");
x.t("link","directly");
x.t("new","apis");
x.t("new","methods");
x.t("new","auto");
x.t("new","feature");
x.t("new","code");
x.t("new","arraylist");
x.t("new","myclass");
x.t("element","case");
x.t("english","versions");
x.t("access","member");
x.t("speaking","feature");
x.t("loop","skipped");
x.t("loop","syntax");
x.t("loop","variable");
x.t("loop","integer");
x.t("branch","required");
x.t("branch","@knownbreak");
x.t("objects","especially");
x.t("block","declarations");
x.t("porting","gosu");
x.t("downcast","optional");
x.t("hierarchies","keyword");
x.t("messsage","gosu");
x.t("list","type");
x.t("list","string");
x.t("list","array");
x.t("list","note");
x.t("list","var");
x.t("indicates","variable");
x.t("initialization","apis");
x.t("initialization","syntax");
x.t("initialization","var");
x.t("need","fully");
x.t("generics","support");
x.t("generics","gosu");
x.t("generics","contrast");
x.t("one-method","interfaces");
x.t("insen","sitive");
x.t("assignment","statements");
x.t("assignment","//");
x.t("id","string");
x.t("id","class");
x.t("add","index");
x.t("add","additional");
x.t("indexvar","close");
x.t("improves","upon");
x.t("expansion","n/a");
x.t("expansion","operator");
x.t("guide","gosu");
x.t("check","earlier");
x.t("check","object");
x.t("house.walls.windows","required");
x.t("house.walls.windows","var");
x.t("assume","works");
x.t("assume","myclass");
x.t("type-safe","parameters");
x.t("simple","array-like");
x.t("recommended","a.b");
x.t("remember","gosu");
x.t("duplicate","using");
x.t("features","gosu");
x.t("java.lang.string","public");
x.t("collections","types");
x.t("collections","enhancements");
x.t("collections","//");
x.t("directly","typeof");
x.t("directly","page");
x.t("summarizes","notable");
x.t("true","parameters");
x.t("true","optional");
x.t("declare","type");
x.t("declare","variable");
x.t("declare","specific");
x.t("declare","class");
x.t("iterable","optionally");
x.t("iterable","object");
x.t("requires","argument");
x.t("sup","port");
x.t("text_val.focus","text_val.select");
x.t("faster","write");
x.t("path","null");
x.t("addnumbers","int");
x.t("coercions","keyword");
x.t("symbols","type");
x.t("name","class");
x.t("no","exception");
x.t("functionality","java");
x.t("[1]","//");
x.t("gosu","supports");
x.t("gosu","required");
x.t("gosu","preserves");
x.t("gosu","uses");
x.t("gosu","support");
x.t("gosu","introduction");
x.t("gosu","type");
x.t("gosu","compiles");
x.t("gosu","however");
x.t("gosu","listed");
x.t("gosu","automatically");
x.t("gosu","generics");
x.t("gosu","collections");
x.t("gosu","requires");
x.t("gosu","qualify");
x.t("gosu","generic");
x.t("gosu","array");
x.t("gosu","blocks");
x.t("gosu","syntax");
x.t("gosu","different");
x.t("gosu","templates");
x.t("gosu","language");
x.t("gosu","rightmost");
x.t("gosu","types");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","case-sensitive");
x.t("gosu","code");
x.t("gosu","adds");
x.t("gosu","java");
x.t("gosu","n/a");
x.t("gosu","reified");
x.t("gosu","optional");
x.t("gosu","enhancements");
x.t("gosu","optionally");
x.t("gosu","style");
x.t("gosu","class");
x.t("exactly","match");
x.t("initialize","null");
x.t("iterate","across");
x.t("{1,2,3}","int");
x.t("{1,2,3}","item");
x.t("@knownbreak","user");
x.t("@knownbreak","targetuser");
x.t("avoid","//");
x.t("argument","lists");
x.t("argument","func");
x.t("argument","functions");
x.t("argument","convention");
x.t("qualify","type");
x.t("direct","comparisons");
x.t("comparison","rather");
x.t("iterating","loop");
x.t("iterating","iterable");
x.t("iterating","across");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","operators");
x.t("parameters","gosu");
x.t("parameters","return");
x.t("useful","gosu");
x.t("useful","shortcut");
x.t("useful","calling");
x.t("methods","properties");
x.t("methods","static");
x.t("methods","public");
x.t("(string)",".length");
x.t("x.length","//");
x.t("shortcut","implementing");
x.t("declarations","a.b");
x.t("declarations","multiple");
x.t("declarations","indicates");
x.t("declarations","keyword");
x.t("declarations","capitalizations");
x.t("declarations","var");
x.t("omit","semicolons");
x.t("omit","type");
x.t("omit","casting");
x.t("omit","keyword");
x.t("omit","explicit");
x.t("omit","exception");
x.t("standard","coding");
x.t("pi","0.5");
x.t("generic","types");
x.t("increment","syntax");
x.t("arrays","lists");
x.t("arrays","gosu");
x.t("typeis","type");
x.t("typeis","string");
x.t("typeis","typeof");
x.t("typeis","similar");
x.t("enhancement","strlenenhancement");
x.t("web","services");
x.t("write","gosu");
x.t("write","functions");
x.t("natural","english");
x.t("natural","assume");
x.t("accessor","paths");
x.t("int","i=1");
x.t("int","//java");
x.t("int","required");
x.t("int","sl");
x.t("int","addnumbers");
x.t("int","{1,2,3}");
x.t("int","string");
x.t("int","(int)");
x.t("int","numbers");
x.t("int","item");
x.t("string","system.out.println");
x.t("string","required");
x.t("string","public");
x.t("string","sl");
x.t("string","id");
x.t("string","int");
x.t("string","templates");
x.t("string","format");
x.t("string","return");
x.t("string","mylist");
x.t("string","java");
x.t("string","optional");
x.t("string","args");
x.t("string","print");
x.t("string","analogous");
x.t("string","myobj");
x.t("regarding","calling");
x.t("array","declared");
x.t("array","initialization");
x.t("array","expansion");
x.t("array","gosu");
x.t("allow","add");
x.t("sets","gosu");
x.t("permits","java");
x.t("earlier","parts");
x.t("rely","gosu");
x.t("rely","throwing");
x.t("prints","list");
x.t("prints","myclass");
x.t("defining","classes");
x.t("flow","loop");
x.t("in-line","func");
x.t("functions","variables");
x.t("functions","gosu");
x.t("functions","design");
x.t("functions","called");
x.t("functions","pass");
x.t("auto","type");
x.t("auto","new");
x.t("auto","explicit");
x.t("auto","vehicle");
x.t("math.pi","0.5");
x.t("array-style","variance");
x.t("error","occurred");
x.t("error","arraylist");
x.t("error","even");
x.t("supported","com");
x.t("downcasts","specific");
x.t("contrast","java");
x.t("blocks","useful");
x.t("blocks","in-line");
x.t("blocks","blocks");
x.t("blocks","concise");
x.t("blocks","shortcuts");
x.t("syntax","preserves");
x.t("syntax","gosu");
x.t("syntax","iterating");
x.t("syntax","useful");
x.t("syntax","feature");
x.t("syntax","words");
x.t("syntax","compatability");
x.t("syntax","java");
x.t("syntax","similar");
x.t("syntax","ting");
x.t("operators","optionally");
x.t("members","static");
x.t("members","type");
x.t("period","character");
x.t("automatic","downcasting");
x.t("especially","useful");
x.t("feature","new");
x.t("feature","gosu");
x.t("feature","called");
x.t("feature","difference");
x.t("sitive","gosu");
x.t("affects","type");
x.t("appears","period");
x.t("concise","flexible");
x.t("guidewire_selectall","var");
x.t("briefly","summarizes");
x.t("side","affects");
x.t("number","arguments");
x.t("number","times");
x.t("number","optional");
x.t("others","variable");
x.t("mycustom","new");
x.t("mycustom","prints");
x.t("com.abc.myclass","required");
x.t("com.abc.myclass","uses");
x.t("constructors","class");
x.t("control","flow");
x.t("function","method");
x.t("function","list");
x.t("function","addnumbers");
x.t("function","gosu");
x.t("function","declarations");
x.t("function","guidewire_selectall");
x.t("function","compatibility");
x.t("design","public");
x.t("design","apis");
x.t("implements","iterable");
x.t("annotations","gosu");
x.t("length","this.length");
x.t("java-based","collec");
x.t("collec","tions");
x.t("particular","attention");
x.t("safe","//");
x.t("words","gosu");
x.t("expressions","supported");
x.t("com","pound");
x.t("subtypes","using");
x.t("subtypes","generally");
x.t("different","iterating");
x.t("different","generic");
x.t("templates","type-safe");
x.t("templates","n/a");
x.t("templates","file-based");
x.t("language","element");
x.t("language","itself");
x.t("capitalization","match");
x.t("instead","design");
x.t("row","regarding");
x.t("con","structors");
x.t("java-style","constructors");
x.t("index","zero-based");
x.t("index","indexvar");
x.t("index","gosu");
x.t("index","variable");
x.t("changes","converting");
x.t("rightmost","column");
x.t("match","field");
x.t("match","property");
x.t("match","subtypes");
x.t("match","code");
x.t("match","declaration");
x.t("keyword","uses");
x.t("keyword","function");
x.t("keyword","typically");
x.t("keyword","optionally");
x.t("types","preserve");
x.t("types","public");
x.t("types","remember");
x.t("types","gosu");
x.t("types","methods");
x.t("types","code");
x.t("types","java");
x.t("types","main");
x.t("types","lack");
x.t("types","defined");
x.t("types","strlist.each");
x.t("types","enhancements");
x.t("types","package");
x.t("coerce","expression");
x.t("format","regular");
x.t("format","string");
x.t("format","aa");
x.t("format","object");
x.t("casting","specific");
x.t("myobj.class","typeof");
x.t("implementing","one-method");
x.t("xml","support");
x.t("xml","n/a");
x.t("explicit","type");
x.t("explicit","var");
x.t("calling","web");
x.t("calling","types");
x.t("calling","java");
x.t("calling","convention");
x.t("aa","bb");
x.t("compatability","int");
x.t("compatability","style");
x.t("switch","statements");
x.t("works","java");
x.t("works","var");
x.t("initial","ize");
x.t("(str)","optional");
x.t("reference","type");
x.t("reference","guide");
x.t("code","static");
x.t("code","uses");
x.t("code","checks");
x.t("code","new");
x.t("code","porting");
x.t("code","gosu");
x.t("code","capitalization");
x.t("code","match");
x.t("code","works");
x.t("case-sensitive","code");
x.t("capitalizations","work");
x.t("ab","abc");
x.t("return","length");
x.t("return","types");
x.t("vehicle","required");
x.t("fully","qualify");
x.t("fully","qualified");
x.t("safety","simple");
x.t("adds","new");
x.t("cos","pi");
x.t("gosu-specific","features");
x.t("java","type");
x.t("java","however");
x.t("java","removes");
x.t("java","gosu");
x.t("java","@knownbreak");
x.t("java","int");
x.t("java","functions");
x.t("java","syntax");
x.t("java","function");
x.t("java","particular");
x.t("java","types");
x.t("java","code");
x.t("java","variable");
x.t("java","instanceof");
x.t("java","compilation");
x.t("java","classes");
x.t("java","work");
x.t("java","following");
x.t("java","style");
x.t("java","class");
x.t("java","//");
x.t("java","notable");
x.t("variable","delimited");
x.t("variable","arguments");
x.t("variable","form");
x.t("variable","assignment");
x.t("variable","argument");
x.t("variable","declarations");
x.t("variable","number");
x.t("variable","index");
x.t("variable","contains");
x.t("mylist","new");
x.t("mylist","prints");
x.t("mylist","mylist");
x.t("mylist","arraylist");
x.t("20","//");
x.t("n/a","extapi.mymethod");
x.t("n/a","enhancement");
x.t("n/a","number");
x.t("n/a","names");
x.t("n/a","var");
x.t("upon","simplified");
x.t("occurred","messsage");
x.t("existing","java");
x.t("null","loop");
x.t("null","house.walls.windows");
x.t("null","avoid");
x.t("null","safe");
x.t("null","house.walls");
x.t("null","pointer");
x.t("null","//");
x.t("null","arraylist");
x.t("windows","null");
x.t("typeof","however");
x.t("typeof","mycustom");
x.t("typeof","myobj.class");
x.t("typeof","mylist");
x.t("typeof","myobj");
x.t("typeof","object");
x.t("nice","int");
x.t("nice","var");
x.t("shortcuts","anonymous");
x.t("house","null");
x.t("qualified","cos");
x.t("natively","gosu");
x.t("instantiated","gosu");
x.t("similar","java");
x.t("similar","native");
x.t("main","type");
x.t("structors","write");
x.t("additional","methods");
x.t("additional","index");
x.t("named","arguments");
x.t("named","argument");
x.t("array-like","strs");
x.t("array-like","syntax");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("attention","changes");
x.t("declaration","explicitly");
x.t("declaration","language");
x.t("compatibility","collections");
x.t("compatibility","java");
x.t("throwing","null");
x.t("--","however");
x.t("specific","type");
x.t("specific","types");
x.t("instanceof","string");
x.t("instanceof","operator");
x.t("exception","block");
x.t("exception","java");
x.t("exception","house");
x.t("parameterization","run");
x.t("lack","param");
x.t("native","method");
x.t("native","support");
x.t("native","gosu");
x.t("native","string");
x.t("native","xml");
x.t("compilation","error");
x.t("import","com.abc.myclass");
x.t("import","import");
x.t("convention","gosu-specific");
x.t("convention","java");
x.t("says","required");
x.t("runs","faster");
x.t("hello","uses");
x.t("hello","print");
x.t("hello","world");
x.t("expression","right");
x.t("reified","generics");
x.t("services","gosu");
x.t("services","syntax");
x.t("[0]","var");
x.t("page","error");
x.t("semicolon","standard");
x.t("java.lang.system","system.out.println");
x.t("house.walls","null");
x.t("str","print");
x.t("optional","null-safe");
x.t("optional","list");
x.t("optional","check");
x.t("optional","gosu");
x.t("optional","boolean");
x.t("optional","omit");
x.t("optional","feature");
x.t("optional","types");
x.t("optional","reference");
x.t("optional","native");
x.t("optional","typical");
x.t("optional","print");
x.t("optional","item");
x.t("internally","java");
x.t("information","native");
x.t("information","called");
x.t("information","following");
x.t("information","including");
x.t("eterization","even");
x.t("typical","consuming");
x.t("targetuser","user");
x.t("ting","setting");
x.t("inference","omit");
x.t("inference","auto");
x.t("inference","coercion");
x.t("inference","var");
x.t("defined","natively");
x.t("string.class","var");
x.t("flexible","code");
x.t("case","sensitivity");
x.t("case","insen");
x.t("values","lists");
x.t("strlist.each","str");
x.t("port","gosu");
x.t("port","existing");
x.t("c.d","exactly");
x.t("c.d","match");
x.t("c.d","optional");
x.t("print","console");
x.t("print","function");
x.t("print","(str)");
x.t("print","typeof");
x.t("print","hello");
x.t("called","construct");
x.t("called","vararg");
x.t("called","type");
x.t("called","reified");
x.t("args","public");
x.t("args","var");
x.t("character","access");
x.t("enhancements","gosu");
x.t("enhancements","allow");
x.t("enhancements","n/a");
x.t("maps","sets");
x.t("column","says");
x.t("note","need");
x.t("note","string");
x.t("java.lang.math","required");
x.t("classes","declare");
x.t("classes","n/a");
x.t("classes","enhancements");
x.t("integer","number");
x.t("verbose","java");
x.t("verbose","style");
x.t("optionally","add");
x.t("optionally","gosu");
x.t("optionally","natural");
x.t("optionally","permits");
x.t("optionally","call");
x.t("itself","case");
x.t("work","recommended");
x.t("work","gosu");
x.t("cases","rely");
x.t("typically","rely");
x.t("val","strs");
x.t("call","java");
x.t("call","variable");
x.t("call","verbose");
x.t("(int)","2.1");
x.t("package","hierarchies");
x.t("numbers","{1,2,3}");
x.t("numbers","int");
x.t("numbers","//");
x.t("file-based","templates");
x.t("following","example");
x.t("following","table");
x.t("following","row");
x.t("either","optional");
x.t("style","initialization");
x.t("style","omit");
x.t("style","compatibility");
x.t("style","coercion");
x.t("style","var");
x.t("pointer","exception");
x.t("pointer","exceptions");
x.t("special","java");
x.t("special","named");
x.t("system","coercions");
x.t("2.1","int");
x.t("2.1","optional");
x.t("2.1","//");
x.t("run","time");
x.t("analogous","gosu");
x.t("anonymous","classes");
x.t("general","differences");
x.t("class","sc");
x.t("class","abc");
x.t("class","property");
x.t("class","con");
x.t("class","java.lang.system");
x.t("class","var");
x.t("symbolic","versions");
x.t("//","easy");
x.t("//","required");
x.t("//","new");
x.t("//","downcast");
x.t("//","check");
x.t("//","collections");
x.t("//","path");
x.t("//","initialize");
x.t("//","gosu");
x.t("//","null");
x.t("//","array-like");
x.t("//","verbose");
x.t("//","//");
x.t("//","var");
x.t("//","item");
x.t("coercion","syntax");
x.t("coercion","var");
x.t("pound","assignment");
x.t("using","statement");
x.t("using","typeis");
x.t("strlenenhancement","java.lang.string");
x.t("setting","values");
x.t("arraylist","string");
x.t("arraylist","windows");
x.t("arraylist","object");
x.t("pass","array");
x.t("across","list");
x.t("across","null");
x.t("compare","increment");
x.t("xsd","sup");
x.t("(xmltext)","optional");
x.t("world","optional");
x.t("paths","property");
x.t("paths","null");
x.t("operator","list");
x.t("operator","assignment");
x.t("operator","variable");
x.t("operator","myobj");
x.t("member","type");
x.t("member","appears");
x.t("names",".length");
x.t("names","first-class");
x.t("names","java");
x.t("myclass","gosu");
x.t("myclass","string");
x.t("this.length","optional");
x.t("act","objects");
x.t("notable","differences");
x.t("var","sc");
x.t("var","strs");
x.t("var","schema.parse");
x.t("var","sl");
x.t("var","total");
x.t("var","new");
x.t("var","house.walls.windows");
x.t("var","text_val=eval");
x.t("var","auto");
x.t("var","mycustom");
x.t("var","keyword");
x.t("var","format");
x.t("var","mylist");
x.t("var","20");
x.t("var","val");
x.t("var","(int)");
x.t("var","numbers");
x.t("var","2.1");
x.t("var","object");
x.t("versions","java");
x.t("versions","symbolic");
x.t("math.cos","math.pi");
x.t("myobj","typeis");
x.t("myobj","instanceof");
x.t("myobj","optional");
x.t("including","parameterization");
x.t("exceptions","functions");
x.t("-=","others");
x.t("even","natural");
x.t("even","java");
x.t("even","instantiated");
x.t("parenthesis","create");
x.t("item","20");
x.t("item","numbers");
x.t("item","either");
x.t("difference","java");
x.t("object","iterate");
x.t("object","implements");
x.t("object","mylist");
x.t("object","nice");
x.t("object","specific");
x.t("object","args");
x.t("java-","style");
x.t("generally","best");
x.t("generally","speaking");
x.t("consuming","web");
x.t("consuming","existing");
x.t("contains","zero-based");
}
