function FileData_Pairs(x)
{
x.t("example","create");
x.t("example","various");
x.t("example","enclosing");
x.t("example","uses");
x.t("example","want");
x.t("example","link");
x.t("example","name");
x.t("example","enumeration");
x.t("example","trivial");
x.t("example","search");
x.t("example","write");
x.t("example","attribute");
x.t("example","earlier");
x.t("example","suppose");
x.t("example","two");
x.t("example","xsdgday");
x.t("example","following");
x.t("example","xsd");
x.t("example","var");
x.t("looks","local");
x.t("root","example");
x.t("root","xmlns:xsi=");
x.t("root","xsd:complextype");
x.t("root","access");
x.t("root","element");
x.t("root","test1");
x.t("root","node");
x.t("root","var");
x.t("complex","type");
x.t("mobilephone_elem","important");
x.t("email","element");
x.t("xsd:gmonthday","gw.xml.xsd.types.xsdgyear");
x.t("xsd:gmonthday","gw.xml.xsd.types.xsdgmonthday");
x.t("supports","node");
x.t("supports","xsd");
x.t("uniquely","identify");
x.t("properties","homephone");
x.t("properties","access");
x.t("properties","element");
x.t("properties","choice");
x.t("properties","normally");
x.t("properties","property2");
x.t("properties","directly");
x.t("properties","strongly-typed");
x.t("properties","shortcut");
x.t("properties","find");
x.t("properties","subobjects");
x.t("properties","thus");
x.t("properties","value");
x.t("properties","generated");
x.t("properties","homephone_elem");
x.t("properties","treat");
x.t("properties","enhancements");
x.t("properties","print");
x.t("properties","following");
x.t("properties","using");
x.t("properties","attach");
x.t("properties","subelements");
x.t("provide","xsd");
x.t("safer","treating");
x.t("exist","xsd:datetime");
x.t("exist","need");
x.t("exist","allows");
x.t("available","generated");
x.t("method","root");
x.t("method","method");
x.t("method","asutfstring");
x.t("method","signature");
x.t("method","indicates");
x.t("method","parse");
x.t("method","gosu");
x.t("method","bytes");
x.t("method","transforms");
x.t("method","top-level");
x.t("method","node");
x.t("method","simply");
x.t("method","return");
x.t("method","date");
x.t("method","call");
x.t("method","specify");
x.t("possible","gosu");
x.t("possible","enumeration");
x.t("possible","child");
x.t("prepends","underscore");
x.t("normalized","name");
x.t("xsd:list","always");
x.t("xsd:unsignedint","java.lang.integer");
x.t("qnames","xml");
x.t("qnames","represent");
x.t("parameter","prefix");
x.t("parameter","uri");
x.t("parameter","local");
x.t("dates","xsd:datetime");
x.t("construct","java.lang.string");
x.t("construct","java.util.calendar");
x.t("date.tocalendar","tz");
x.t("/xsd:restriction","/xsd:simpletype");
x.t("ref=","homephone");
x.t("ref=","test1");
x.t("ref=","test2");
x.t("ref=","mobilephone");
x.t("ref=","workphone");
x.t("ref=","lastverifiedby");
x.t("ref=","lastverifieddate");
x.t("ref=","category");
x.t("defines","type");
x.t("defines","element");
x.t("defines","gosu");
x.t("defines","enumeration");
x.t("defines","package");
x.t("asutfstring","method");
x.t("restriction","defines");
x.t("restriction","color");
x.t("just","element");
x.t("just","generate");
x.t("converted","underscore");
x.t("rather","enclosed");
x.t("rather","separate");
x.t("rather","setting");
x.t("number=","test2");
x.t("1234","value");
x.t("1234","//");
x.t("(a.homeemail_elem.value)","gosu");
x.t("xsd:entity","java.lang.string");
x.t("xsd:idrefs","java.util.list");
x.t("xsd:datetime","related");
x.t("xsd:datetime","java.util.date");
x.t("xsd:datetime","type");
x.t("xsd:datetime","gw.xml.xsd.types.xsddatetime");
x.t("xsd:datetime","gw.xml.xsd.types.xsdduration");
x.t("xsd:datetime","javax.xml.namespace.qname");
x.t("xsd:datetime","without");
x.t("xsd:datetime","object");
x.t("right","column");
x.t("serialization","time");
x.t("serialization","needed");
x.t("gw.mytest.category","//");
x.t("xsd:integer","xsd:attribute");
x.t("xsd:integer","java.net.uri");
x.t("xsd:integer","java.math.biginteger");
x.t("files","file");
x.t("every","complextype");
x.t("every","class");
x.t("every","simpletype");
x.t("within","choice");
x.t("within","document");
x.t("within","gosu");
x.t("within","xml");
x.t("within","configuration");
x.t("within","specific");
x.t("within","qname");
x.t("(myxmlstring)","once");
x.t("implement","ixmlnode");
x.t("preferred","method");
x.t("clear","list");
x.t("homephone","extension=");
x.t("homephone","xsd:element");
x.t("homephone","workphone");
x.t("homephone","type=");
x.t("homephone","homephone_elem");
x.t("lists","type");
x.t("lists","conversions");
x.t("reserialize","xml");
x.t("cast","idref");
x.t("cast","id");
x.t("cast","operation");
x.t("cast","category");
x.t("abstractxsddatetype","construct");
x.t("tree","related");
x.t("tree","simpletest");
x.t("tree","essentially");
x.t("tree","complete");
x.t("tree","enumerated");
x.t("tree","complicated");
x.t("tree","xml");
x.t("tree","untyped");
x.t("create","new");
x.t("create","element");
x.t("create","list");
x.t("create","file");
x.t("create","gosu");
x.t("create","shortcut");
x.t("create","in-line");
x.t("create","top-level");
x.t("create","directory");
x.t("create","xml");
x.t("create","node");
x.t("create","additional");
x.t("create","javax.xml.namespaces.qname");
x.t("create","children");
x.t("static","properties");
x.t("static","parse");
x.t("contact","guidewire");
x.t("\\x","x.id");
x.t("\\x","x.elementname");
x.t("simpletest.test2s.add","new");
x.t("simpletest.test2s.add","(test2)");
x.t("table","lists");
x.t("alternate","method");
x.t("http://www.w3.org/2001/xmlschema-instance","xsi:nonamespaceschemalocation=");
x.t("green","/xsd:restriction");
x.t("related","dates");
x.t("related","objects");
x.t("related","unicode");
x.t("related","types");
x.t("related","discussion");
x.t("source","validate");
x.t("source","code");
x.t("once","tree");
x.t("once","choice\u2019s");
x.t("once","text");
x.t("once","gosu");
x.t("once","appears");
x.t("once","reference");
x.t("enum","instance");
x.t("enum","class");
x.t("instance","following");
x.t("always","possible");
x.t("always","converts");
x.t("always","present");
x.t("always","returns");
x.t("impose","restrictions");
x.t("various","property");
x.t("home","choice");
x.t("home","phone");
x.t("gw.xml.ireadonlyxmlnode","xsd:idrefs");
x.t("gw.xml.ireadonlyxmlnode","xsd:ncname");
x.t("xsd:byte","java.lang.byte");
x.t("xsd:byte","byte");
x.t("xsd:byte","java.lang.double");
x.t("xsd:language","java.lang.string");
x.t("xsd:nonpositiveinteger","java.math.biginteger");
x.t("xmlns:xsi=","http://www.w3.org/2001/xmlschema-instance");
x.t("name=","root");
x.t("name=","homephone");
x.t("name=","simpletest");
x.t("name=","phonenumber");
x.t("name=","color");
x.t("name=","id");
x.t("name=","test1");
x.t("name=","test2");
x.t("name=","mobilephone");
x.t("name=","test3");
x.t("name=","test4");
x.t("name=","final");
x.t("name=","workphone");
x.t("name=","testtype");
x.t("name=","categoryid");
x.t("name=","number");
x.t("name=","itemname");
x.t("name=","lastverifiedby");
x.t("name=","categoryref");
x.t("name=","lastverifieddate");
x.t("name=","categoryname");
x.t("name=","category");
x.t("name=","item");
x.t("simpletest","xsd:complextype");
x.t("simpletest","new");
x.t("simpletest","id=");
x.t("node\u2019s","text");
x.t("enumerations","gosu");
x.t("subpackage","suffix");
x.t("enclosing","type");
x.t("enclosing","element");
x.t("limits","xsd:list");
x.t("completion","features");
x.t("gw.xml.xmlnode","//");
x.t("ability","xml");
x.t("xsd:name","java.lang.string");
x.t("xsd:unsignedshort","java.lang.short");
x.t("bolded","item");
x.t("trees","using");
x.t("discussed","collection-like");
x.t("discussed","manipulating");
x.t("version=","1.0");
x.t("xsd:complextype","name=");
x.t("xsd:complextype","xsd:sequence");
x.t("xsd:complextype","xsd:attribute");
x.t("creates","property");
x.t("creates","new");
x.t("creates","choice");
x.t("creates","subobjects");
x.t("creates","intermediate");
x.t("creates","tentative");
x.t("creates","two");
x.t("questions","gosu");
x.t("topic","however");
x.t("topic","var");
x.t("choice\u2019s","id");
x.t("choice\u2019s","child");
x.t("current","choice");
x.t("current","selection");
x.t("double","xsd:double");
x.t("refers","xsd-based");
x.t("helps","example");
x.t("sequences","appear");
x.t("uses","qnames");
x.t("uses","just");
x.t("uses","gw.xml.xmlnode");
x.t("uses","id");
x.t("uses","name");
x.t("uses","java.io.file");
x.t("uses","xsd");
x.t("until","name");
x.t("until","node");
x.t("until","object");
x.t("line","previous");
x.t("line","//");
x.t("guaranteed","assigned");
x.t("handled","specially");
x.t("gw.xml.xsd.types.xsddate","xsd:datetime");
x.t("gw.xml.xsd.types.xsddate","xsd:date");
x.t("xsd:decimal","java.math.biginteger");
x.t("xsd:decimal","java.math.bigdecimal");
x.t("generating","future");
x.t("cally-assigned","node");
x.t("text_val.select","link");
x.t("errors","due");
x.t("errors","var");
x.t("tell","gosu");
x.t("interface","ixmlnodewithid");
x.t("interface","gw.xml");
x.t("interface","untyped");
x.t("support","features");
x.t("support","loading");
x.t("support","qualified");
x.t("essentially","untyped");
x.t("node.findfirst","\\x");
x.t("working","xml");
x.t("statement","produces");
x.t("necessary","create");
x.t("extension","x12345");
x.t("ixmlnodewithid","element");
x.t("ixmlnodewithid","idref");
x.t("ixmlnodewithid","run");
x.t("http://www.w3.org/2001/xmlschema","xsd:element");
x.t("http://www.w3.org/2001/xmlschema","xsd:simpletype");
x.t("/xsd:complextype","/xsd:element");
x.t("/xsd:complextype","xsd:element");
x.t("complextype","property");
x.t("complextype","simpletype");
x.t("type","right");
x.t("type","create");
x.t("type","ixmlnodewithid");
x.t("type","type");
x.t("type","myaddress");
x.t("type","however");
x.t("type","guidewire");
x.t("type","convert");
x.t("type","element");
x.t("type","getting");
x.t("type","want");
x.t("type","choice");
x.t("type","simple");
x.t("type","name");
x.t("type","definition");
x.t("type","gosu");
x.t("type","conversion");
x.t("type","custom");
x.t("type","boolean");
x.t("type","find");
x.t("type","contrast");
x.t("type","representation");
x.t("type","conversions");
x.t("type","define");
x.t("type","xsd:idref");
x.t("type","words");
x.t("type","node");
x.t("type","loader");
x.t("type","linked-to");
x.t("type","xsd:id");
x.t("type","enums");
x.t("type","named");
x.t("type","root.choice");
x.t("type","xsdstring");
x.t("type","xsd:entities");
x.t("type","information");
x.t("type","structure");
x.t("type","specification");
x.t("type","classes");
x.t("type","anonymous");
x.t("type","corresponding");
x.t("type","class");
x.t("type","xsd");
x.t("type","definitions");
x.t("type","generates");
x.t("type","gets");
x.t("type","object");
x.t("type","gw.xml.xsd.types.xsdgday");
x.t("times","appears");
x.t("type\u2019s","name");
x.t("basic","idea");
x.t("xsdint","gosu");
x.t("extension=","x12345");
x.t("666","1234");
x.t("java.util.date","xsd:datetime");
x.t("change","rely");
x.t("populate","idref");
x.t("infinite","recursion");
x.t("usual","node");
x.t("/my_xml_files/","mytest.xml");
x.t("hierarchy","defines");
x.t("hierarchy","test");
x.t("hierarchy","next");
x.t("hierarchy","configuration");
x.t("hierarchy","location");
x.t("hierarchy","package");
x.t("fairly","simple");
x.t("getter","methods");
x.t("orders","correctly");
x.t("time","populate");
x.t("time","element");
x.t("time","want");
x.t("time","gosu");
x.t("time","zone");
x.t("phonenumber","homephone");
x.t("phonenumber","xsd:complextype");
x.t("phonenumber","choice");
x.t("555","1212");
x.t("non-null","//");
x.t("xsd:qname","property");
x.t("xsd:qname","long");
x.t("xsd:qname","javax.xml.namespace.qname");
x.t("xsd:qname","xsd");
x.t("xsd:hexbinary","byte");
x.t("left","column");
x.t("explicitly","gosu");
x.t("xmlns:xsd=","http://www.w3.org/2001/xmlschema");
x.t("extend","ixmlnode");
x.t("multiple","times");
x.t("multiple","element");
x.t("myaddress","element");
x.t("however","gosu");
x.t("however","strongly");
x.t("however","importing");
x.t("however","note");
x.t("however","typically");
x.t("parsing","(importing)");
x.t("parsing","specific");
x.t("coerces","operations");
x.t("java.lang.byte","xsd:unsignedint");
x.t("java.lang.byte","xsd:byte");
x.t("java.lang.byte","xsd:date");
x.t("releases","autocreation");
x.t("identify","element");
x.t("automati","cally-assigned");
x.t("formats","specified");
x.t("structured","xml");
x.t("require","xsd");
x.t("put","xsds");
x.t("put","xsd");
x.t("property","example");
x.t("property","type");
x.t("property","property");
x.t("property","access");
x.t("property","link");
x.t("property","idref");
x.t("property","choice");
x.t("property","simpletest.test1");
x.t("property","id");
x.t("property","name");
x.t("property","gosu");
x.t("property","accessors");
x.t("property","sets");
x.t("property","attribute");
x.t("property","a.choice.homephone_elem.value");
x.t("property","lastly");
x.t("property","parent");
x.t("property","accessing");
x.t("property","instead");
x.t("property","node");
x.t("property","simply");
x.t("property","value");
x.t("property","_elem");
x.t("property","appropriate");
x.t("property","subobject");
x.t("property","links");
x.t("property","using");
x.t("property","returns");
x.t("property","xmlnode");
x.t("property","names");
x.t("property","category");
x.t("property","item");
x.t("text","value");
x.t("text","values");
x.t("text","child");
x.t("limitations","just");
x.t("limitations","xsd");
x.t("guidewire","professional");
x.t("guidewire","xml");
x.t("guidewire","typekey");
x.t("guidewire","messaging");
x.t("validates","xml");
x.t("convert","tree");
x.t("convert","back");
x.t("convert","gosu");
x.t("no-argument","constructor");
x.t("test2.id","test");
x.t("requirement","value");
x.t("a.choice.workphone","415");
x.t("removes","previous");
x.t("automatically","serialization");
x.t("automatically","creates");
x.t("automatically","declares");
x.t("automatically","implements");
x.t("automatically","guess");
x.t("automatically","assigns");
x.t("automatically","generates");
x.t("needed","case");
x.t("original","id");
x.t("back","calendar");
x.t("default","time");
x.t("link","element");
x.t("link","directly");
x.t("link","category");
x.t("objects","properties");
x.t("objects","xsd:qname");
x.t("objects","sets");
x.t("objects","cannot");
x.t("objects","important");
x.t("objects","using");
x.t("objects","var");
x.t("/xsd:element","xsd:complextype");
x.t("/xsd:element","xsd:element");
x.t("/xsd:element","/xsd:schema");
x.t("/xsd:element","/xsd:sequence");
x.t("mycompany/messaging/mydata.xsd","package");
x.t("element","properties");
x.t("element","rather");
x.t("element","within");
x.t("element","tree");
x.t("element","type");
x.t("element","property");
x.t("element","access");
x.t("element","choice");
x.t("element","id");
x.t("element","subproperty");
x.t("element","directly");
x.t("element","desired");
x.t("element","name");
x.t("element","property\u2019s");
x.t("element","gosu");
x.t("element","part");
x.t("element","exists");
x.t("element","standard");
x.t("element","writes");
x.t("element","sets");
x.t("element","attribute");
x.t("element","occurs");
x.t("element","number");
x.t("element","define");
x.t("element","instead");
x.t("element","xml");
x.t("element","node");
x.t("element","code");
x.t("element","value");
x.t("element","consequently");
x.t("element","defined");
x.t("element","itself");
x.t("element","special");
x.t("element","xsds");
x.t("element","child");
x.t("element","occur");
x.t("element","names");
x.t("element","attributes");
x.t("element","contains");
x.t("element","item");
x.t("new","type");
x.t("new","guidewire");
x.t("new","element");
x.t("new","file");
x.t("new","mycompany.messaging.choicetest.mycustomcomplextype");
x.t("new","xsd.test.simpletest");
x.t("new","array");
x.t("new","xsd.test.test2");
x.t("new","xsd.test.testtype");
x.t("new","mycompany.messaging.choicetest.email");
x.t("new","qname");
x.t("new","elements");
x.t("new","class");
x.t("new","xsd.test.root");
x.t("new","mycompany.messaging.choicetest.phonenumber");
x.t("new","operator");
x.t("new","object");
x.t("certain","rules");
x.t("start","letter");
x.t("access","coercing");
x.t("access","element");
x.t("access","choice");
x.t("access","freely");
x.t("access","strongly-typed");
x.t("access","subobjects");
x.t("access","number");
x.t("access","node");
x.t("access","value");
x.t("access","additional");
x.t("access","individual");
x.t("access","child");
x.t("access","attributes");
x.t("node.test1.color","however");
x.t("coercing","nodes");
x.t("want","create");
x.t("want","prefix");
x.t("want","list");
x.t("want","gosu");
x.t("want","find");
x.t("want","import");
x.t("want","additionally");
x.t("want","var");
x.t("==","test4");
x.t("==","//");
x.t("intermixing","two");
x.t("details","xml");
x.t("speaking","gosu");
x.t("contents","home");
x.t("contents","element");
x.t("getting","property");
x.t("java.lang.integer","xsd:integer");
x.t("java.lang.integer","xsd:unsignedlong");
x.t("java.lang.integer","xsd:int");
x.t("prefix","example");
x.t("prefix","within");
x.t("prefix","conflicts");
x.t("prefix","mine");
x.t("signature","additional");
x.t("idref","cast");
x.t("idref","property");
x.t("idref","idref");
x.t("idref","gosu");
x.t("idref","corresponds");
x.t("idref","called");
x.t("idref","print");
x.t("document","root");
x.t("document","automati");
x.t("document","approach");
x.t("document","xml");
x.t("color","/xsd:complextype");
x.t("color","type");
x.t("color","node.test1.color");
x.t("color","test1");
x.t("color","xsd:element");
x.t("color","n2.test1.color");
x.t("color","type=");
x.t("color","xsd:restriction");
x.t("mycompany.messaging.mydata.enums.colorenum","generated");
x.t("choice","complex");
x.t("choice","root");
x.t("choice","properties");
x.t("choice","within");
x.t("choice","property");
x.t("choice","removes");
x.t("choice","element");
x.t("choice","choice");
x.t("choice","group");
x.t("choice","simple");
x.t("choice","name");
x.t("choice","no");
x.t("choice","permits");
x.t("choice","subelement");
x.t("choice","selected");
x.t("choice","xml");
x.t("choice","null");
x.t("choice","value");
x.t("choice","element\u2019s");
x.t("choice","depending");
x.t("choice","already");
x.t("choice","subobject");
x.t("choice","itself");
x.t("choice","elements");
x.t("choice","child");
x.t("choice","object");
x.t("utf_xml","new");
x.t("utf_xml","true");
x.t("simpletest.test2s.get","(1)");
x.t("/xsd:choice","/xsd:sequence");
x.t("gw.xml.xsd.types.xsdgmonth","xsd:gmonthday");
x.t("gw.xml.xsd.types.xsdgmonth","xsd:gmonth");
x.t("timezone","method");
x.t("messsage","gosu");
x.t("lets","read");
x.t("file","provide");
x.t("file","source");
x.t("file","uses");
x.t("file","hierarchy");
x.t("file","path");
x.t("file","name");
x.t("file","inputstream");
x.t("file","approach");
x.t("file","/my_xml_files/mytest.xml");
x.t("file","section");
x.t("file","xml");
x.t("file","known");
x.t("file","claimcenter/modules/configuration/gsrc/");
x.t("file","explaining");
x.t("base=","xsd:string");
x.t("need","create");
x.t("need","type");
x.t("need","modify");
x.t("need","attributes");
x.t("mycompany.messaging.mydata.color","gosu");
x.t("ixmlnode","available");
x.t("ixmlnode","interface");
x.t("ixmlnode","actions");
x.t("list","rather");
x.t("list","always");
x.t("list","want");
x.t("list","ids");
x.t("list","null");
x.t("list","appropriate");
x.t("list","children");
x.t("list","elements");
x.t("list","names");
x.t("normalizes","name");
x.t("http","place");
x.t("http","maximum");
x.t("http","links");
x.t("indicates","whether");
x.t("emptied","call");
x.t("infer","enum");
x.t("test1.number","simpletest.test4s.add");
x.t("(a.choice.homephone)","//");
x.t("xsd:double","float");
x.t("xsd:double","java.lang.float");
x.t("xsd:double","java.lang.double");
x.t("short","xsd:short");
x.t("namespaces","qnames");
x.t("uri","second");
x.t("incorrect","types");
x.t("incorrect","structure");
x.t("id","explicitly");
x.t("id","element");
x.t("id","choice");
x.t("id","no");
x.t("id","conflicts");
x.t("id","gosu");
x.t("id","references");
x.t("id","parsed");
x.t("id","xml");
x.t("id","rootnode");
x.t("id","reference");
x.t("id","type=");
x.t("id","values");
x.t("add","list");
x.t("add","remove");
x.t("add","single-element");
x.t("add","previous");
x.t("add","xsd");
x.t("unsupported","xsd");
x.t("during","serialization");
x.t("during","import");
x.t("relatively","simple");
x.t("complete","convert");
x.t("complete","produce");
x.t("simpletest.test1","new");
x.t("assign","properties");
x.t("assign","new");
x.t("assign","long");
x.t("assign","object");
x.t("group","gosu");
x.t("group","object");
x.t("xsd:notation","java.lang.string");
x.t("xsd:anyuri","java.net.uri");
x.t("xsd:anyuri","java.net.url");
x.t("xsd:anyuri","java.util.calendar");
x.t("xsd:long","short");
x.t("xsd:long","java.lang.long");
x.t("xsd:long","java.lang.short");
x.t("actions","ixmlnode");
x.t("actions","documented");
x.t("guide","gosu");
x.t("due","incorrect");
x.t("xsd:sequence","xsd:element");
x.t("applies","complicated");
x.t("validate","xml");
x.t("validate","incoming");
x.t("simple","type");
x.t("simple","parse");
x.t("simple","first");
x.t("simple","types");
x.t("simple","xsd");
x.t("simple","child");
x.t("remove","pre-");
x.t("test1.color","red");
x.t("(a.choice.workphone)","prints");
x.t("normally","appear");
x.t("xsd:unsignedbyte","java.lang.byte");
x.t("float","xsd:float");
x.t("unless","id");
x.t(".itemname","//");
x.t("calendar","fields");
x.t("calendar","object\u2019s");
x.t("calendar","object");
x.t("remember","element");
x.t("remember","add");
x.t("parse","method");
x.t("parse","methods");
x.t("parse","xml");
x.t("parse","main");
x.t("parse","pass");
x.t("features","color");
x.t("features","ways");
x.t("features","xsd");
x.t("features","including");
x.t("freely","intermixing");
x.t("throws","illegalstateexception");
x.t("throws","exception");
x.t("fails","example");
x.t("simpletest.test3","blue");
x.t("xsd\u2019s","structure");
x.t("property2","property3");
x.t("workphone_elem","mobilephone_elem");
x.t("subproperty","non-null");
x.t("java.lang.string","xsd:entity");
x.t("java.lang.string","xsd:name");
x.t("java.lang.string","xsd:qname");
x.t("java.lang.string","xsd:notation");
x.t("java.lang.string","xsd:long");
x.t("java.lang.string","xsd:unsignedbyte");
x.t("java.lang.string","standard");
x.t("java.lang.string","xsd:nmtoken");
x.t("java.lang.string","xsd:idref");
x.t("java.lang.string","xsd:nmtokens");
x.t("java.lang.string","xsd:string");
x.t("java.lang.string","xsd:id");
x.t("java.lang.string","xsd:positiveinteger");
x.t("java.lang.string","xsd:time");
x.t("gw.xml.xsd.types.xsddatetime","xsd:datetime");
x.t("gw.xml.xsd.types.xsddatetime","xsd:decimal");
x.t("xsd:gyearmonth","gw.xml.xsd.types.xsdtime");
x.t("xsd:gyearmonth","gw.xml.xsd.types.xsdgyearmonth");
x.t("directly","root");
x.t("directly","idref");
x.t("directly","gosu");
x.t("directly","important");
x.t("directly","page");
x.t("directly","print");
x.t("directly","var");
x.t("requires","xml");
x.t("xsd:enumeration","value=");
x.t("unbounded","xsd:element");
x.t("unbounded","/xsd:sequence");
x.t("unbounded","minoccurs=");
x.t("desired","type");
x.t("desired","element");
x.t("desired","location");
x.t("converts","gosu");
x.t("converts","string");
x.t("converts","following");
x.t("imported","xsd");
x.t("true","simpletest.test2s.get");
x.t("true","writing");
x.t("true","gosu");
x.t("true","test1/");
x.t("true","//");
x.t("newnode","new");
x.t("writing","strongly-typed");
x.t("test","simpletest.test2s.add");
x.t("test","test2");
x.t("test","xml");
x.t("test","xsd");
x.t("property3","access");
x.t("byte","xsd:byte");
x.t("byte","xsd:base64binary");
x.t("byte","xsd:boolean");
x.t("byte","xsd:int");
x.t("specified","w3c");
x.t("defaults","except");
x.t("text_val.focus","text_val.select");
x.t("strongly-typed","properties");
x.t("strongly-typed","getter");
x.t("strongly-typed","gosu");
x.t("strongly-typed","xml");
x.t("strongly-typed","node");
x.t("strongly-typed","code");
x.t("strongly-typed","data");
x.t("strongly-typed","values");
x.t("strongly-typed","imply");
x.t("strongly-typed","operations");
x.t("definition","email");
x.t("definition","element");
x.t("definition","file");
x.t("definition","gosu");
x.t("definition","categoryref");
x.t("definition","class");
x.t("test1","new");
x.t("test1","xsd:element");
x.t("test1","node");
x.t("test1","color=");
x.t("test1","type=");
x.t("test1","/xsd:sequence");
x.t("creating","directories");
x.t("creating","intermediate");
x.t("path","/my_xml_files/");
x.t("path","claimcenter/modules/configuration/gsrc/");
x.t("name","example");
x.t("name","within");
x.t("name","enclosing");
x.t("name","until");
x.t("name","type");
x.t("name","start");
x.t("name","want");
x.t("name","conflicts");
x.t("name","no");
x.t("name","gosu");
x.t("name","myphone");
x.t("name","underscore");
x.t("name","unique");
x.t("name","types");
x.t("name","matches");
x.t("name","taken");
x.t("name","already");
x.t("name","conform");
x.t("name","otherwise");
x.t("name","class");
x.t("name","myaddress_myphone");
x.t("name","xsd");
x.t("name","matching");
x.t("gw.xml","package");
x.t("no","limitations");
x.t("no","choice");
x.t("no","danger");
x.t("no","choices");
x.t("no","additional");
x.t("no","child");
x.t("no","suffix");
x.t("conflicts","within");
x.t("conflicts","automatically");
x.t("conflicts","gosu");
x.t("conflicts","using");
x.t("x.attributes","number");
x.t("resulting","xml");
x.t("property\u2019s","name");
x.t("enclosed","sequence");
x.t("xsd:gyear","gw.xml.xsd.types.xsdgyear");
x.t("xsd:gyear","gw.xml.xsd.types.xsdgyearmonth");
x.t("danger","infinite");
x.t("operation","uses");
x.t("common","superclass");
x.t("gosu","looks");
x.t("gosu","supports");
x.t("gosu","prepends");
x.t("gosu","static");
x.t("gosu","create");
x.t("gosu","always");
x.t("gosu","creates");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","however");
x.t("gosu","parsing");
x.t("gosu","validates");
x.t("gosu","convert");
x.t("gosu","automatically");
x.t("gosu","objects");
x.t("gosu","lets");
x.t("gosu","infer");
x.t("gosu","applies");
x.t("gosu","throws");
x.t("gosu","converts");
x.t("gosu","counterparts");
x.t("gosu","handles");
x.t("gosu","provides");
x.t("gosu","determine");
x.t("gosu","xsd:redefine");
x.t("gosu","sets");
x.t("gosu","hides");
x.t("gosu","in-memory");
x.t("gosu","loads");
x.t("gosu","next");
x.t("gosu","first");
x.t("gosu","cannot");
x.t("gosu","editor");
x.t("gosu","xml");
x.t("gosu","coerce");
x.t("gosu","types");
x.t("gosu","specially");
x.t("gosu","node");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","encodes");
x.t("gosu","xsd:union");
x.t("gosu","tries");
x.t("gosu","natively");
x.t("gosu","generate");
x.t("gosu","data");
x.t("gosu","implicitly");
x.t("gosu","classes");
x.t("gosu","package");
x.t("gosu","class");
x.t("gosu","setting");
x.t("gosu","xsd");
x.t("gosu","load");
x.t("gosu","enforces");
x.t("gosu","generates");
x.t("gosu","manipulates");
x.t("gosu","object");
x.t("gosu","tester");
x.t("references","link");
x.t("references","directly");
x.t("references","following");
x.t("references","links");
x.t("references","xsds");
x.t("references","non-local");
x.t("test2","xsd:complextype");
x.t("test2","new");
x.t("test2","nodes");
x.t("test2","maxoccurs=");
x.t("test2","id=");
x.t("test2","final=");
x.t("iterate","findall");
x.t("findall","method");
x.t("collection-like","enhancements");
x.t("enumerated","type");
x.t("performance","reliability");
x.t("(importing)","incoming");
x.t("typed","node");
x.t("typed","code");
x.t("typed","simpletest.attributes");
x.t("typed","nodes");
x.t("constructed","parse");
x.t("constructor","associated");
x.t("mobilephone","/xsd:choice");
x.t("mobilephone","choices");
x.t("mobilephone","type=");
x.t("(a.choice.homephone_elem)","//");
x.t("conversion","reference");
x.t("xsd:gmonth","gw.xml.xsd.types.xsdgmonth");
x.t("xsd:gmonth","gw.xml.xsd.types.xsdgmonthday");
x.t("xsd:negativeinteger","java.math.biginteger");
x.t("xsd:token","java.lang.string");
x.t("char","xsd:string");
x.t("follows","schema");
x.t("retains","original");
x.t("corresponds","categoryid");
x.t("counterparts","package");
x.t("illegalstateexception","include");
x.t("dramatically","reduces");
x.t("test3","type=");
x.t("test3","blue");
x.t("mycompany.messaging.mydata.test2","mycompany.messaging.mydata.color");
x.t("enumeration","restriction");
x.t("enumeration","type");
x.t("enumeration","value");
x.t("enumeration","class");
x.t("part","type");
x.t("part","qualified");
x.t("argument","parse");
x.t("n1","node.findfirst");
x.t("n1","xsd.test.testtype");
x.t("trivial","xsd");
x.t("bytes","property");
x.t("bytes","var");
x.t("handles","namespace");
x.t("handles","xsd");
x.t("mycompany.messaging.choicetest.mycustomcomplextype","type");
x.t("x12345","415");
x.t("x12345","print");
x.t("custom","xsd");
x.t("xsd:ncname","java.lang.string");
x.t("declares","namespace");
x.t("category.categoryname","date");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("encoding=","utf-8");
x.t("test4","x.attributes");
x.t("test4","type=");
x.t("test4","child");
x.t("methods","properties");
x.t("methods","access");
x.t("methods","transform");
x.t("inputstream","node");
x.t("boolean","parse");
x.t("boolean","argument");
x.t("boolean","xsd:boolean");
x.t("boolean","specifying");
x.t("assisted","gosu");
x.t("n2","n1");
x.t("pre-","existing");
x.t("xsd:choice","xsd:element");
x.t("shortcut","properties");
x.t("shortcut","creates");
x.t("shortcut","property");
x.t("shortcut","returns");
x.t("exists","thus");
x.t("replaced","workphone");
x.t("java.lang.long","xsd:unsignedshort");
x.t("java.lang.long","xsd:long");
x.t("java.lang.long","xsd:negativeinteger");
x.t("(gx)","modeler");
x.t("provides","intuitive");
x.t("alternatively","construct");
x.t("directories","manually");
x.t("generic","type");
x.t("place","copies");
x.t("professional","services");
x.t("continue","strongly");
x.t("find","test4");
x.t("find","return");
x.t("find","nodes");
x.t("combine","features");
x.t(".parse","utf_xml");
x.t("xsd.test.simpletest","node");
x.t("xsd.test.simpletest","simpletest.id");
x.t("determine","element");
x.t("standard","uses");
x.t("standard","string");
x.t("standard","xml");
x.t("a.choice.homeemail","abc@def.com");
x.t("namespace","conflicts");
x.t("namespace","prefixes");
x.t("namespace","information");
x.t("namespace","appropriate");
x.t("namespace","qname");
x.t("final","type=");
x.t("final","print");
x.t("search","iterate");
x.t("loading","xsd");
x.t("accessors","instead");
x.t("map","simpletest.id");
x.t("writes","xml");
x.t("phone","homephone");
x.t("phone","element");
x.t("phone","print");
x.t("phone","work");
x.t("a.choice.homephone_elem.attributes","extension");
x.t("selection","current");
x.t("selection","sets");
x.t("gw.xml.xsd.types.xsdgyear","xsd:gyearmonth");
x.t("gw.xml.xsd.types.xsdgyear","xsd:gyear");
x.t("allows","assign");
x.t("destination","type");
x.t("write","xml");
x.t("write","var");
x.t("xsd:element","ref=");
x.t("xsd:element","name=");
x.t("target","location");
x.t("mycompany.messaging.mydata.simpletest","mycompany.messaging.mydata.testtype");
x.t("allow","text");
x.t("string","static");
x.t("string","once");
x.t("string","file");
x.t("string","gosu");
x.t("string","calling");
x.t("string","value");
x.t("string","invoke");
x.t("string","var");
x.t("accessed","http");
x.t("copies","xsds");
x.t("local","part");
x.t("local","resource");
x.t("xsd:redefine","unsupported");
x.t("array","value");
x.t("natural","order");
x.t(".test1","new");
x.t("sets","contents");
x.t("sets","calendar");
x.t("sets","value");
x.t("sets","gets");
x.t("xsd:duration","gw.xml.xsd.types.xsdduration");
x.t("xsd:duration","gw.xml.xsd.types.xsdgday");
x.t("int","xsd:int");
x.t("lines","bolded");
x.t("fields","defaults");
x.t("fields","significant");
x.t("attribute","possible");
x.t("attribute","type");
x.t("attribute","idref");
x.t("attribute","x.attributes");
x.t("attribute","code");
x.t("attribute","work");
x.t("attribute","specify");
x.t("addition","gosu");
x.t("in-line","type");
x.t("in-line","definition");
x.t("in-line","gosu");
x.t("permits","several");
x.t("myphone","new");
x.t("characters","letter");
x.t("resource","name");
x.t("modeler","support");
x.t("modeler","gosu");
x.t("subobjects","cast");
x.t("subobjects","until");
x.t("subobjects","choice");
x.t("subobjects","cases");
x.t("subobjects","special");
x.t("relative","properties");
x.t("earlier","topic");
x.t("earlier","xsd");
x.t("contain","element");
x.t("contain","several");
x.t("subelement","choice");
x.t("a.choice.homephone_elem.value","415");
x.t("prints","null");
x.t("prints","following");
x.t("chosen","time");
x.t("second","parameter");
x.t("rely","prefixes");
x.t("sake","example");
x.t("categoryname=","category");
x.t("legal","structure");
x.t("legal","attributes");
x.t("hides","child");
x.t("lastly","elements");
x.t("complicated","working");
x.t("complicated","rules");
x.t("in-memory","graph");
x.t("present","example");
x.t("present","child");
x.t("xsd.test.test2","test2.id");
x.t("xsd.test.test2","simpletest.test2s.get");
x.t("xsd.test.test2","assign");
x.t("root.bytes","var");
x.t("workphone","mobilephone");
x.t("workphone","xsd:element");
x.t("workphone","type=");
x.t("workphone","print");
x.t("selected","subobjects=null");
x.t("xsd:nmtoken","java.lang.string");
x.t("gw.xml.xsd.types.xsdtime","xsd:token");
x.t("gw.xml.xsd.types.xsdtime","xsd:time");
x.t("gw.api.financials.currencyamount","xsd:string");
x.t(".categoryref","gw.mytest.category");
x.t("error","occurred");
x.t("contrast","strongly-typed");
x.t("contrast","following");
x.t("contrast","child");
x.t("testtype","xsd:element");
x.t("testtype","xsd:attribute");
x.t("testtype","minoccurs=");
x.t("choices","properties");
x.t("choices","handled");
x.t("choices","simple");
x.t("choices","chosen");
x.t("choices","xml");
x.t("choices","previous");
x.t("choices","represent");
x.t("choices","removed");
x.t("documents","fairly");
x.t("strongly","typed");
x.t("somehow","reference");
x.t("simpletest.asutfstring","final");
x.t("point","xsd\u2019s");
x.t("415","666");
x.t("415","555");
x.t("415","867");
x.t("xsd:gday","gw.xml.xsd.types.xsdgmonth");
x.t("xsd:gday","gw.xml.xsd.types.xsdgday");
x.t("xsd:unsignedlong","java.lang.long");
x.t("notice","two");
x.t("1.0","encoding=");
x.t("red","number=");
x.t("red","xsd:enumeration");
x.t("red","//");
x.t("loads","xsd");
x.t("suppose","want");
x.t("suppose","add");
x.t("occurs","once");
x.t("transforms","element");
x.t("next","create");
x.t("next","normalizes");
x.t("next","xsd");
x.t("validation","during");
x.t("know","xsd");
x.t("syntax","unnecessary");
x.t("xsd:base64binary","byte");
x.t("xsd:base64binary","char");
x.t("intermediate","nodes");
x.t("representation","linked-to");
x.t("categoryid","property");
x.t("categoryid","type=");
x.t("appears","property");
x.t("appears","list");
x.t("appears","package");
x.t("means","home");
x.t("means","methods");
x.t("allowed","appear");
x.t("first","parameter");
x.t("first","create");
x.t("first","creates");
x.t("first","no-argument");
x.t("tentative","initial");
x.t("collection","enhancements");
x.t("n2.test1.color","combine");
x.t("top-level","node");
x.t("top-level","object");
x.t("issues","related");
x.t("xmlbytes","root.bytes");
x.t(".final","true");
x.t("non-","null");
x.t("(different)","mapping");
x.t("long","xsd:long");
x.t("long","paths");
x.t("weather","first");
x.t("weather","mine");
x.t("categoryref=","foo1");
x.t("guidewire_selectall","var");
x.t("xsd:attribute","name=");
x.t("number","==");
x.t("number","name");
x.t("number","attribute");
x.t("number","type=");
x.t("number","similarly");
x.t("importing","strongly-typed");
x.t("importing","xml");
x.t("node.children.map","\\x");
x.t("conversions","gosu");
x.t("conversions","using");
x.t("java.net.uri","xsd:anyuri");
x.t("java.net.uri","xsd:base64binary");
x.t("foo1","categoryname=");
x.t("foo1","itemname=");
x.t("xml.items","[0]");
x.t("w3c","xml");
x.t("function","enumerations");
x.t("function","guidewire_selectall");
x.t("approach","safer");
x.t("approach","require");
x.t("approach","requires");
x.t("approach","treating");
x.t("underscore","normalized");
x.t("underscore","character");
x.t("maximum","performance");
x.t("reliability","gosu");
x.t("dom-like","tree");
x.t("elementnames","node.children.map");
x.t("parent","point");
x.t("parent","object");
x.t("implements","interface");
x.t("implements","ixmlnodewithid");
x.t("foo2","categoryname=");
x.t("words","cast");
x.t("words","put");
x.t("mycompany.messaging.mydata","gosu");
x.t("whether","type");
x.t("whether","include");
x.t("whether","named");
x.t("whether","//");
x.t("cannot","create");
x.t("cannot","automatically");
x.t("cannot","parse");
x.t("cannot","in-line");
x.t("define","new");
x.t("define","part");
x.t("unique","namespace");
x.t("unique","xsds");
x.t("against","xsd");
x.t("represents","choice");
x.t("represents","xml");
x.t("represents","handling");
x.t("editor","code");
x.t("straightforward","strongly-typed");
x.t("idea","relatively");
x.t("unicode","guidewire");
x.t("multiple-element","child");
x.t("different","elements");
x.t("(a.choice.homeemail_elem.value)","instead");
x.t("xsd:idref","/xsd:complextype");
x.t("xsd:idref","next");
x.t("xsd:idref","gw.xml.xsd.ixmlnodewithid");
x.t("xsd:idref","becomes");
x.t("may","change");
x.t("parsed","xml");
x.t("xsi:nonamespaceschemalocation=","mytest.xsd");
x.t("/my_xml_files/mytest.xml","//");
x.t("share","common");
x.t("xsd:string","double");
x.t("xsd:string","/xsd:complextype");
x.t("xsd:string","guidewire");
x.t("xsd:string","java.lang.string");
x.t("xsd:string","xsd:enumeration");
x.t("xsd:string","xsd:element");
x.t("xsd:string","xsd:attribute");
x.t("xsd:string","java.math.bigdecimal");
x.t("xsd:string","xsd");
x.t("accessing","node\u2019s");
x.t("accessing","element");
x.t("step","process");
x.t("instead","property");
x.t("instead","add");
x.t("instead","gosu");
x.t("instead","assisted");
x.t("ways","example");
x.t("subobjects=null","a.choice.homephone");
x.t("java.util.list","java.lang.string");
x.t("java.util.list","gw.xml.xsd.ixmlnodewithid");
x.t("xsd:nmtokens","java.util.list");
x.t("java.net.url","xsd:anyuri");
x.t("dereference","node");
x.t("itemname","type=");
x.t("xml","tree");
x.t("xml","source");
x.t("xml","trees");
x.t("xml","version=");
x.t("xml","orders");
x.t("xml","left");
x.t("xml","parsing");
x.t("xml","however");
x.t("xml","structured");
x.t("xml","document");
x.t("xml","file");
x.t("xml","validate");
x.t("xml","gosu");
x.t("xml","bytes");
x.t("xml","(gx)");
x.t("xml","string");
x.t("xml","contain");
x.t("xml","documents");
x.t("xml","against");
x.t("xml","types");
x.t("xml","node");
x.t("xml","test.mytest.root.parse");
x.t("xml","schema");
x.t("xml","constructing");
x.t("xml","already");
x.t("xml","import");
x.t("xml","models");
x.t("xml","nodes");
x.t("xml","parser");
x.t("xml","data");
x.t("xml","information");
x.t("xml","graph");
x.t("xml","result");
x.t("xml","export");
x.t("xml","call");
x.t("xml","untyped");
x.t("xml","model");
x.t("xml","using");
x.t("xml","xsd");
x.t("xml","pass");
x.t("xml","var");
x.t("types","related");
x.t("types","tell");
x.t("types","incorrect");
x.t("types","gosu");
x.t("types","follows");
x.t("types","allow");
x.t("types","share");
x.t("types","match");
x.t("types","node");
x.t("types","correspond");
x.t("types","specifically");
x.t("types","generated");
x.t("types","used");
x.t("types","xsd");
x.t("types","operations");
x.t("section","references");
x.t("xsd:boolean","java.lang.byte");
x.t("xsd:boolean","byte");
x.t("xsd:boolean","xsd:attribute");
x.t("xsd:boolean","java.lang.boolean");
x.t("directory","limitations");
x.t("directory","desired");
x.t("directory","main");
x.t("directory","already");
x.t("match","xsd");
x.t("format","choice");
x.t("format","alternatively");
x.t("handling","choices");
x.t("handling","xsds");
x.t("restricted","within");
x.t("coerce","gosu");
x.t("coerce","string");
x.t("coerce","specific");
x.t("compile","list");
x.t("single-element","child");
x.t("things","know");
x.t("lastverifiedby","type=");
x.t("lastverifiedby","minoccurs=");
x.t("5309","/homephone");
x.t("5309","//");
x.t("gw.xml.xsd.ixmlnodewithid","gw.xml.ireadonlyxmlnode");
x.t("xsd:normalizedstring","java.lang.string");
x.t("xsd:short","java.lang.string");
x.t("xsd:short","gw.api.financials.currencyamount");
x.t("xsd:short","java.lang.short");
x.t("mine","xsd:qname");
x.t("mine","following");
x.t("keyword","gosu");
x.t("superclass","abstractxsddatetype");
x.t("tocalendar","method");
x.t("node","example");
x.t("node","root");
x.t("node","properties");
x.t("node","tree");
x.t("node","refers");
x.t("node","property");
x.t("node","access");
x.t("node","details");
x.t("node","idref");
x.t("node","id");
x.t("node","actions");
x.t("node","features");
x.t("node","directly");
x.t("node","strongly-typed");
x.t("node","collection-like");
x.t("node","gosu");
x.t("node","bytes");
x.t("node","strongly");
x.t("node","first");
x.t("node","approach");
x.t("node","straightforward");
x.t("node","represents");
x.t("node","assigned");
x.t("node","ids");
x.t("node","represent");
x.t("node","appropriate");
x.t("node","classes");
x.t("node","class");
x.t("node","xsd.test.simpletest.parse");
x.t("node","var");
x.t("node","subelements");
x.t("important","type");
x.t("important","need");
x.t("important","creating");
x.t("initial","name");
x.t("rootnode","//");
x.t("simply","property");
x.t("simply","add");
x.t("simply","assign");
x.t("ordering","elements");
x.t("calling","asutfstring");
x.t("(1)",".test1");
x.t("(1)",".final");
x.t("assigned","time");
x.t("assigned","parent");
x.t("specially","handles");
x.t("specially","mentioned");
x.t("accessible","using");
x.t("java.util.calendar","xsd:datetime");
x.t("java.util.calendar","object");
x.t("tostring","method");
x.t("reference","root");
x.t("reference","type");
x.t("reference","element");
x.t("reference","guide");
x.t("reference","xml");
x.t("reference","node");
x.t("reference","linked-to");
x.t("reference","value");
x.t("reference","following");
x.t("reference","xsds");
x.t("reference","using");
x.t("correspond","multiple");
x.t("correspond","legal");
x.t("reduces","errors");
x.t("code","completion");
x.t("code","gosu");
x.t("code","sets");
x.t("code","prints");
x.t("code","code");
x.t("code","similar");
x.t("code","parses");
x.t("code","management");
x.t("code","following");
x.t("code","//");
x.t("code","using");
x.t("code","var");
x.t("xsd.enums.colorenum","enumeration");
x.t("loader","follow");
x.t("follow","http");
x.t("x.id","xsd");
x.t("test4/","/simpletest");
x.t("xsd:date","gw.xml.xsd.types.xsddate");
x.t("xsd:date","gw.xml.xsd.types.xsddatetime");
x.t("xsd:date","xsd:element");
x.t("disambiguate","choices");
x.t("xsd:float","gw.xml.xsd.types.xsddate");
x.t("xsd:float","java.lang.integer");
x.t("xsd:float","java.lang.float");
x.t("typekey","xsd:string");
x.t("guess","type");
x.t("linked-to","object");
x.t("categoryref","sake");
x.t("categoryref","attribute");
x.t("categoryref","type=");
x.t("test.mytest.root.parse","true");
x.t("fully","using");
x.t("ids","reserialize");
x.t("ids","text");
x.t("ids","test2");
x.t("ids","gosu");
x.t("ids","node");
x.t("ids","node.test2s.map");
x.t("thus","create");
x.t("thus","non-");
x.t("xmlstring","root.asutfstring");
x.t("color=","red");
x.t("lastverifieddate","type=");
x.t("lastverifieddate","minoccurs=");
x.t("a.homeemail","abc@def.com");
x.t("java.math.biginteger","xsd:integer");
x.t("java.math.biginteger","xsd:language");
x.t("java.math.biginteger","xsd:nonpositiveinteger");
x.t("java.math.biginteger","xsd:normalizedstring");
x.t("java.math.biginteger","xsd:short");
x.t("java.math.biginteger","xsd:nonnegativeinteger");
x.t("java.lang.short","contrast");
x.t("java.lang.short","xsd:string");
x.t("java.lang.short","xsd:short");
x.t("level","during");
x.t("assigns","id");
x.t("return","desired");
x.t("return","format");
x.t("schema","element");
x.t("schema","definition");
x.t("schema","words");
x.t("schema","appear");
x.t("schema","specification");
x.t("schema","date/time");
x.t("schema","elements");
x.t("known","xsd");
x.t("/xsd:schema","notice");
x.t("/xsd:schema","save");
x.t("/xsd:schema","xsd");
x.t("previous","example");
x.t("previous","line");
x.t("previous","choice");
x.t("previous","choices");
x.t("appear","root");
x.t("appear","once");
x.t("appear","multiple");
x.t("appear","choice");
x.t("appear","directly");
x.t("appear","handling");
x.t("appear","output");
x.t("xsd.test.testtype","test1.color");
x.t("xsd.test.testtype","simpletest.test3");
x.t("xsd.test.testtype","//");
x.t("xsd.test.testtype","modify");
x.t("xsd.test.testtype","var");
x.t("produces","xml");
x.t("encodes","text");
x.t("matches","id");
x.t("a.asutfstring","code");
x.t("mytest.xml","root");
x.t("xsd:union","always");
x.t("xsd:id","automatically");
x.t("xsd:id","java.lang.string");
x.t("xsd:id","xsd:attribute");
x.t("xsd:id","simply");
x.t("java.lang.float","xsd:gday");
x.t("java.lang.float","xsd:float");
x.t("prefixes","generating");
x.t("prefixes","gosu");
x.t("prefixes","may");
x.t("java.io.file","//");
x.t("occurred","messsage");
x.t("rules","example");
x.t("rules","nested");
x.t("taken","example");
x.t("taken","gosu");
x.t("taken","append");
x.t("tries","myaddress_myphone2");
x.t("tries","myaddress_myphone3");
x.t("constructing","xml");
x.t("simpletest.attributes","id");
x.t("existing","list");
x.t("null","example");
x.t("null","properties");
x.t("null","phonenumber");
x.t("null","choice");
x.t("null","xsd:anyuri");
x.t("null","shortcut");
x.t("null","replaced");
x.t("null","415");
x.t("null","null");
x.t("null","--");
x.t("null","homephone_elem");
x.t("null","print");
x.t("null","setting");
x.t("configuration","module");
x.t("enums","subpackage");
x.t("qualified","name");
x.t("qualified","names");
x.t("qualified","attributes");
x.t("discussion","manipulating");
x.t("exporting","xml");
x.t("specifically","xsdstring");
x.t("gw.xml.xsd.types.xsdduration","xsd:duration");
x.t("gw.xml.xsd.types.xsdduration","xsd:float");
x.t("natively","defines");
x.t("include","time");
x.t("include","calendar");
x.t("manipulating","xml");
x.t("value","preferred");
x.t("value","current");
x.t("value","property");
x.t("value","element");
x.t("value","choice");
x.t("value","simple");
x.t("value","directly");
x.t("value","no");
x.t("value","shortcut");
x.t("value","destination");
x.t("value","choices");
x.t("value","types");
x.t("value","null");
x.t("value","value");
x.t("value","xsdstring");
x.t("value","a.choice.homephone");
x.t("value","using");
x.t("value","suffix");
x.t("additional","parameter");
x.t("additional","choices");
x.t("additional","(different)");
x.t("additional","attributes");
x.t("named","gosu");
x.t("named","anonymous");
x.t("named","myaddress_myphone");
x.t("main","schema");
x.t("main","xsd");
x.t("similar","following");
x.t("node.test2s.map","\\x");
x.t("root.choice","choicename");
x.t("java.math.bigdecimal","xsd:decimal");
x.t("java.math.bigdecimal","xsd:double");
x.t("xsd:nonnegativeinteger","java.math.biginteger");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","exist");
x.t("already","current");
x.t("already","constructed");
x.t("already","taken");
x.t("declaration","xsd");
x.t("several","different");
x.t("several","things");
x.t("several","elements");
x.t("specific","namespace");
x.t("specific","node");
x.t("specific","xsd");
x.t("simpletest.test4s.add","new");
x.t("element\u2019s","root");
x.t("depending","whether");
x.t("xsdstring","example");
x.t("xsdstring","xsdint");
x.t("xsdstring","type");
x.t("--","no");
x.t("/homephone","/phonenumber");
x.t("consequently","properties");
x.t("xsd:entities","java.lang.string");
x.t("xsd:positiveinteger","java.math.biginteger");
x.t("type=","xsd:integer");
x.t("type=","color");
x.t("type=","testtype");
x.t("type=","xsd:idref");
x.t("type=","xsd:string");
x.t("type=","xsd:boolean");
x.t("type=","xsd:date");
x.t("type=","xsd:id");
x.t("generated","possible");
x.t("generated","types");
x.t("generated","node");
x.t("generated","xsd");
x.t("exposes","text");
x.t("generate","every");
x.t("generate","unique");
x.t("generate","xml");
x.t("generate","several");
x.t("process","gosu");
x.t("import","example");
x.t("import","xml");
x.t("import","import");
x.t("import","following");
x.t("exception","example");
x.t("exception","errors");
x.t("exception","fails");
x.t("programming","perspective");
x.t("flattened","appear");
x.t("xsd:anytype","null");
x.t("read","write");
x.t("represent","ability");
x.t("represent","node");
x.t("represent","values");
x.t("represent","elements");
x.t("conform","certain");
x.t("services","importing");
x.t("mycompany.messaging.choicetest.email","a.choice.homeemail");
x.t("mycompany.messaging.choicetest.email","a.homeemail");
x.t("java.lang.boolean","xsd:byte");
x.t("java.lang.boolean","xsd:boolean");
x.t("models","guidewire");
x.t("[0]",".itemname");
x.t("[0]",".categoryref");
x.t("page","error");
x.t("nodes","example");
x.t("nodes","exist");
x.t("nodes","every");
x.t("nodes","implement");
x.t("nodes","discussed");
x.t("nodes","want");
x.t("nodes","dramatically");
x.t("nodes","xml");
x.t("nodes","appropriate");
x.t("nodes","untyped");
x.t("nodes","using");
x.t("nodes","xsd-based");
x.t("nodes","var");
x.t("/xsd:sequence","/xsd:complextype");
x.t("/xsd:sequence","xsd:attribute");
x.t("location","remember");
x.t("location","directory");
x.t("location","generated");
x.t("location","xsd");
x.t("x.elementname","==");
x.t("x.elementname","compile");
x.t("output","natural");
x.t("/test2","test3");
x.t("homephone_elem","properties");
x.t("homephone_elem","property");
x.t("homephone_elem","workphone_elem");
x.t("sequence","type");
x.t("separate","subobject");
x.t("parser","supports");
x.t("itemname=","item");
x.t("specifying","whether");
x.t("treating","tree");
x.t("treating","xml");
x.t("data","create");
x.t("data","access");
x.t("data","appropriate");
x.t("data","untyped");
x.t("data","following");
x.t("xsd:schema","xmlns:xsd=");
x.t("maxoccurs=","unbounded");
x.t("module","hierarchy");
x.t("module","gosu");
x.t("information","guidewire");
x.t("information","gosu");
x.t("information","importing");
x.t("information","call");
x.t("information","application-specific");
x.t("optional","boolean");
x.t("optional","validation");
x.t("graph","contain");
x.t("graph","represents");
x.t("mirrors","incoming");
x.t("messaging","exporting");
x.t("id=","root");
x.t("id=","test");
x.t("/test3","test4/");
x.t("_elem","property");
x.t("_elem","suffix");
x.t("abc@def.com","print");
x.t("becomes","property");
x.t("parses","xml");
x.t("claimcenter/modules/configuration/gsrc/","mycompany/messaging/mydata.xsd");
x.t("claimcenter/modules/configuration/gsrc/","mycompany/messaging/choicetest.xsd");
x.t("defined","root");
x.t("defined","ixmlnode");
x.t("defined","xsd");
x.t("appropriate","type");
x.t("appropriate","element");
x.t("appropriate","test1.number");
x.t("appropriate","generic");
x.t("appropriate","node");
x.t("appropriate","level");
x.t("appropriate","xmlnode");
x.t("nested","in-line");
x.t("practice","coercion");
x.t("save","following");
x.t("save","xsd");
x.t("a.choice.homephone","415");
x.t("javax.xml.namespaces.qname","gosu");
x.t("http://xsd.mycompany.com","weather");
x.t("future","releases");
x.t("result","retains");
x.t("categoryname","type=");
x.t("meaning","xsd:datetime");
x.t("blue","xsd:enumeration");
x.t("blue","/test3");
x.t("blue","//");
x.t("letter","underscore");
x.t("letter","digit");
x.t("treat","tree");
x.t("values","uniquely");
x.t("values","within");
x.t("values","unless");
x.t("values","var");
x.t("implicitly","coerces");
x.t("case","prefix");
x.t("case","choice");
x.t("case","need");
x.t("case","gosu");
x.t("case","case");
x.t("choicename","syntax");
x.t("documented","earlier");
x.t("zone","exist");
x.t("zone","time");
x.t("zone","information");
x.t("zone","meaning");
x.t("structure","defines");
x.t("structure","document");
x.t("structure","case");
x.t("structure","note");
x.t("xsd:simpletype","name=");
x.t("enhancements","discussed");
x.t("enhancements","continue");
x.t("enhancements","xml");
x.t("enhancements","defined");
x.t("children","root");
x.t("children","properties");
x.t("children","emptied");
x.t("children","gosu");
x.t("children","elements");
x.t("children","attributes");
x.t("character","converted");
x.t("character","element");
x.t("character","gosu");
x.t("character","additionally");
x.t("specification","node");
x.t("specification","call");
x.t("specification","special");
x.t("print","(a.homeemail_elem.value)");
x.t("print","statement");
x.t("print","(a.choice.homephone)");
x.t("print","(a.choice.workphone)");
x.t("print","(a.choice.homephone_elem)");
x.t("print","category.categoryname");
x.t("print","simpletest.asutfstring");
x.t("print","xml.items");
x.t("print","(a.choice.homeemail_elem.value)");
x.t("print","a.asutfstring");
x.t("print","null");
x.t("mycompany/messaging/choicetest.xsd","programming");
x.t("subobject","gosu");
x.t("subobject","accessible");
x.t("subobject","flattened");
x.t("maps","gosu");
x.t("maps","xsd");
x.t("gw.xml.xsd.types.xsdgmonthday","xsd:gmonthday");
x.t("gw.xml.xsd.types.xsdgmonthday","xsd:gyear");
x.t("called","categoryref");
x.t("called","mytest.xsd");
x.t("note","definition");
x.t("note","contrast");
x.t("classes","example");
x.t("classes","extend");
x.t("classes","file");
x.t("classes","function");
x.t("classes","known");
x.t("classes","generated");
x.t("classes","represent");
x.t("classes","grouping");
x.t("classes","xsd");
x.t("otherwise","name");
x.t("otherwise","gosu");
x.t("two","properties");
x.t("two","lines");
x.t("two","types");
x.t("two","category");
x.t("export","type");
x.t("export","issues");
x.t("perspective","generally");
x.t("1212","a.choice.workphone");
x.t("1212","following");
x.t("1212","//");
x.t("column","gosu");
x.t("column","xsd");
x.t("qname","property");
x.t("qname","objects");
x.t("qname","http://xsd.mycompany.com");
x.t("qname","following");
x.t("date","type");
x.t("date","handling");
x.t("date","types");
x.t("work","phone");
x.t("work","node");
x.t("imply","element");
x.t("correctly","per");
x.t("mentioned","types");
x.t("itself","example");
x.t("itself","creates");
x.t("itself","new");
x.t("itself","accessing");
x.t("cases","shortcut");
x.t("typically","want");
x.t("object\u2019s","time");
x.t("significant","xsd:datetime");
x.t("utf-8","xsd:schema");
x.t("minoccurs=","xsd:complextype");
x.t("minoccurs=","xsd:choice");
x.t("minoccurs=","xsd:element");
x.t("minoccurs=","maxoccurs=");
x.t("package","hierarchy");
x.t("package","name");
x.t("package","gosu");
x.t("package","means");
x.t("package","mycompany.messaging.mydata");
x.t("package","gw.api.xml.xsd.types");
x.t("package","xsd");
x.t("causes","new");
x.t("locally","instead");
x.t("incoming","document");
x.t("incoming","xml");
x.t("call","date.tocalendar");
x.t("call","clear");
x.t("call","basic");
x.t("call","parse");
x.t("call","tocalendar");
x.t("call","tostring");
x.t(".asutfstring","//");
x.t("order","list");
x.t("order","resulting");
x.t("order","defined");
x.t("root.asutfstring","details");
x.t("test1/","/test2");
x.t("javax.xml.namespace.qname","xsd:qname");
x.t("javax.xml.namespace.qname","xsd:anytype");
x.t("xsd:int","java.lang.integer");
x.t("xsd:int","java.lang.long");
x.t("xsd:int","java.lang.boolean");
x.t("mapping","gosu");
x.t("categoryid=","foo1");
x.t("categoryid=","foo2");
x.t("xsdgday","xsd");
x.t("date/time","formats");
x.t("elements","example");
x.t("elements","asutfstring");
x.t("elements","impose");
x.t("elements","type");
x.t("elements","assign");
x.t("elements","relative");
x.t("elements","legal");
x.t("elements","present");
x.t("elements","appear");
x.t("elements","value");
x.t("elements","children");
x.t("elements","order");
x.t("elements","attach");
x.t("elements","item");
x.t("untyped","properties");
x.t("untyped","access");
x.t("untyped","add");
x.t("untyped","map");
x.t("untyped","dom-like");
x.t("untyped","node");
x.t("untyped","nodes");
x.t("untyped","children");
x.t("untyped","attributes");
x.t("used","helps");
x.t("following","example");
x.t("following","table");
x.t("following","alternate");
x.t("following","new");
x.t("following","file");
x.t("following","simple");
x.t("following","gosu");
x.t("following","code");
x.t("following","null");
x.t("following","classes");
x.t("following","//");
x.t("following","xsd");
x.t("following","var");
x.t("management","system");
x.t("system","example");
x.t("anonymous","addition");
x.t("anonymous","causes");
x.t("three-","step");
x.t("digit","underscore");
x.t("myaddress_myphone2","taken");
x.t("links","property");
x.t("links","node");
x.t("links","xsd");
x.t("links","category");
x.t("special","properties");
x.t("special","limits");
x.t("special","shortcut");
x.t("special","case");
x.t("thows","exception");
x.t("individual","choice\u2019s");
x.t("individual","subobjects");
x.t("model","type");
x.t("model","maps");
x.t("model","export");
x.t("(dot-paths)","without");
x.t("run","time");
x.t("gw.api.xml.xsd.types","example");
x.t("corresponding","gosu");
x.t("except","fields");
x.t("using","example");
x.t("using","guidewire");
x.t("using","choice");
x.t("using","test");
x.t("using","strongly-typed");
x.t("using","keyword");
x.t("using","categoryref");
x.t("using","optional");
x.t("using","three-");
x.t("using","untyped");
x.t("using","special");
x.t("using","xsds");
x.t("using","attributes");
x.t("xsds","structured");
x.t("xsds","http");
x.t("xsds","directly");
x.t("xsds","converts");
x.t("xsds","gosu");
x.t("xsds","accessed");
x.t("xsds","function");
x.t("xsds","directory");
x.t("xsds","node");
x.t("xsds","reference");
x.t("xsds","xsd");
x.t("class","example");
x.t("class","every");
x.t("class","type");
x.t("class","hierarchy");
x.t("class","mycompany.messaging.mydata.enums.colorenum");
x.t("class","imported");
x.t("class","name");
x.t("class","named");
x.t("class","generated");
x.t("class","mirrors");
x.t("class","appropriate");
x.t("class","names");
x.t("class","var");
x.t("additionally","characters");
x.t("additionally","specify");
x.t("myaddress_myphone3","until");
x.t("xsd.test.simpletest.parse","(myxmlstring)");
x.t("//","create");
x.t("//","home");
x.t("//","property");
x.t("//","access");
x.t("//","new");
x.t("//","choice");
x.t("//","validate");
x.t("//","simple");
x.t("//","parse");
x.t("//","no");
x.t("//","gosu");
x.t("//","somehow");
x.t("//","strongly");
x.t("//","coerce");
x.t("//","practice");
x.t("//","print");
x.t("//","work");
x.t("//","untyped");
x.t("//","load");
x.t("//","item");
x.t("similarly","enhancements");
x.t("coercion","typename");
x.t("setting","list");
x.t("setting","subelement");
x.t("setting","value");
x.t("containing","choice");
x.t("recursion","id");
x.t("xsd","example");
x.t("xsd","defines");
x.t("xsd","files");
x.t("xsd","contact");
x.t("xsd","related");
x.t("xsd","once");
x.t("xsd","sequences");
x.t("xsd","support");
x.t("xsd","type\u2019s");
x.t("xsd","type");
x.t("xsd","phonenumber");
x.t("xsd","put");
x.t("xsd","element");
x.t("xsd","file");
x.t("xsd","need");
x.t("xsd","namespaces");
x.t("xsd","throws");
x.t("xsd","strongly-typed");
x.t("xsd","references");
x.t("xsd","standard");
x.t("xsd","mycompany.messaging.mydata.simpletest");
x.t("xsd","sets");
x.t("xsd","modeler");
x.t("xsd","earlier");
x.t("xsd","choices");
x.t("xsd","appears");
x.t("xsd","means");
x.t("xsd","words");
x.t("xsd","whether");
x.t("xsd","format");
x.t("xsd","directory");
x.t("xsd","types");
x.t("xsd","fully");
x.t("xsd","schema");
x.t("xsd","qualified");
x.t("xsd","location");
x.t("xsd","specification");
x.t("xsd","maps");
x.t("xsd","called");
x.t("xsd","otherwise");
x.t("xsd","note");
x.t("xsd","locally");
x.t("xsd","thows");
x.t("xsd","following");
x.t("xsd","class");
x.t("xsd","//");
x.t("xsd","containing");
x.t("xsd","simpletype");
x.t("xsd","var");
x.t("manually","creating");
x.t("manually","target");
x.t("mycompany.messaging.mydata.testtype","mycompany.messaging.mydata.test2");
x.t("grouping","objects");
x.t("myaddress_myphone","element");
x.t("myaddress_myphone","already");
x.t("non-local","resources");
x.t("pass","true");
x.t("pass","optional");
x.t("xsd.test.root",".parse");
x.t("xsd.test.root",".asutfstring");
x.t("per","schema");
x.t("mycompany.messaging.choicetest.phonenumber","print");
x.t("mycompany.messaging.choicetest.phonenumber","//");
x.t("returns","null");
x.t("xmlnode","type");
x.t("xmlnode","objects");
x.t("xsd-based","xml");
x.t("child","simpletest.test2s.add");
x.t("child","property");
x.t("child","element");
x.t("child","allowed");
x.t("child","exposes");
x.t("child","elements");
x.t("/xsd:simpletype","xsd:element");
x.t("load","xml");
x.t("load","xsd");
x.t("simpletype","defines");
x.t("simpletype","complextype");
x.t("simpletype","declaration");
x.t("occur","once");
x.t("transform","string");
x.t("names","always");
x.t("names","guaranteed");
x.t("names","types");
x.t("names","ordering");
x.t("names","appear");
x.t("names","qname");
x.t("names","elements");
x.t("definitions","type");
x.t("append","number");
x.t("modify","multiple-element");
x.t("modify","xsd");
x.t("operations","optional");
x.t("operations","case");
x.t("operations","untyped");
x.t("invoke","asutfstring");
x.t("associated","class");
x.t("operator","necessary");
x.t("unnecessary","disambiguate");
x.t("gw.xml.xsd.types.xsdgyearmonth","xsd:hexbinary");
x.t("gw.xml.xsd.types.xsdgyearmonth","xsd:gyearmonth");
x.t("xsd:time","int");
x.t("xsd:time","gw.xml.xsd.types.xsdtime");
x.t("paths","(dot-paths)");
x.t("without","time");
x.t("without","manually");
x.t("var","simpletest");
x.t("var","new");
x.t("var","color");
x.t("var","utf_xml");
x.t("var","newnode");
x.t("var","test1");
x.t("var","test2");
x.t("var","n1");
x.t("var","text_val=eval");
x.t("var","n2");
x.t("var","xmlbytes");
x.t("var","elementnames");
x.t("var","xml");
x.t("var","node");
x.t("var","ids");
x.t("var","xmlstring");
x.t("var","category");
x.t("suffix","enum");
x.t("suffix","property");
x.t("suffix","_elem");
x.t("suffix","otherwise");
x.t("suffix","following");
x.t("restrictions","restricted");
x.t("including","collection");
x.t("attach","subobjects");
x.t("attach","order");
x.t("simpletest.id","root");
x.t("simpletest.id","rootnode");
x.t("/simpletest","remember");
x.t("867","5309");
x.t("premise","choice");
x.t("enforces","requirement");
x.t("intuitive","dereference");
x.t("passing","boolean");
x.t("value=","green");
x.t("value=","red");
x.t("value=","blue");
x.t("generates","enumeration");
x.t("generates","unique");
x.t("generates","xsd.enums.colorenum");
x.t("generates","classes");
x.t("generates","following");
x.t("produce","resulting");
x.t("/phonenumber","premise");
x.t("removed","gosu");
x.t("autocreation","intermediate");
x.t("category","xsd:complextype");
x.t("category","element");
x.t("category","objects");
x.t("category","xml.items");
x.t("category","maxoccurs=");
x.t("category","save");
x.t("category","categoryid=");
x.t("category","elements");
x.t("category","category");
x.t("category","item");
x.t("tz","timezone");
x.t("subelements","correspond");
x.t("subelements","attributes");
x.t("attributes","properties");
x.t("attributes","questions");
x.t("attributes","element");
x.t("attributes","strongly-typed");
x.t("attributes","a.choice.homephone_elem.attributes");
x.t("attributes","children");
x.t("attributes","untyped");
x.t("attributes","using");
x.t("attributes","child");
x.t("explaining","types");
x.t("xsd:restriction","base=");
x.t("resources","xsds");
x.t("typename","line");
x.t("object","properties");
x.t("object","cast");
x.t("object","tree");
x.t("object","usual");
x.t("object","however");
x.t("object","choice");
x.t("object","gosu");
x.t("object","xsd:attribute");
x.t("object","implements");
x.t("object","represents");
x.t("object","tocalendar");
x.t("object","individual");
x.t("object","xsd");
x.t("object","passing");
x.t("manipulates","xml");
x.t("(test2)","simpletest.test2s.add");
x.t("final=","true");
x.t("generally","speaking");
x.t("gets","element");
x.t("gets","contents");
x.t("gets","shortcut");
x.t("gets","namespace");
x.t("matching","id");
x.t("java.lang.double","xsd:double");
x.t("java.lang.double","xsd:duration");
x.t("gw.xml.xsd.types.xsdgday","xsd:gmonth");
x.t("gw.xml.xsd.types.xsdgday","xsd:gday");
x.t("gw.xml.xsd.types.xsdgday","date");
x.t("specify","type");
x.t("specify","default");
x.t("specify","prefix");
x.t("mytest.xsd","create");
x.t("mytest.xsd","category");
x.t("item","element");
x.t("item","categoryref=");
x.t("item","node");
x.t("item","maxoccurs=");
x.t("item","links");
x.t("item","/root");
x.t("contains","idref");
x.t("/root","create");
x.t("tester","uses");
x.t("application-specific","call");
}
