function FileData_Pairs(x)
{
x.t("example","defines");
x.t("example","property");
x.t("example","package");
x.t("example","-username");
x.t("supports","boolean");
x.t("hidden","private");
x.t("hidden","note");
x.t("hidden","package");
x.t("hidden","visible");
x.t("workaround","add");
x.t("included","@defaultvalue");
x.t("method","initialize");
x.t("method","instead");
x.t("method","suppress");
x.t("method","returns");
x.t("method","overrides");
x.t("properties","properties");
x.t("properties","available");
x.t("properties","type");
x.t("properties","command");
x.t("properties","need");
x.t("properties","stored");
x.t("properties","gosu");
x.t("properties","string");
x.t("properties","merely");
x.t("properties","define");
x.t("properties","uncapitalized");
x.t("properties","defined");
x.t("properties","note");
x.t("properties","passing");
x.t("available","globally");
x.t("exist","gosu");
x.t("parameter","method");
x.t("rather","instances");
x.t("defines","properties");
x.t("defines","property");
x.t("defines","two");
x.t("globally","gosu");
x.t("version","initialize");
x.t("day","preceded");
x.t("full","list");
x.t("subdirectory","named");
x.t("subdirectory","called");
x.t("annotation","description");
x.t("annotation","lines");
x.t("annotation","@shortname");
x.t("static","properties");
x.t("static","property");
x.t("static","proper");
x.t("static","variable");
x.t("static","writable");
x.t("static","var");
x.t("create","subdirectory");
x.t("create","gosu");
x.t("_name","string");
x.t("description","@required");
x.t("double-dash","variant");
x.t("once","class");
x.t("instance","contain");
x.t("normal","command");
x.t("enters","incorrect");
x.t("@required","static");
x.t("@required","command");
x.t("arguments","full");
x.t("arguments","command");
x.t("arguments","list");
x.t("arguments","programs");
x.t("arguments","write");
x.t("arguments","function");
x.t("arguments","appear");
x.t("arguments","two");
x.t("arguments","special");
x.t("parts","separated");
x.t("modifiers","public");
x.t("user","enters");
x.t("line","defines");
x.t("line","static");
x.t("line","arguments");
x.t("line","argument");
x.t("line","options");
x.t("line","processing");
x.t("line","approach");
x.t("line","@shortname");
x.t("line","option");
x.t("line","tools");
x.t("line","tool");
x.t("line","class");
x.t("line","conventions");
x.t("uses","gw.lang.cli.commandlineaccess");
x.t("uses","test");
x.t("uses","gw.lang.cli");
x.t("program","classpath");
x.t("outputs","hello");
x.t("text_val.select","link");
x.t("populate","prop");
x.t("vary","-name");
x.t("batch","window");
x.t("type","boolean");
x.t("type","string");
x.t("type","work");
x.t("type","special");
x.t("type","class");
x.t("exit","behavior");
x.t("gw.lang.cli.commandlineaccess","print");
x.t("src/test","directory");
x.t("time","no");
x.t("public","static");
x.t("multiple","parts");
x.t("erties","individual");
x.t("extend","particular");
x.t("inside","create");
x.t("however","exist");
x.t("however","boolean");
x.t("prop","erties");
x.t("property","included");
x.t("property","annotation");
x.t("property","type");
x.t("property","require");
x.t("property","command");
x.t("property","name");
x.t("property","allows");
x.t("property","syntax");
x.t("property","transforms");
x.t("property","define");
x.t("property","types");
x.t("property","@shortname");
x.t("property","named");
x.t("property","defined");
x.t("property","values");
x.t("property","called");
x.t("commandlineaccess.initialize","method");
x.t("commandlineaccess.initialize","prints");
x.t("commandlineaccess.initialize","args");
x.t("require","argument");
x.t("assumes","value");
x.t("default","properties");
x.t("default","string");
x.t("link","directly");
x.t("access","properties");
x.t("access","command");
x.t("advanced","access");
x.t("advanced","argument");
x.t("prefix","optional");
x.t("single","option");
x.t("new","command");
x.t("want","exit");
x.t("command","line");
x.t("command","batch");
x.t("command","paste");
x.t("command","gosu");
x.t("args.hidden","hidden");
x.t("john","-hidden");
x.t("john","visible");
x.t("messsage","gosu");
x.t("list","arguments");
x.t("list","command");
x.t("list","string");
x.t("hyphen","prefix");
x.t("need","extend");
x.t("file","command");
x.t("file","file");
x.t("file","args.gs");
x.t("proper","ties");
x.t("initialization","user");
x.t("initialization","gosu");
x.t("appropriately","read-only");
x.t("short","name");
x.t("flags","setting");
x.t("publicly-exposed","property");
x.t("paste","following");
x.t("benefit","approach");
x.t("add","value");
x.t("add","writable");
x.t("add","read-only");
x.t("add","following");
x.t("incorrect","option");
x.t("guide","gosu");
x.t("simple","gosu");
x.t("unless","property");
x.t("parse","command");
x.t("parse","unless");
x.t("false","outputs");
x.t("false","second");
x.t("directly","page");
x.t("requires","argument");
x.t("requires","define");
x.t("test","uses");
x.t("test","commandlineaccess.initialize");
x.t("test","package");
x.t("true","default");
x.t("true","non-boolean");
x.t("specified","no");
x.t("text_val.focus","text_val.select");
x.t("stored","exactly");
x.t("name","hidden");
x.t("name","boolean");
x.t("name","works");
x.t("name","option");
x.t("name","save");
x.t("name","//");
x.t("name","symbol");
x.t("no","value");
x.t("no","following");
x.t("no","coercion");
x.t("args.gs","src/test");
x.t("args.gs","file");
x.t("-hidden","false");
x.t("gosu","properties");
x.t("gosu","property");
x.t("gosu","assumes");
x.t("gosu","programs");
x.t("gosu","annotations");
x.t("gosu","myaction.gsp");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","class");
x.t("gosu","coercion");
x.t("commandlineaccess.getrawargs","advanced");
x.t("exactly","once");
x.t("initialize","properties");
x.t("initialize","method");
x.t("component","separate");
x.t("argument","example");
x.t("argument","static");
x.t("argument","double-dash");
x.t("argument","@required");
x.t("argument","advanced");
x.t("argument","initialization");
x.t("argument","processing");
x.t("argument","value");
x.t("argument","--");
x.t("custom","class");
x.t("_hidden","boolean");
x.t("fit","normal");
x.t("avoid","exceptions");
x.t("single-dash","argument");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","hidden");
x.t("boolean","however");
x.t("boolean","property");
x.t("boolean","flags");
x.t("boolean","argument");
x.t("boolean","option");
x.t("src","uses");
x.t("src","inside");
x.t("window","enter");
x.t("exists","workaround");
x.t("secondary","(overloaded)");
x.t("shortcut","instead");
x.t("up","args.gs");
x.t("allows","whatever");
x.t("allows","option");
x.t("programs","command");
x.t("programs","manipulating");
x.t("string","property");
x.t("string","default");
x.t("string","appropriately");
x.t("string","short");
x.t("string","add");
x.t("string","name");
x.t("string","argument");
x.t("string","boolean");
x.t("string","value");
x.t("string","values");
x.t("string","order");
x.t("array","string");
x.t("write","class");
x.t("lines","immediately");
x.t("-day","short");
x.t("characters","-username");
x.t("contain","properties");
x.t("prints","help");
x.t("second","parameter");
x.t("preceding","command");
x.t("error","occurred");
x.t("raw","arguments");
x.t("raw","argument");
x.t("whatever","deserialization");
x.t("logic","defined");
x.t("getrawargs","method");
x.t("syntax","values");
x.t("next","run");
x.t("transforms","string");
x.t("space","characters");
x.t("options","hyphen");
x.t("options","gosu");
x.t("options","approach");
x.t("options","although");
x.t("first","create");
x.t("reason","property");
x.t("preceded","annotation");
x.t("guidewire_selectall","var");
x.t("processing","full");
x.t("processing","advanced");
x.t("processing","parse");
x.t("processing","intuitive");
x.t("function","guidewire_selectall");
x.t("approach","supports");
x.t("approach","properties");
x.t("approach","requires");
x.t("approach","merely");
x.t("merely","string");
x.t("merely","accessing");
x.t("better","fit");
x.t("(overloaded)","version");
x.t("annotations","command");
x.t("annotations","gw.lang.cli");
x.t("define","static");
x.t("define","simple");
x.t("define","requires");
x.t("particular","class");
x.t("private","static");
x.t("ways","access");
x.t("extracted","command");
x.t("instead","-day");
x.t("instead","simply");
x.t("instead","-name");
x.t("myaction.gsp","directory");
x.t("myaction.gsp","-name");
x.t("accessing","type");
x.t("keyword","case");
x.t("directory","next");
x.t("directory","save");
x.t("directory","two");
x.t("types","however");
x.t("exits","-1");
x.t("@shortname","static");
x.t("@shortname","allows");
x.t("@shortname","string");
x.t("-d","shortcut");
x.t("variant","example");
x.t("participate","command");
x.t("simply","add");
x.t("works","single-dash");
x.t("reference","guide");
x.t("code","static");
x.t("code","program");
x.t("code","access");
x.t("code","want");
x.t("follow","option");
x.t("return","code");
x.t("appear","command");
x.t("option","example");
x.t("option","static");
x.t("option","multiple");
x.t("option","commandlineaccess.initialize");
x.t("option","true");
x.t("option","specified");
x.t("option","-d");
x.t("option","username");
x.t("option","value");
x.t("option","used");
x.t("message","exits");
x.t("upon","define");
x.t("variable","itself");
x.t("click","save");
x.t("enter","following");
x.t("occurred","messsage");
x.t("nice","benefit");
x.t("username","option");
x.t("commandlineargs","commandlineaccess.getrawargs");
x.t("instances","class");
x.t("tools","command");
x.t("manipulating","raw");
x.t("additional","values");
x.t("value","type");
x.t("value","property");
x.t("value","command");
x.t("value","false");
x.t("value","true");
x.t("value","gosu");
x.t("value","follow");
x.t("value","jsmith");
x.t("commandlineaccess","class");
x.t("named","day");
x.t("named","name");
x.t("named","src");
x.t("suppress","exiting");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("--","no");
x.t("writable","properties");
x.t("writable","property");
x.t("classpath","src");
x.t("deserialization","logic");
x.t("although","case");
x.t("hello","john");
x.t("hello","args.name");
x.t("exiting","bad");
x.t("page","error");
x.t("separate","raw");
x.t("ties","initialization");
x.t("uncapitalized","better");
x.t("help","message");
x.t("optional","additional");
x.t("-name","john");
x.t("-name","jsmith");
x.t("tool","create");
x.t("tool","parse");
x.t("tool","myaction.gsp");
x.t("-1","return");
x.t("save","new");
x.t("save","command");
x.t("save","gosu");
x.t("save","save");
x.t("defined","modifiers");
x.t("defined","type");
x.t("defined","command");
x.t("defined","gosu");
x.t("read-only","property");
x.t("values","static");
x.t("values","uses");
x.t("values","command");
x.t("values","extracted");
x.t("values","commandlineaccess");
x.t("values","values");
x.t("values","associated");
x.t("case","vary");
x.t("case","name");
x.t("print","args.hidden");
x.t("print","commandlineargs");
x.t("print","hello");
x.t("called","hidden");
x.t("called","test");
x.t("args","print");
x.t("args","//");
x.t("choose","directory");
x.t("two","properties");
x.t("two","ways");
x.t("two","levels");
x.t("note","access");
x.t("note","publicly-exposed");
x.t("itself","rather");
x.t("itself","names");
x.t("work","approach");
x.t("call","getrawargs");
x.t("package","static");
x.t("package","test");
x.t("package","name");
x.t("gw.lang.cli","uses");
x.t("gw.lang.cli","package");
x.t("gw.lang.cli","class");
x.t("non-boolean","property");
x.t("order","avoid");
x.t("immediately","line");
x.t("separated","space");
x.t("-username","jsmith");
x.t("individual","command");
x.t("following","example");
x.t("following","annotation");
x.t("following","command");
x.t("following","code");
x.t("following","value");
x.t("run","time");
x.t("run","following");
x.t("special","reason");
x.t("special","annotations");
x.t("used","single-dash");
x.t("class","defines");
x.t("class","populate");
x.t("class","commandlineaccess.initialize");
x.t("class","file");
x.t("class","initialize");
x.t("class","first");
x.t("class","participate");
x.t("class","simply");
x.t("class","upon");
x.t("class","args");
x.t("class","itself");
x.t("class","call");
x.t("class","following");
x.t("class","without");
x.t("setting","values");
x.t("//","boolean");
x.t("//","string");
x.t("symbol","keyword");
x.t("coercion","type");
x.t("coercion","exists");
x.t("jsmith","single");
x.t("jsmith","component");
x.t("jsmith","raw");
x.t("jsmith","instead");
x.t("jsmith","choose");
x.t("returns","array");
x.t("overrides","static");
x.t("levels","up");
x.t("pass","object");
x.t("bad","arguments");
x.t("associated","preceding");
x.t("names","options");
x.t("args.name","print");
x.t("without","pass");
x.t("behavior","secondary");
x.t("var","_name");
x.t("var","_hidden");
x.t("var","text_val=eval");
x.t("passing","custom");
x.t("intuitive","gosu");
x.t("visible","click");
x.t("visible","nice");
x.t("conventions","string");
x.t("exceptions","run");
x.t("@defaultvalue","string");
x.t("object","instance");
}
