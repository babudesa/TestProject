function FileData_Pairs(x)
{
x.t("example","following");
x.t("equal","relationship");
x.t("equal","false");
x.t("equal","therefore");
x.t("possible","string");
x.t("just","numbers");
x.t("relational","operators");
x.t("relational","expressions");
x.t("always","boolean");
x.t("java.lang.comparable","interface");
x.t("policyeffectivedate","false");
x.t("policyeffectivedate","true");
x.t("text_val.select","link");
x.t("support","types");
x.t("interface","just");
x.t("evaluates","false");
x.t("evaluates","true");
x.t("multiple","relatational");
x.t("multiple","values");
x.t("however","larger");
x.t("currentdate","policyeffectivedate");
x.t("link","directly");
x.t("objects","implements");
x.t("relationship","operands");
x.t("messsage","gosu");
x.t("operands","either");
x.t("add","parenthesis");
x.t("around","individual");
x.t("guide","gosu");
x.t("false","equal");
x.t("false","currentdate");
x.t("false","true");
x.t("false","entire");
x.t("false","second");
x.t("false","indicating");
x.t("false","zoo");
x.t("false","operator");
x.t("directly","page");
x.t("true","currentdate");
x.t("true","false");
x.t("true","true");
x.t("true","first");
x.t("true","zoo");
x.t("true","operator");
x.t("text_val.focus","text_val.select");
x.t("gosu","relational");
x.t("gosu","operators");
x.t("gosu","reference");
x.t("comparison","two");
x.t("tests","greater");
x.t("tests","two");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","syntax");
x.t("boolean","value");
x.t("compound","expression");
x.t("string","datetime");
x.t("string","together");
x.t("entire","expression");
x.t("second","expression");
x.t("error","occurred");
x.t("operators","support");
x.t("operators","expressions");
x.t("operators","compare");
x.t("syntax","expression1");
x.t("first","compound");
x.t("guidewire_selectall","var");
x.t("number","string");
x.t("datetime","data");
x.t("expression1","expression2");
x.t("function","guidewire_selectall");
x.t("implements","java.lang.comparable");
x.t("indicating","result");
x.t("ultimately","evaluates");
x.t("expression2","examples");
x.t("expressions","relational");
x.t("expressions","gosu");
x.t("expressions","function");
x.t("expressions","return");
x.t("expressions","greater");
x.t("expressions","less");
x.t("expressions","consist");
x.t("zoo","false");
x.t("zoo","true");
x.t("zoo","zoo");
x.t("zoo","apple");
x.t("types","objects");
x.t("types","result");
x.t("types","operator");
x.t("reference","guide");
x.t("return","boolean");
x.t("together","multiple");
x.t("greater","equal");
x.t("greater","relationship");
x.t("occurred","messsage");
x.t("less","equal");
x.t("less","relationship");
x.t("value","true");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("relatational","operators");
x.t("expression","example");
x.t("expression","evaluates");
x.t("expression","however");
x.t("expression","tests");
x.t("expression","ultimately");
x.t("expression","result");
x.t("page","error");
x.t("larger","expression");
x.t("data","types");
x.t("apple","true");
x.t("result","always");
x.t("result","false");
x.t("result","true");
x.t("result","comparison");
x.t("examples","expression");
x.t("values","add");
x.t("two","expressions");
x.t("numbers","relational");
x.t("following","types");
x.t("following","expression");
x.t("individual","expression");
x.t("either","number");
x.t("compare","multiple");
x.t("operator","possible");
x.t("operator","tests");
x.t("operator","operator");
x.t("therefore","false");
x.t("var","text_val=eval");
x.t("parenthesis","around");
x.t("consist","following");
}
