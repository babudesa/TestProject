function FileData_Pairs(x)
{
x.t("tells","gosu");
x.t("passed","parameter");
x.t("passed","directly");
x.t("looks","following");
x.t("looks","special");
x.t("example","suppose");
x.t("root",":test3");
x.t("root","var");
x.t("referencing","existing");
x.t("creation","function");
x.t("construct","instance");
x.t("transactions","examples");
x.t("transactions","following");
x.t("parameter","new");
x.t("parameter","non-readonly");
x.t("parameter","entity");
x.t("indicated","bundle");
x.t("properties","part");
x.t("properties","separate");
x.t("properties","object");
x.t("combined","data");
x.t("claim","claim");
x.t("claim","user");
x.t("claim","abc:demo_sample:1");
x.t("claim","bundle");
x.t("claim","submit");
x.t("claim",":claimid");
x.t("hashmap","java");
x.t("version","looks");
x.t("lists","basic");
x.t("lists","collections");
x.t("lists","behavior");
x.t("clear","object");
x.t("preferred","technique");
x.t("create","instance");
x.t("create","guidewire");
x.t("create","new");
x.t("create","entity");
x.t("business","entities");
x.t("business","data");
x.t("table","lists");
x.t("expressing","nested");
x.t("tree","xml");
x.t("simpletest.test2s.add","new");
x.t("simpletest.test2s.add","(test2)");
x.t("alternate","form");
x.t("instance","hashmap");
x.t("instance","type");
x.t("bundles","transactions");
x.t("bundles","bundles");
x.t("related","current");
x.t("testid","syntax");
x.t("name/value","pair");
x.t("name/value","pairs");
x.t("enum","class");
x.t("arguments","tells");
x.t("arguments","create");
x.t("arguments","new");
x.t("arguments","constructor");
x.t("java.util.hashmap","(8)");
x.t("simpletest","new");
x.t("simpletest",":id");
x.t("simpletest","simpletest.id");
x.t("user","change");
x.t("user","typical");
x.t("current","code");
x.t("current","database");
x.t("current","bundle");
x.t("creates","instance");
x.t("creates","string");
x.t("12","members");
x.t("nature","xml");
x.t("discussed","detail");
x.t("uses","new");
x.t("uses","types");
x.t("size-expression","new");
x.t("pair","following");
x.t("text_val.select","link");
x.t(":update","true");
x.t(":whenmanifestonly","scriptenvironment.when_empty_skip");
x.t("look","up");
x.t("type","construct");
x.t("type","type");
x.t("type","new");
x.t("type","gosu");
x.t("type","array");
x.t("type","java");
x.t("type","entity");
x.t("best","approach");
x.t("change","triggered");
x.t("open","curly");
x.t("close","brace");
x.t("expresses","nested");
x.t("basic","lists");
x.t("basic","hashmaps");
x.t("time","new");
x.t("time","object");
x.t("colon","multiple");
x.t("public","id");
x.t("multiple","properties");
x.t("multiple","name/value");
x.t("multiple","constructors");
x.t("followed","close");
x.t("form","look");
x.t("guidewire","business");
x.t("guidewire","entities");
x.t("guidewire","entity");
x.t("entities","claim");
x.t("entities","want");
x.t("apis","overriding");
x.t("default","behavior");
x.t("property","name");
x.t("myfilecontainer.basedir","dir");
x.t("test2.id","test");
x.t("new","claim");
x.t("new","lists");
x.t("new","java.util.hashmap");
x.t("new","simpletest");
x.t("new","test2");
x.t("new","java-type");
x.t("new","string");
x.t("new","array-type");
x.t("new","testtype");
x.t("new","my.company.filecontainer");
x.t("new","keyword");
x.t("new","xsd.test.testtype");
x.t("new","expression");
x.t("new","note");
x.t("new","entity");
x.t("new","operator");
x.t("new","object");
x.t("link","directly");
x.t("objects","simple");
x.t("objects","choose");
x.t("single","argument");
x.t(":destfile","jarfile");
x.t("element","access");
x.t("access","value");
x.t("want","reference");
x.t("details","alternate");
x.t("passes","arguments");
x.t("simpletest.test2s.get","(1)");
x.t("messsage","gosu");
x.t("infer","enum");
x.t("test1.number","simpletest.test4s.add");
x.t("assign","properties");
x.t("add","pairs");
x.t("jarfile","myfilecontainer.basedir");
x.t("jarfile",":basedir");
x.t(":color","red");
x.t("id","string");
x.t("guide","details");
x.t("guide","gosu");
x.t("initialized","new");
x.t("simple","version");
x.t("simple","constructor");
x.t("simple","child");
x.t("scriptenvironment.when_empty_skip","instead");
x.t("scriptenvironment.when_empty_skip","case");
x.t("test1.color","red");
x.t("sure","appropriate");
x.t("initializers","allow");
x.t("initializers","simplify");
x.t("initializers","compact");
x.t("simpletest.test3","blue");
x.t("collections","maps");
x.t("recommended","type");
x.t("directly","new");
x.t("directly","return");
x.t("directly","page");
x.t("sampleclaim","new");
x.t("commas","example");
x.t("true",":whenmanifestonly");
x.t("true","simpletest.test2s.get");
x.t("true",":test1");
x.t("true","myfilecontainer.whenmanifestonly");
x.t("test","simpletest.test2s.add");
x.t("test","new");
x.t("text_val.focus","text_val.select");
x.t("no","arguments");
x.t("no","initial");
x.t("creating","new");
x.t("name","colon");
x.t("name","equals");
x.t("name","pass");
x.t("property_name","value");
x.t("test1","new");
x.t("gosu","create");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","passes");
x.t("gosu","infer");
x.t("gosu","operators");
x.t("gosu","reference");
x.t("gosu","class");
x.t("constructor","creation");
x.t("constructor","open");
x.t("constructor","multiple");
x.t("constructor","call");
x.t("test2","test2.id");
x.t("test2","new");
x.t("test2","simpletest.test2s.get");
x.t("test2",":final");
x.t("test2",":id");
x.t("argument","new");
x.t("argument","omit");
x.t("part","creating");
x.t(":test1","new");
x.t("initializing","lists");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","parameter");
x.t("none","create");
x.t("constructs","new");
x.t("useful","combined");
x.t("useful","naturally");
x.t("java-type","[arguments]");
x.t("overriding","default");
x.t("declarations","especially");
x.t("brace","add");
x.t("brace","constructor");
x.t("myfilecontainer","new");
x.t(":test3","blue");
x.t("up","entity");
x.t("omit","new");
x.t("myfilecontainer.whenmanifestonly","scriptenvironment.when_empty_skip");
x.t("(test1)","simpletest.test3");
x.t("array","12");
x.t("array","guidewire");
x.t("array","three");
x.t("array","least");
x.t("string","creates");
x.t("string","argument");
x.t("string","array");
x.t("string","[12]");
x.t("allow","properties");
x.t("pairs","property");
x.t("pairs","commas");
x.t(".test1","new");
x.t("three","members");
x.t(":final","true");
x.t("(myclaim.bundle)","constructs");
x.t("simplify","code");
x.t("error","occurred");
x.t("array-type","size-expression");
x.t("array-type","[array-value-list]");
x.t("[array-value-list]","pass");
x.t("notice","property");
x.t("testtype",":color");
x.t("testtype",":test4s");
x.t("testtype","var");
x.t("operators","expressions");
x.t("syntax","new");
x.t("syntax","simple");
x.t("syntax","property_name");
x.t("syntax","initializing");
x.t("syntax","useful");
x.t("syntax","clearly");
x.t("syntax","rules");
x.t("syntax","nested");
x.t("syntax","object");
x.t("members","initialized");
x.t("members","no");
x.t("compact","clear");
x.t("especially","useful");
x.t("suppose","following");
x.t("red",":number");
x.t("red","//");
x.t("exposed","type");
x.t("initializer","syntax");
x.t("my.company.filecontainer",":destfile");
x.t("my.company.filecontainer","myfilecontainer.destfile");
x.t(".final","true");
x.t("clearly","expresses");
x.t("guidewire_selectall","var");
x.t("constructors","defined");
x.t("function","exposed");
x.t("function","guidewire_selectall");
x.t("approach","reference");
x.t("approach","general");
x.t("myfilecontainer.update","true");
x.t("technique","query");
x.t("expressions","new");
x.t("expressions","gosu");
x.t("expressions","function");
x.t("different","parameters");
x.t("words","assign");
x.t("dir",":update");
x.t("dir","myfilecontainer.update");
x.t("almost","cases");
x.t("instead","naturally");
x.t("instead","object");
x.t("types","numbers");
x.t("changes","claim");
x.t("changes","related");
x.t("(myclaim)","constructs");
x.t("xml","looks");
x.t("xml","nodes");
x.t("xml","data");
x.t("keyword","preferred");
x.t("keyword","var");
x.t("initial","values");
x.t("(1)",".test1");
x.t("(1)",".final");
x.t("reference","guidewire");
x.t("reference","guide");
x.t("reference","bundle");
x.t("reference","existing");
x.t("code","perhaps");
x.t("code","following");
x.t("code","using");
x.t("code","var");
x.t("override","bundle");
x.t("adds","time");
x.t("return","simpletest.toxml");
x.t("simpletest.toxml","instead");
x.t("simpletest.toxml","object");
x.t("least","constructor");
x.t("database","time");
x.t("database","new");
x.t("database","transaction");
x.t("(8)","creates");
x.t("triggered","rules");
x.t("given","claim");
x.t("xsd.test.testtype","test1.color");
x.t("java","type");
x.t("java","class");
x.t("bundle","passed");
x.t("bundle","parameter");
x.t("bundle","create");
x.t("bundle","best");
x.t("bundle","almost");
x.t("bundle","changes");
x.t("bundle","reference");
x.t("bundle","transaction");
x.t("bundle","management");
x.t("bundle","warning");
x.t("occurred","messsage");
x.t("extremely","careful");
x.t("rules","creating");
x.t("rules","run");
x.t("curly","add");
x.t("curly","brace");
x.t(":test2s","new");
x.t(":number","return");
x.t("existing","guidewire");
x.t("value","directly");
x.t("value","notice");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("simpletest.test4s.add","(test1)");
x.t("express","using");
x.t("[12]","creates");
x.t("perhaps","user");
x.t("generated","xml");
x.t("builder","gosu");
x.t("valid","gosu");
x.t("expression","words");
x.t("expression","result");
x.t(":basedir","dir");
x.t("clarifying","generated");
x.t("although","generally");
x.t("page","error");
x.t("separate","multiple");
x.t("nodes","clarifying");
x.t("typical","pass");
x.t("information","bundles");
x.t("data","example");
x.t("data","structure");
x.t("data","entity");
x.t("query","builder");
x.t("query","entity");
x.t("defined","case");
x.t("appropriate","test1.number");
x.t("appropriate","otherwise");
x.t("meaning","none");
x.t("examples","expression");
x.t("result","new");
x.t("nested","nature");
x.t("nested","objects");
x.t("nested","object");
x.t("equals","values");
x.t("case","gosu");
x.t("case","syntax");
x.t("values","name/value");
x.t("values","followed");
x.t("values","new");
x.t("submit","database");
x.t("blue",":test2s");
x.t("blue","//");
x.t("choose","constructor");
x.t("structure","syntax");
x.t(":claimid","testid");
x.t(":test4s","new");
x.t("maps","discussed");
x.t("maps","specialized");
x.t("specialized","initializer");
x.t("transaction","indicated");
x.t("transaction","current");
x.t("transaction","apis");
x.t("transaction","bundle");
x.t("transaction","entity");
x.t("otherwise","pass");
x.t("non-readonly","bundle");
x.t("note","new");
x.t("note","gosu");
x.t("note","constructs");
x.t("note","(myclaim.bundle)");
x.t("note","(myclaim)");
x.t("note","adds");
x.t("note","entity");
x.t("cases","approach");
x.t("numbers","objects");
x.t("call","create");
x.t("immediately","new");
x.t("naturally","expressing");
x.t("naturally","express");
x.t("entity","passed");
x.t("entity","create");
x.t("entity","current");
x.t("entity","type");
x.t("entity","new");
x.t("entity","name");
x.t("entity","given");
x.t("entity","although");
x.t("entity","information");
x.t("entity","query");
x.t("entity","passing");
x.t("following","table");
x.t("following","syntax");
x.t("following","code");
x.t("following","var");
x.t("management","information");
x.t("run","submit");
x.t("xsd.test","var");
x.t("special","syntax");
x.t("class","new");
x.t("class","array");
x.t("class","java");
x.t("class","appropriate");
x.t("general","sure");
x.t("warning","extremely");
x.t("using","bundle");
x.t("using","xsd.test");
x.t("//","simple");
x.t("//","note");
x.t("pass","arguments");
x.t("pass","public");
x.t("pass","single");
x.t(":id","root");
x.t(":id","test");
x.t("operator","create");
x.t("operator","gosu");
x.t("operator","syntax");
x.t("operator","different");
x.t("operator","override");
x.t("operator","bundle");
x.t("operator","valid");
x.t("operator","meaning");
x.t("behavior","new");
x.t("behavior","bundle");
x.t("child","element");
x.t("var","claim");
x.t("var","simpletest");
x.t("var","sampleclaim");
x.t("var","test1");
x.t("var","test2");
x.t("var","text_val=eval");
x.t("var","myfilecontainer");
x.t("passing","no");
x.t("simpletest.id","root");
x.t("hashmaps","referencing");
x.t("[arguments]","new");
x.t("careful","using");
x.t("object","tree");
x.t("object","initializers");
x.t("object","declarations");
x.t("object","initializer");
x.t("object","expressions");
x.t("object","immediately");
x.t("object","object");
x.t("myfilecontainer.destfile","jarfile");
x.t("(test2)","simpletest.test2s.add");
x.t("detail","basic");
x.t("generally","recommended");
}
