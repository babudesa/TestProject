function FileData_Pairs(x)
{
x.t("interfaces","interfaces");
x.t("interfaces","example");
x.t("interfaces","rather");
x.t("interfaces","create");
x.t("interfaces","enclosing");
x.t("interfaces","interface");
x.t("interfaces","type");
x.t("interfaces","top");
x.t("interfaces","list");
x.t("interfaces","gosu");
x.t("interfaces","originally");
x.t("interfaces","implementing");
x.t("interfaces","polymorphism");
x.t("interfaces","information");
x.t("interfaces","anonymous");
x.t("interfaces","including");
x.t("included","type");
x.t("supports","interfaces");
x.t("supports","full");
x.t("supports","static");
x.t("supports","instance");
x.t("supports","access");
x.t("supports","increment");
x.t("supports","in-line");
x.t("supports","operators");
x.t("supports","language");
x.t("supports","powerful");
x.t("supports","explicit");
x.t("supports","object-oriented");
x.t("supports","exact");
x.t("supports","additional");
x.t("supports","compatibility");
x.t("supports","--");
x.t("supports","native");
x.t("coding","lists");
x.t("coding","patterns");
x.t("example","example");
x.t("example","method");
x.t("example","try");
x.t("example","creates");
x.t("example","uses");
x.t("example","interface");
x.t("example","addresslist");
x.t("example","myclass.propertyname");
x.t("example","remove");
x.t("example","api");
x.t("example","simple");
x.t("example","no");
x.t("example","common");
x.t("example","gosu");
x.t("example","declares");
x.t("example","standard");
x.t("example","increment");
x.t("example","suppose");
x.t("example","means");
x.t("example","concise");
x.t("example","private");
x.t("example","_callbackhandler.execute");
x.t("example","previous");
x.t("example","100");
x.t("example","java");
x.t("example","consider");
x.t("example","condition");
x.t("example","template");
x.t("example","print");
x.t("example","mentioned");
x.t("example","mark");
x.t("example","following");
x.t("example","using");
x.t("example","//");
x.t("example","class");
x.t("example","names");
x.t("example","var");
x.t("example","math");
x.t("looks","familiar");
x.t("looks","following");
x.t("looks","var");
x.t("statements","mirror");
x.t("statements","gosu");
x.t("statements","myrecord.open");
x.t("statements","expressions");
x.t("statements","identical");
x.t("statements","code");
x.t("statements","impermissible");
x.t("statements","information");
x.t("statements","var");
x.t("readable","english");
x.t("readable","lets");
x.t("readable","syntax");
x.t("readable","writable");
x.t("readable","var");
x.t("zero-based","index");
x.t("three-part","declaration");
x.t("four","lines");
x.t("particularly","java");
x.t("complex","structured");
x.t("complex","object");
x.t(".length","expansion");
x.t(".length","assume");
x.t("equal","comparison");
x.t("composition","gosu");
x.t("composition","allows");
x.t("composition","concurrency");
x.t("composition","using");
x.t("safely","concurrently-accessed");
x.t("safely","put");
x.t("concurrently-accessed","data");
x.t("cleanup","scoping");
x.t("cleanup","code");
x.t("cleanup","exceptions");
x.t("unlike","java");
x.t("email","address");
x.t("email","design");
x.t("email","report");
x.t("fault","handling");
x.t("properties","rather");
x.t("properties","obj.property1.property2.property3");
x.t("properties","property");
x.t("properties","gosu");
x.t("properties","methods");
x.t("properties","parameters");
x.t("properties","contrast");
x.t("properties","types");
x.t("properties","read/write");
x.t("properties","code");
x.t("properties","previous");
x.t("properties","names");
x.t("properties","object");
x.t("improvements","generics");
x.t("improvements","java");
x.t("else","statements");
x.t("else","else");
x.t("else","myrecord.open");
x.t("else","//yet");
x.t("falling","next");
x.t("method","public");
x.t("method","@webservice");
x.t("method","signature");
x.t("method","name");
x.t("method","gosu");
x.t("method","declares");
x.t("method","parameters");
x.t("method","declarations");
x.t("method","indicate");
x.t("method","allows");
x.t("method","first");
x.t("method","code");
x.t("method","main");
x.t("method","invocation");
x.t("method","runs");
x.t("method","information");
x.t("method","called");
x.t("method","call");
x.t("method","signatures");
x.t("method","class");
x.t("method","pass");
x.t("method","without");
x.t("parameter","block");
x.t("parameter","name");
x.t("parameter","passing");
x.t("collections-related","code");
x.t("chaining","series");
x.t("construct","_clipboardpart");
x.t("construct","id");
x.t("construct","omit");
x.t("construct","keyword");
x.t("creation","example");
x.t("delimited","commas");
x.t("possible","throw");
x.t("possible","code");
x.t("possible","paths");
x.t("(circle.radius)","//");
x.t("integers","reference");
x.t("illustrate","differences");
x.t("provide","metadata");
x.t("spec.datasourcename",".na");
x.t("publishing","web");
x.t("human","language");
x.t("easy","create");
x.t("easy","collections");
x.t("easy","gosu");
x.t("easy","implementation");
x.t("easy","read");
x.t("easy","separate");
x.t("easy","data");
x.t("easy","learn");
x.t("day","production");
x.t("just","type");
x.t("just","gosu");
x.t("just","period");
x.t("just","java");
x.t("just","numbers");
x.t("just","call");
x.t("just","object");
x.t("right","side");
x.t("pattern","introduces");
x.t("pattern","declaring");
x.t("version","easier");
x.t("version","class");
x.t("=1","20");
x.t("name/type","pairs");
x.t("abcd","ab");
x.t("gw.example.myclass","//");
x.t("rare","globally-available");
x.t("protected","meaning");
x.t("rather","setter");
x.t("rather","text");
x.t("rather","methods");
x.t("rather","object");
x.t("defines","object");
x.t("simplified","syntax");
x.t("serialization","object");
x.t("hypothetical","geocoding");
x.t("spec.options.resultmask","//");
x.t("shares","16-bit");
x.t("implement","interface");
x.t("implement","contract");
x.t("implement","comparable");
x.t("implement","java");
x.t("every","day");
x.t("every","case");
x.t("every","item");
x.t("console","default");
x.t("console","print");
x.t("console","using");
x.t("infers","type");
x.t("within","loop");
x.t("within","java");
x.t("lists","objects");
x.t("lists","detailed");
x.t("lists","maps");
x.t("pre-existing","java");
x.t("full","support");
x.t("full","access");
x.t("full","list");
x.t("full","soap");
x.t("full","feature");
x.t("full","package");
x.t("comment","property");
x.t("===","false");
x.t("===","three");
x.t("===","operators");
x.t("sensitivity","gosu");
x.t("sensitivity","compound");
x.t("(subtract-and-assign)","gosu");
x.t("needs","ensure");
x.t("wish","catch");
x.t("annotation","method");
x.t("annotation","control");
x.t("ments","omit");
x.t("cast","string");
x.t("files","describe");
x.t("publishes","simple");
x.t("static","method");
x.t("static","variables");
x.t("static","property");
x.t("static","text");
x.t("static","new");
x.t("static","methods");
x.t("static","inner");
x.t("static","quality");
x.t("static","members");
x.t("static","keyword");
x.t("static","reference");
x.t("static","variable");
x.t("static","typing");
x.t("static","import");
x.t("static","member");
x.t("static","var");
x.t("built-in","enhancements");
x.t("built-in","print");
x.t("create","new");
x.t("create","list");
x.t("create","custom");
x.t("create","in-line");
x.t("create","class");
x.t("_name","field");
x.t("_name","_id");
x.t("_name","string");
x.t("vars","private");
x.t("refer","world");
x.t("refer","object");
x.t("description","var");
x.t("triple-equals","operator");
x.t("se","annotations");
x.t("tree","structured");
x.t("tree","untyped");
x.t("10","//some");
x.t("10","print");
x.t("10","//");
x.t("10","var");
x.t("variables","properties");
x.t("variables","static");
x.t("variables","type");
x.t("variables","calculations");
x.t("variables","public");
x.t("variables","expose");
x.t("variables","lazyvar");
x.t("variables","during");
x.t("variables","methods");
x.t("variables","functions");
x.t("variables","private");
x.t("variables","reference");
x.t("variables","java");
x.t("variables","compile-time");
x.t("variables","dynamic");
x.t("variables","class");
x.t("keep","gosu");
x.t("required","initializing");
x.t("required","class");
x.t("myrecord.mychildlist.length","10");
x.t("mappedtoc","mymap");
x.t("instance","variables");
x.t("instance","initialization");
x.t("instance","variable");
x.t("instance","run");
x.t("instance","class");
x.t("instance","object");
x.t("n.id","12345");
x.t("once","instances");
x.t("related","information");
x.t("always","form");
x.t("always","compares");
x.t("key","caches");
x.t("key","value");
x.t("ensures","template");
x.t(".na","spec.options");
x.t("kinds","types");
x.t("arguments","example");
x.t("arguments","construct");
x.t("arguments","name/type");
x.t("arguments","no");
x.t("arguments","parentheses");
x.t("arguments","returns");
x.t("action","perform");
x.t("improve","java");
x.t("improve","power");
x.t("java.util.hashmap","makes");
x.t("abc","construct");
x.t("abc","initialization");
x.t("abc","//");
x.t("abc","class");
x.t("gw.example.queues.jms","//");
x.t("modifiers","interfaces");
x.t("modifiers","public");
x.t("modifiers","gosu");
x.t("void","possible");
x.t("void","setradius");
x.t("obj.property1.property2.property3","information");
x.t("obj.property1.property2.property3","cases");
x.t("thename","gosu");
x.t("enclosing","type");
x.t("enclosing","class");
x.t("loadablething","implements");
x.t("asterisk","followed");
x.t("comparisons","general");
x.t("double","getradius");
x.t("double","quotes");
x.t("double","dradius");
x.t("block\u2019s","body");
x.t("topic","involves");
x.t("topic","var");
x.t("user","user");
x.t("user","true");
x.t("user","boolean");
x.t("user","allowed");
x.t("setter","getter");
x.t("setter","methods");
x.t("setter","function");
x.t("setter","absent");
x.t("null-safe","property");
x.t("comma-delimited","list");
x.t("creates","concrete");
x.t("creates","explicit");
x.t("creates","arraylist");
x.t("easy-to-read","syntax");
x.t("easy-to-read","using");
x.t("try","user.enter");
x.t("try","dosomethingthatmaythrowioexception");
x.t("try","catch");
x.t("consortium","web");
x.t("program","outputs");
x.t("program","ming");
x.t("outputs","text");
x.t("outputs","plus");
x.t("uses","example");
x.t("uses","gw.example.myclass");
x.t("uses","hypothetical");
x.t("uses","static");
x.t("uses","gw.example.queues.jms");
x.t("uses","statement");
x.t("uses","lock");
x.t("uses","built-");
x.t("uses","soap.addressid.entity.findrange");
x.t("uses","enhancement");
x.t("uses","delegate");
x.t("uses","keyword");
x.t("uses","java");
x.t("uses","java.util");
x.t("uses","soap.addressid.entity.findoptions");
x.t("uses","equals");
x.t("uses","soap.addressid.entity.address");
x.t("uses","following");
x.t("uses","soap.addressid.entity.findaddressspecification");
x.t("uses","object");
x.t("helps","keep");
x.t("semicolons","line");
x.t("semicolons","unnecessary");
x.t("line","four");
x.t("line","gosu");
x.t("line","takes");
x.t("line","ending");
x.t("skipped","entirely");
x.t("implemented","either");
x.t("later","file");
x.t("createreport","user");
x.t("conditional","execution");
x.t("basically","java");
x.t("field","readable");
x.t("field","result");
x.t("fully-qualify","type");
x.t("increment-by-one","operator");
x.t("shows","compact");
x.t("cache","cache");
x.t("cache","cached");
x.t("cache","up");
x.t("cache","simply");
x.t("cache","similar");
x.t("cache","values");
x.t("cache","class");
x.t("cache","object");
x.t("aspect","program");
x.t("text_val.select","link");
x.t("support","easy-to-read");
x.t("support","large");
x.t("support","gosu");
x.t("support","expressions");
x.t("support","xml");
x.t("support","java");
x.t("tell","delimiters");
x.t("statement","possible");
x.t("statement","skipped");
x.t("statement","followed");
x.t("statement","list");
x.t("statement","test");
x.t("statement","gosu");
x.t("statement","throw");
x.t("statement","end");
x.t("statement","return");
x.t("statement","variable");
x.t("statement","already");
x.t("statement","expression");
x.t("statement","prevent");
x.t("statement","otherwise");
x.t("statement","terminators");
x.t("statement","pass");
x.t("statement","var");
x.t("interface","method");
x.t("interface","just");
x.t("interface","interface");
x.t("interface","block");
x.t("interface","name");
x.t("interface","definition");
x.t("interface","iloadable");
x.t("interface","exactly");
x.t("interface","constructor");
x.t("interface","delegate");
x.t("interface","means");
x.t("interface","implements");
x.t("interface","different");
x.t("interface","keyword");
x.t("interface","implementation");
x.t("interface","enhancements");
x.t("interface","package");
x.t("(methods)","properties");
x.t("mystrings.sortby","str");
x.t("look","getters");
x.t("look","up");
x.t(":update","true");
x.t(":whenmanifestonly","scriptenvironment.when_empty_skip");
x.t("supply","multiple");
x.t("people","call");
x.t("calculates","input");
x.t("bar","finally");
x.t("bar","annotations");
x.t("bar","pass");
x.t("sender","email");
x.t("spec.options","new");
x.t("introduction","welcome");
x.t("type","properties");
x.t("type","rather");
x.t("type","implement");
x.t("type","cast");
x.t("type","create");
x.t("type","static");
x.t("type","void");
x.t("type","uses");
x.t("type","explicitly");
x.t("type","want");
x.t("type","java.util.string");
x.t("type","includes");
x.t("type","list");
x.t("type","inheritance");
x.t("type","declare");
x.t("type","name");
x.t("type","gosu");
x.t("type","exists");
x.t("type","declarations");
x.t("type","address");
x.t("type","int");
x.t("type","string");
x.t("type","java.util.arraylist");
x.t("type","period");
x.t("type","syntax");
x.t("type","feature");
x.t("type","function");
x.t("type","words");
x.t("type","clipboardpart");
x.t("type","safe");
x.t("type","explicit");
x.t("type","loader");
x.t("type","reference");
x.t("type","previous");
x.t("type","variable");
x.t("type","declaration");
x.t("type","already");
x.t("type","exception");
x.t("type","information");
x.t("type","inference");
x.t("type","result");
x.t("type","called");
x.t("type","work");
x.t("type","based");
x.t("type","cases");
x.t("type","system");
x.t("type","using");
x.t("type","arraylist");
x.t("type","names");
x.t("type","object");
x.t("basic","pattern");
x.t("basic","gosu");
x.t("basic","authentication");
x.t("addresslist","type");
x.t("addresslist","index");
x.t("addresslist","variable");
x.t("addresslist","print");
x.t("getters","setters");
x.t("wildcard","means");
x.t("wildcard","symbol");
x.t("tends","simplify");
x.t("evaluates","true");
x.t("evaluates","run");
x.t("times","want");
x.t("providing","single");
x.t("calculations","gosu");
x.t("time","example");
x.t("time","advanced");
x.t("time","gosu");
x.t("time","first");
x.t("time","code");
x.t("time","issue");
x.t("time","values");
x.t("time","even");
x.t("colon","contrast");
x.t("colon","character");
x.t("enhancing","native");
x.t("hierarchy","create");
x.t("hierarchy","expansion");
x.t("hierarchy","syntax");
x.t("calls","method");
x.t("calls","property");
x.t("calls","block");
x.t("calls","constructor");
x.t("public","properties");
x.t("public","void");
x.t("public","double");
x.t("public","function");
x.t("public","private");
x.t("public","code");
x.t("public","although");
x.t("t.depth","cases");
x.t("explicitly","note");
x.t("getter","setter");
x.t("getter","property");
x.t("getter","gosu");
x.t("getter","methods");
x.t("getter","absent");
x.t("getter","using");
x.t("left","period");
x.t("left","object");
x.t("0.5","gosu");
x.t("capitalizing","language");
x.t("mymethod","define");
x.t("calculation","middle");
x.t("external","systems");
x.t("external","system");
x.t("soap.addressid.api.findservicesoap","//");
x.t("response","api");
x.t("java.lang.system.out","//");
x.t("@webservice","example");
x.t("@webservice","class");
x.t("extend","java");
x.t("multiple","interfaces");
x.t("multiple","method");
x.t("multiple","parameters");
x.t("multiple","types");
x.t("multiple","threads");
x.t("followed","method");
x.t("followed","comma-delimited");
x.t("followed","property");
x.t("followed","gosu");
x.t("followed","period");
x.t("followed","variable");
x.t("followed","value");
x.t("followed","class");
x.t("followed","object");
x.t("a.id","index");
x.t("bb","mylist");
x.t("bb","var");
x.t("mystrings","abcd");
x.t("sort","list");
x.t("yellow","red");
x.t("precede","variable");
x.t("execution","switch");
x.t("form","statements");
x.t("form","obj.property1.property2.property3");
x.t("form","exists");
x.t("form","expression");
x.t("expose","properties");
x.t("expose","internal");
x.t("expose","actual");
x.t("expose","data");
x.t("myclass.propertyname","//");
x.t("however","unlike");
x.t("however","need");
x.t("however","following");
x.t("however","item");
x.t("down","object");
x.t("compiles","runs");
x.t("keywords","variable");
x.t("thread-safe","declares");
x.t("cached","gosu");
x.t("coerces","string");
x.t("inside","template");
x.t("total","myvariable.calculatemytotal");
x.t("coordinates.longitude","information");
x.t("text","console");
x.t("text","calculation");
x.t("text","substitution");
x.t("text","invalid");
x.t("text","hello");
x.t("text","data");
x.t("text","values");
x.t("text","literals");
x.t("text","var");
x.t("text","math");
x.t("substitution","coding");
x.t("automatically","assigns");
x.t("automatically","notifies");
x.t("primitive","types");
x.t("primitive","class");
x.t("default","public");
x.t("default","gosu");
x.t("default","output");
x.t("default","case");
x.t("default","print");
x.t("default","special");
x.t("default","//constructors");
x.t("put","step");
x.t("put","data");
x.t("put","break");
x.t("require","break");
x.t("inject","code");
x.t("apis","support");
x.t("apis","external");
x.t("apis","return");
x.t("apis","concurrency");
x.t("apis","chainable");
x.t("property","readable");
x.t("property","properties");
x.t("property","every");
x.t("property","annotation");
x.t("property","getter");
x.t("property","property");
x.t("property","think");
x.t("property","objects");
x.t("property","new");
x.t("property","initialization");
x.t("property","id");
x.t("property","someprop");
x.t("property","name");
x.t("property","declarations");
x.t("property","accessors");
x.t("property","accessor");
x.t("property","function");
x.t("property","instead");
x.t("property","detailed");
x.t("property","return");
x.t("property","n.name");
x.t("property","named");
x.t("property","depending");
x.t("property","--");
x.t("property","read-only");
x.t("property","print");
x.t("property","called");
x.t("property","corresponding");
x.t("property","write-only");
x.t("property","paths");
x.t("property","var");
x.t("myfilecontainer.basedir","dir");
x.t("requirement","java");
x.t("original","method");
x.t("original","list");
x.t("convert","gosu");
x.t("protect","access");
x.t("protect","data");
x.t("lock","static");
x.t("lock","calls");
x.t("lazyvar","class");
x.t("lazyvar.make","\\-");
x.t("wraps","string");
x.t("wraps","exception");
x.t("structured","tree");
x.t("structured","data");
x.t("limitations","kinds");
x.t("link","directly");
x.t("objects","example");
x.t("objects","safely");
x.t("objects","implement");
x.t("objects","triple-equals");
x.t("objects","uses");
x.t("objects","support");
x.t("objects","literally");
x.t("objects","primitives");
x.t("objects","gosu");
x.t("objects","contain");
x.t("objects","encapsulating");
x.t("objects","represents");
x.t("objects","double-equals");
x.t("objects","languages");
x.t("objects","java");
x.t("objects","assembled");
x.t("objects","several");
x.t("objects","proxies");
x.t("objects","sorts");
x.t("objects","insert");
x.t("details","modifiers");
x.t("details","creating");
x.t("details","gosu");
x.t("details","important");
x.t("details","native");
x.t("details","delegating");
x.t("new","instance");
x.t("new","abc");
x.t("new","soap.addressid.api.findservicesoap");
x.t("new","list");
x.t("new","gosu");
x.t("new","address");
x.t("new","java.util.arraylist");
x.t("new","my.company.filecontainer");
x.t("new","findaddressspecification");
x.t("new","findrange");
x.t("new","clipboardpart");
x.t("new","keyword");
x.t("new","findoptions");
x.t("new","runtimeexception");
x.t("new","reentrantlock");
x.t("new","myverylongclassname");
x.t("new","arraylist");
x.t("english","words");
x.t("loop","gosu");
x.t("loop","following");
x.t("want","identity");
x.t("want","display");
x.t("want","know");
x.t("want","index");
x.t("want","import");
x.t("want","compare");
x.t("access","zero-based");
x.t("access","modifiers");
x.t("access","multiple");
x.t("access","avoid");
x.t("access","control");
x.t("access","java-based");
x.t("access","java");
x.t("access","shared");
x.t("access","classes");
x.t("access","series");
x.t("start","character");
x.t("getting","setting");
x.t("items","original");
x.t("items","using");
x.t(":destfile","jarfile");
x.t("think","shortcut");
x.t("prefix","example");
x.t("signature","setname");
x.t("signature","isvisible");
x.t("signature","getname");
x.t("circle","following");
x.t("contract","specifies");
x.t("extracts","specific");
x.t("advanced","type");
x.t("advanced","usage");
x.t("differences","==");
x.t("differences","operators");
x.t("comparable","interface");
x.t("==","===");
x.t("==","true");
x.t("==","operator");
x.t("literally","reference");
x.t("element","additionally");
x.t("_clipboardpart","new");
x.t("_clipboardpart","represents");
x.t("single","interface");
x.t("user.age","21");
x.t("parseexception","public");
x.t("certain","types");
x.t("top","java");
x.t("top","class");
x.t("includes","included");
x.t("includes","built-in");
x.t("includes","variables");
x.t("includes","following");
x.t("includes","special");
x.t("includes","outcomes");
x.t("java.util.string","native");
x.t("nearly","every");
x.t("block","parameter");
x.t("block","implement");
x.t("block","calculates");
x.t("block","start");
x.t("block","shortcut");
x.t("block","multiplies");
x.t("block","return");
x.t("block","value");
x.t("block","sorts");
x.t("block","case");
x.t("block","alternative");
x.t("sortby","methods");
x.t("hierarchies","later");
x.t("hierarchies","wildcard");
x.t("delimiter","return");
x.t("t.height","t.width");
x.t("john","addition");
x.t("john","//");
x.t("usually","want");
x.t("java.util.concurrent","gosu");
x.t("synchronizes","handles");
x.t("non-exception","object");
x.t("document","structured");
x.t("geocoding","service");
x.t("publish","publish");
x.t("publish","web");
x.t("messsage","gosu");
x.t("generics","advanced");
x.t("generics","generics");
x.t("generics","gosu");
x.t("generics","implementation");
x.t("generics","abstracts");
x.t("signs","lines");
x.t("signs","compare");
x.t("list","interfaces");
x.t("list","example");
x.t("list","arguments");
x.t("list","type");
x.t("list","however");
x.t("list","new");
x.t("list","initialization");
x.t("list","expansion");
x.t("list","surrounded");
x.t("list","makes");
x.t("list","strings");
x.t("list","string");
x.t("list","array");
x.t("list","length");
x.t("list","works");
x.t("list","parentheses");
x.t("list","appropriate");
x.t("list","print");
x.t("list","run");
x.t("list","class");
x.t("list","containing");
x.t("list","returns");
x.t("list","gets");
x.t("braces","gosu");
x.t("braces","expression");
x.t("need","fully-qualify");
x.t("need","braces");
x.t("need","handle");
x.t("need","include");
x.t("one-method","interfaces");
x.t("file","add");
x.t("file","package");
x.t("file","xsd");
x.t("file","produce");
x.t("initialization","line");
x.t("initialization","during");
x.t("initialization","methods");
x.t("initialization","string");
x.t("couple","lines");
x.t("proper","capitalization");
x.t("proper","ties");
x.t("(npe)","expression");
x.t("myclass.methodname","//");
x.t("operands","exact");
x.t("standards","capitalizing");
x.t("utilities","class");
x.t("lazy","concurrent");
x.t("lazy","variable");
x.t("lets","catch");
x.t("able","property");
x.t("machine","includes");
x.t("machine","(jvm)");
x.t("simplifies","common");
x.t("simplifies","code");
x.t("around","text");
x.t("around","objects");
x.t("around","world");
x.t("add","statement");
x.t("add","list");
x.t("add","features");
x.t("add","lines");
x.t("add","characters");
x.t("add","functions");
x.t("add","variable");
x.t("add","either");
x.t("add","following");
x.t("during","declaration");
x.t("during","object");
x.t("beginning","block\u2019s");
x.t("built-","java");
x.t("resortedstrings.each","str");
x.t("improves","basic");
x.t("improves","common");
x.t("id","property");
x.t("id","id");
x.t("id","string");
x.t("id","read-only");
x.t("id","//functions");
x.t("jarfile","myfilecontainer.basedir");
x.t("jarfile",":basedir");
x.t("expansion","comparisons");
x.t("expansion","list");
x.t("expansion","useful");
x.t("expansion","array");
x.t("expansion","operator");
x.t("expect","familiar");
x.t(".equals","==");
x.t("assignment","statements");
x.t("assignment","full");
x.t("assignment","details");
x.t("someprop","object");
x.t("s2","total");
x.t("strict","syntax");
x.t("endpoint","soap");
x.t("guide","gosu");
x.t("simple","example");
x.t("simple","interface");
x.t("simple","type");
x.t("simple","gosu");
x.t("simple","web");
x.t("simple","especially");
x.t("simple","syntax");
x.t("simple","function");
x.t("simple","try/catch/finally");
x.t("simple","class");
x.t("iterated","variable\u2019s");
x.t("remove","break");
x.t("results","var");
x.t("scriptenvironment.when_empty_skip","details");
x.t("scriptenvironment.when_empty_skip","first");
x.t("scriptenvironment.when_empty_skip","choose");
x.t("assume","names");
x.t("check","pointer");
x.t("identity","reference");
x.t("inheritance","hierarchy");
x.t("isalariedemployee","iofficer");
x.t("wrap","method");
x.t("api","method");
x.t("api","new");
x.t("api",".findaddress");
x.t("api","provides");
x.t("api",".setloggingoutputstream");
x.t("api","consumer");
x.t("testing","web");
x.t("features","easy");
x.t("features","shorthand");
x.t("features","object-oriented");
x.t("features","unavailable");
x.t("soap","fault");
x.t("soap","support");
x.t("soap","response");
x.t("soap","apis");
x.t("soap","endpoint");
x.t("soap","outgoing");
x.t("soap","client");
x.t("soap","port");
x.t("large","companies");
x.t("throws","parseexception");
x.t("throws","null");
x.t("throws","class");
x.t("collections","lists");
x.t("collections","access");
x.t("collections","gosu");
x.t("collections","enhancement");
x.t("collections","classes");
x.t("collections","special");
x.t("initializers","simplify");
x.t("recommended","gosu");
x.t("become","properties");
x.t("false","case");
x.t("false","two");
x.t("mirror","common");
x.t("@throws","annotation");
x.t("@throws","java.text.parseexception");
x.t("interceptor","method");
x.t("parse","xml");
x.t("soap.addressid.entity.findrange","//");
x.t("directly","uses");
x.t("directly","gosu");
x.t("directly","template");
x.t("directly","page");
x.t("built","top");
x.t("declare","type");
x.t("declare","function");
x.t("declare","variable");
x.t("declare","exception");
x.t("declare","package");
x.t("iterable","object");
x.t("test","type");
x.t("test","class");
x.t("test","item");
x.t("ddddd","strings.sortby");
x.t("true","interfaces");
x.t("true","method");
x.t("true","refer");
x.t("true",":whenmanifestonly");
x.t("true","operands");
x.t("true","myfilecontainer.whenmanifestonly");
x.t("true","two");
x.t("true","var");
x.t("primitives","native");
x.t("requires","statement");
x.t("requires","string");
x.t("requires","return");
x.t("commas","just");
x.t("globally-available","function");
x.t("imported","uses");
x.t("handle","cleanup");
x.t("handle","methods");
x.t("handle","specific");
x.t("handle","ioexception");
x.t("locks","reentrant");
x.t("locks","custom");
x.t("locks","java");
x.t("locks","using");
x.t("addr.results.findresult.foundlocation","[0]");
x.t("writing","testing");
x.t("virtually","human");
x.t("text_val.focus","text_val.select");
x.t("familiar","else");
x.t("familiar","java");
x.t("familiar","programmers");
x.t("familiar","programming");
x.t("preserving","static");
x.t("common","pattern");
x.t("common","text");
x.t("common","operators");
x.t("common","control");
x.t("common","java");
x.t("simplest","var");
x.t("name","example");
x.t("name","method");
x.t("name","just");
x.t("name","static");
x.t("name","interface");
x.t("name","type");
x.t("name","followed");
x.t("name","property");
x.t("name","myclass.methodname");
x.t("name","no");
x.t("name","gosu");
x.t("name","argument");
x.t("name","part");
x.t("name","string");
x.t("name","period");
x.t("name","add-and-assign");
x.t("name","//exposes");
x.t("name","define");
x.t("name","language");
x.t("name","matches");
x.t("name","typical");
x.t("name","optionally");
x.t("name","starts");
x.t("name","//");
x.t("name","specify");
x.t("no","arguments");
x.t("no","semicolons");
x.t("no","delimiter");
x.t("no","error");
x.t("no","explicit");
x.t("no","argu");
x.t("no","exceptions");
x.t("libraries","directly");
x.t("libraries","addition");
x.t("creating","lists");
x.t("creating","property");
x.t("creating","instantiating");
x.t("definition","defines");
x.t("definition","uses");
x.t("definition","@webservice");
x.t("definition","file");
x.t("definition","declare");
x.t("definition","gosu");
x.t("definition","define");
x.t("definition","variable");
x.t("definition","print");
x.t("definition","package");
x.t("definition","separated");
x.t("definition","using");
x.t("path","contains");
x.t("property_name","follows");
x.t("functionality","considered");
x.t("iloadable","function");
x.t("faster","write");
x.t("consequence","rewrite");
x.t("demonstrates","adding");
x.t("wide","web");
x.t(".findaddress","spec");
x.t("gosu","supports");
x.t("gosu","looks");
x.t("gosu","statements");
x.t("gosu","coding");
x.t("gosu","example");
x.t("gosu","properties");
x.t("gosu","version");
x.t("gosu","shares");
x.t("gosu","every");
x.t("gosu","infers");
x.t("gosu","variables");
x.t("gosu","ensures");
x.t("gosu","null-safe");
x.t("gosu","program");
x.t("gosu","uses");
x.t("gosu","outputs");
x.t("gosu","statement");
x.t("gosu","introduction");
x.t("gosu","type");
x.t("gosu","evaluates");
x.t("gosu","calls");
x.t("gosu","compiles");
x.t("gosu","automatically");
x.t("gosu","put");
x.t("gosu","wraps");
x.t("gosu","details");
x.t("gosu","objects");
x.t("gosu","includes");
x.t("gosu","block");
x.t("gosu","synchronizes");
x.t("gosu","generics");
x.t("gosu","proper");
x.t("gosu","standards");
x.t("gosu","improves");
x.t("gosu","features");
x.t("gosu","parse");
x.t("gosu","directly");
x.t("gosu","requires");
x.t("gosu","common");
x.t("gosu","familiar");
x.t("gosu","gosu");
x.t("gosu","direct");
x.t("gosu","welcome");
x.t("gosu","provides");
x.t("gosu","shortcut");
x.t("gosu","constructs");
x.t("gosu","continue");
x.t("gosu","makes");
x.t("gosu","compound");
x.t("gosu","enhancement");
x.t("gosu","programs");
x.t("gosu","permits");
x.t("gosu","manipulate");
x.t("gosu","thread");
x.t("gosu","functions");
x.t("gosu","null-tolerant");
x.t("gosu","request");
x.t("gosu","falls");
x.t("gosu","blocks");
x.t("gosu","equivalent");
x.t("gosu","syntax");
x.t("gosu","operators");
x.t("gosu","throw");
x.t("gosu","feature");
x.t("gosu","first");
x.t("gosu","function");
x.t("gosu","statically");
x.t("gosu","annotations");
x.t("gosu","templates");
x.t("gosu","expressions");
x.t("gosu","editor");
x.t("gosu","substitutes");
x.t("gosu","language");
x.t("gosu","types");
x.t("gosu","xml");
x.t("gosu","switch");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","languages");
x.t("gosu","case-sensitive");
x.t("gosu","invalid");
x.t("gosu","adds");
x.t("gosu","instantiate");
x.t("gosu","fully");
x.t("gosu","general-purpose");
x.t("gosu","java");
x.t("gosu","null");
x.t("gosu","similar");
x.t("gosu","usage");
x.t("gosu","exposes");
x.t("gosu","extends");
x.t("gosu","expression");
x.t("gosu","valid");
x.t("gosu","runs");
x.t("gosu","read");
x.t("gosu","interact");
x.t("gosu","runtimeexception");
x.t("gosu","case");
x.t("gosu","called");
x.t("gosu","enhancements");
x.t("gosu","decides");
x.t("gosu","character");
x.t("gosu","classes");
x.t("gosu","call");
x.t("gosu","following");
x.t("gosu","special");
x.t("gosu","style");
x.t("gosu","run");
x.t("gosu","class");
x.t("gosu","similarly");
x.t("gosu","additionally");
x.t("gosu","enforces");
x.t("gosu","var");
x.t("gosu","generates");
x.t("gosu","object");
x.t("typed","variables");
x.t("typed","gosu");
x.t("retains","power");
x.t("exactly","method");
x.t("exactly","argument");
x.t("iterate","across");
x.t("searches","subset");
x.t("constructor","method");
x.t("constructor","arguments");
x.t("constructor","abc");
x.t("constructor","creates");
x.t("constructor","requires");
x.t("constructor","based");
x.t("constructor","object");
x.t("follows","class");
x.t("references","point");
x.t("references","recipient");
x.t("enables","certain");
x.t("virtual","machine");
x.t("initializing","variable");
x.t("direct","equivalent");
x.t("surrounded","curly");
x.t("perform","item");
x.t("declares","static");
x.t("declares","cache");
x.t("declares","concurrent");
x.t("declares","return");
x.t("declares","data");
x.t("declares","package");
x.t("s.length","minlength");
x.t("list.add","hello");
x.t("argument","list");
x.t("argument","gosu");
x.t("argument","types");
x.t("argument","class");
x.t("part","type");
x.t("part","class");
x.t("obj.calculate","t.height");
x.t("qualify","class");
x.t("comparison","==");
x.t("comparison","operators");
x.t("comparison","words");
x.t("concrete","instance");
x.t("handles","cleanup");
x.t("handles","type");
x.t("handles","aspects");
x.t("avoid","data");
x.t("avoid","checked");
x.t("reentrant","objects");
x.t("reentrant","locks");
x.t("reentrant","object");
x.t("custom","gosu");
x.t("custom","reentrant");
x.t("custom","annotations");
x.t("_somevar.somemethod","//");
x.t("logging","output");
x.t("welcome","gosu");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("compatible","implement");
x.t("compatible","java");
x.t("boolean","operators");
x.t("boolean","return");
x.t("boolean","value");
x.t("useful","method");
x.t("useful","chaining");
x.t("useful","methods");
x.t("useful","powerful");
x.t("parameters","directly");
x.t("parameters","parameters");
x.t("parameters","allows");
x.t("parameters","include");
x.t("parameters","generate");
x.t("parameters","including");
x.t("parameters","validated");
x.t("methods","construct");
x.t("methods","properties");
x.t("methods","look");
x.t("methods","interface");
x.t("methods","type");
x.t("methods","multiple");
x.t("methods","convert");
x.t("methods","details");
x.t("methods","list");
x.t("methods","become");
x.t("methods","gosu");
x.t("methods","natural");
x.t("methods","radius");
x.t("methods","blocks");
x.t("methods","means");
x.t("methods","instead");
x.t("methods","return");
x.t("methods","java");
x.t("methods","defined");
x.t("methods","values");
x.t("methods","class");
x.t("shortcut","create");
x.t("shortcut","expose");
x.t("shortcut","one-method");
x.t("shortcut","creating");
x.t("shortcut","anonymous");
x.t("inner","classes");
x.t("inner","class");
x.t("provides","simplified");
x.t("provides","full");
x.t("provides","access");
x.t("provides","feature");
x.t("provides","several");
x.t("provides","native");
x.t("provides","special");
x.t("provides","following");
x.t("provides","class");
x.t("favorite","java");
x.t("introduces","standard");
x.t("_id","id");
x.t("_id","allows");
x.t("_id","string");
x.t("_id","//");
x.t("getradius","//");
x.t("exists","once");
x.t("exists","type");
x.t("exists","languages");
x.t("constructs","first");
x.t("(lru)","cache");
x.t("plus","equals");
x.t("alternatively","gosu");
x.t("sign","followed");
x.t("makes","easy");
x.t("makes","property");
x.t("makes","list");
x.t("makes","gosu");
x.t("makes","useful");
x.t("makes","especially");
x.t("makes","easier");
x.t("makes","typical");
x.t("instantiating","classes");
x.t("instantiating","object");
x.t("declarations","static");
x.t("declarations","variables");
x.t("declarations","required");
x.t("declarations","basically");
x.t("declarations","public");
x.t("declarations","declarations");
x.t("declarations","variable");
x.t("declarations","note");
x.t("standard","equal");
x.t("standard","recommended");
x.t("standard","gosu");
x.t("standard","compact");
x.t("standard","style");
x.t("omit","enclosing");
x.t("omit","details");
x.t("omit","function");
x.t("omit","parentheses");
x.t("continue","favorite");
x.t("myfilecontainer","new");
x.t("up","cache");
x.t("up","lines");
x.t("up","findaddressspecification");
x.t("up","quickly");
x.t("pi","syntax");
x.t("compound","type");
x.t("compound","assignment");
x.t("compound","operators");
x.t("increment","variable");
x.t("increment","decrement");
x.t("gw.api.web.scopes","help");
x.t("indicate","exceptions");
x.t("combine","static");
x.t("50","spec.options.resultmask");
x.t("imperative","languages");
x.t("imperative","java");
x.t("arrays","lists");
x.t("arrays","iterable");
x.t("arrays","consider");
x.t("address","spec.datasourcename");
x.t("address","sender");
x.t("address","addresslist");
x.t("address","objects");
x.t("address","new");
x.t("address","address.postalcode");
x.t("address","ad");
x.t("allows","easy");
x.t("allows","wrap");
x.t("allows","omit");
x.t("allows","concise");
x.t("allows","method\u2019s");
x.t("allows","represent");
x.t("allows","class");
x.t("generalize","task");
x.t("strings","yellow");
x.t("strings","aa");
x.t("strings","sorts");
x.t("enhancement","methods");
x.t("originally","implemented");
x.t("originally","call");
x.t("resortedstrings","mystrings.sortby");
x.t(".sort","information");
x.t("myfilecontainer.whenmanifestonly","scriptenvironment.when_empty_skip");
x.t("accessors","dynamically");
x.t("loading","information");
x.t("map","objects");
x.t("web","consortium");
x.t("web","services");
x.t("web","page");
x.t("web","service");
x.t("(jvm)","gosu");
x.t("critical","systems");
x.t("string","method");
x.t("string","thename");
x.t("string","type");
x.t("string","objects");
x.t("string","new");
x.t("string","name");
x.t("string","gosu");
x.t("string","argument");
x.t("string","_id");
x.t("string","write");
x.t("string","concurrent");
x.t("string","string");
x.t("string","addition");
x.t("string","//vars");
x.t("string","next");
x.t("string","iterates");
x.t("string","return");
x.t("string","//_id");
x.t("string","similar");
x.t("string","value");
x.t("string","values");
x.t("string","print");
x.t("string","note");
x.t("string","literals");
x.t("string","//");
x.t("string","var");
x.t("appearances","example");
x.t("appearances","variable");
x.t("int","gosu");
x.t("int","expressions");
x.t("int","explicit");
x.t("lines","readable");
x.t("lines","uses");
x.t("lines","declare");
x.t("lines","contain");
x.t("lines","code");
x.t("lines","following");
x.t("pairs","separated");
x.t("allow","add");
x.t("allow","callers");
x.t("shorthand","syntax");
x.t("programs","functions");
x.t("write","gosu");
x.t("write","web");
x.t("write","xml");
x.t("write","data");
x.t("natural","syntax");
x.t("accessor","getter");
x.t("accessor","function");
x.t("accessor","paths");
x.t("array","list");
x.t("array","expansion");
x.t("array","originally");
x.t("array","feature");
x.t("concurrent","variables");
x.t("concurrent","cache");
x.t("concurrent","access");
x.t("caches","result");
x.t("aspects","object");
x.t("addressid","uses");
x.t("coordinates","addr.results.findresult.foundlocation");
x.t("claimcenter","publish");
x.t("in-line","gosu");
x.t("in-line","string");
x.t("in-line","functions");
x.t("in-line","templates");
x.t("in-line","dynamic");
x.t("addition","gosu");
x.t("addition","in-line");
x.t("characters","semicolons");
x.t("characters","access");
x.t("characters","mark");
x.t("flow","gosu");
x.t("flow","structures");
x.t("flow","code");
x.t("structures","thread");
x.t("structures","including");
x.t("permits","readable");
x.t("understand","loop");
x.t("prints","text");
x.t("prints","java");
x.t("prints","result");
x.t("multiplies","number");
x.t("earlier","topic");
x.t("earlier","gosu");
x.t("earlier","takes");
x.t("earlier","examples");
x.t("manipulate","java");
x.t("contain","length");
x.t("contain","repeated");
x.t("stream","example");
x.t("radius","property");
x.t("three","equals");
x.t("thread","needs");
x.t("thread","safe");
x.t("thread","interacts");
x.t("input","value");
x.t("outgoing","call");
x.t("functions","properties");
x.t("functions","(methods)");
x.t("functions","property");
x.t("functions","declare");
x.t("functions","gosu");
x.t("functions","blocks");
x.t("functions","attached");
x.t("functions","called");
x.t("functions","class");
x.t("functions","pass");
x.t("quotes","gosu");
x.t("simplify","real-world");
x.t("simplify","code");
x.t("setname","string");
x.t("null-tolerant","property");
x.t("quality","means");
x.t("math.pi","0.5");
x.t("in-memory","gosu");
x.t("in-memory","object");
x.t("failed","enter");
x.t("metadata","gosu");
x.t("text-based","format");
x.t("request","claimcenter");
x.t("request","actually");
x.t("request","var");
x.t("error","contrast");
x.t("error","occurred");
x.t("error","print");
x.t("blocks","however");
x.t("blocks","generics");
x.t("blocks","collections");
x.t("blocks","gosu");
x.t("blocks","in-line");
x.t("blocks","define");
x.t("blocks","information");
x.t("blocks","following");
x.t("blocks","//");
x.t("blocks","incredibly");
x.t("delimiters","around");
x.t("equivalent","static");
x.t("equivalent","java");
x.t("equivalent","following");
x.t("notice","collection");
x.t("notice","difference");
x.t("//some","logic");
x.t("logic","else");
x.t("logic","gosu");
x.t("strongly","typed");
x.t("contrast","new");
x.t("contrast","java");
x.t("falls","next");
x.t("body","finally");
x.t("//vars","private");
x.t("(n.name)","//");
x.t("isvisible","gosu");
x.t("tion","(npe)");
x.t("independent","type");
x.t("independent","whether");
x.t("point","in-memory");
x.t("supported","variable");
x.t("encapsulating","shared");
x.t("(bar)","catch");
x.t("display","text");
x.t("especially","easy");
x.t("especially","powerful");
x.t("especially","programmers");
x.t("especially","compared");
x.t("operators","always");
x.t("operators","increment-by-one");
x.t("operators","form");
x.t("operators","operators");
x.t("operators","java");
x.t("operators","variable");
x.t("operators","expression");
x.t("operators","optionally");
x.t("operators","work");
x.t("operators","additionally");
x.t("syntax","looks");
x.t("syntax","provide");
x.t("syntax","easy");
x.t("syntax","type");
x.t("syntax","property");
x.t("syntax","access");
x.t("syntax","getting");
x.t("syntax","simple");
x.t("syntax","creating");
x.t("syntax","property_name");
x.t("syntax","reentrant");
x.t("syntax","combine");
x.t("syntax","simply");
x.t("syntax","code");
x.t("syntax","slightly");
x.t("syntax","ad");
x.t("syntax","native");
x.t("syntax","using");
x.t("syntax","var");
x.t("syntax","math.cos");
x.t("syntax","difference");
x.t("next","gosu");
x.t("next","case");
x.t("next","class");
x.t("finally","add");
x.t("finally","//");
x.t("java.util.arraylist","java.util.hashmap");
x.t("java.util.arraylist","list.add");
x.t("java.util.arraylist","following");
x.t("red","blue");
x.t("compact","readable");
x.t("compact","syntax");
x.t("suppose","want");
x.t("suppose","java");
x.t("suppose","following");
x.t("period","example");
x.t("period","characters");
x.t("period","character");
x.t("period","symbol");
x.t("members","type");
x.t("members","gosu");
x.t("members","return");
x.t("members","previous");
x.t("string.length","property");
x.t("know","two");
x.t("add-and-assign","operator");
x.t("delegate","_clipboardpart");
x.t("delegate","represents");
x.t("delegate","responsibility");
x.t("delegate","keyword");
x.t("delegate","implementation");
x.t("delegate","represent");
x.t("delegate","_employee");
x.t("findaddress","//");
x.t("spec.options.range.count","50");
x.t("closures","lambda");
x.t("feature","property");
x.t("feature","works");
x.t("feature","java");
x.t("feature","information");
x.t("feature","called");
x.t("concise","gosu");
x.t("concise","code");
x.t("jump","end");
x.t("collection","apis");
x.t("collection","classes");
x.t("means","create");
x.t("means","hierarchy");
x.t("means","gosu");
x.t("means","methods");
x.t("means","straightforward");
x.t("means","following");
x.t("means","omitting");
x.t("means","member");
x.t("my.company.filecontainer",":destfile");
x.t("my.company.filecontainer","myfilecontainer.destfile");
x.t("first","line");
x.t("first","left");
x.t("first","time");
x.t("first","coerces");
x.t("first","usage");
x.t("exposed","read");
x.t("dradius","gosu");
x.t("affects","expressions");
x.t("throw","user");
x.t("throw","statement");
x.t("throw","new");
x.t("throw","keyword");
x.t("throw","code");
x.t("throw","null");
x.t("throw","exception");
x.t("reason","expose");
x.t("minimum","functionality");
x.t("iclipboardpart","construct");
x.t("iclipboardpart","interface");
x.t("iclipboardpart","delegate");
x.t("allowed","bar");
x.t("findaddressspecification","entitiy");
x.t("findaddressspecification","//");
x.t("findaddressspecification","var");
x.t("guidewire_selectall","var");
x.t("initializes","list");
x.t("initializes","variable");
x.t("side","equals");
x.t("side","operator");
x.t("control","modifiers");
x.t("control","flow");
x.t("control","behavior");
x.t("myrecord.open","myrecord.mychildlist.length");
x.t("myrecord.open","//some");
x.t("number","items");
x.t("number","types");
x.t("number","itself");
x.t("number","var");
x.t("iterates","across");
x.t("myuser","pass");
x.t("//exposes","_name");
x.t("excep","tion");
x.t("coordinates.latitude","print");
x.t("p1","string");
x.t("p1","call");
x.t("function","static");
x.t("function","createreport");
x.t("function","uses");
x.t("function","mymethod");
x.t("function","property");
x.t("function","id");
x.t("function","definition");
x.t("function","gosu");
x.t("function","part");
x.t("function","string");
x.t("function","guidewire_selectall");
x.t("function","define");
x.t("function","keyword");
x.t("function","variable");
x.t("function","bodies");
x.t("function","declaration");
x.t("function","echoinputargs");
x.t("function","print");
x.t("function","called");
x.t("function","printout");
x.t("function","using");
x.t("function","returns");
x.t("function","paths");
x.t("function","load");
x.t("statically","typed");
x.t("callers","inject");
x.t("length","field");
x.t("length","string");
x.t("length","string.length");
x.t("implements","interfaces");
x.t("implements","interface");
x.t("implements","people");
x.t("implements","iloadable");
x.t("implements","iclipboardpart");
x.t("implements","keyword");
x.t("minlength",".sort");
x.t("minlength","var");
x.t("myfilecontainer.update","true");
x.t("mywindow","implements");
x.t("design","code");
x.t("design","template");
x.t("java-based","classes");
x.t("approach","gosu");
x.t("approach","similar");
x.t("annotations","arguments");
x.t("annotations","simple");
x.t("annotations","gosu");
x.t("annotations","define");
x.t("annotations","types");
x.t("annotations","interceptors");
x.t("annotations","optionally");
x.t(".setloggingoutputstream","java.lang.system.out");
x.t("address.postalcode","94062");
x.t("findrange","spec.options.range.count");
x.t("expressions","delimited");
x.t("expressions","right");
x.t("expressions","gosu");
x.t("expressions","means");
x.t("expressions","include");
x.t("expressions","template");
x.t("expressions","result");
x.t("expressions","enhancements");
x.t("expressions","separated");
x.t("templates","simplifies");
x.t("templates","declare");
x.t("templates","gosu");
x.t("templates","native");
x.t("templates","optional");
x.t("templates","using");
x.t("words","evaluates");
x.t("words","times");
x.t("words","need");
x.t("words","boolean");
x.t("words","code");
x.t("words","valid");
x.t("define","static");
x.t("define","variables");
x.t("define","setter");
x.t("define","property");
x.t("define","block");
x.t("define","interceptor");
x.t("define","constructor");
x.t("define","custom");
x.t("customize","example");
x.t("against","represent");
x.t("dir",":update");
x.t("dir","myfilecontainer.update");
x.t("private","default");
x.t("private","delegate");
x.t("private","internal");
x.t("editor","automatically");
x.t("different","objects");
x.t("different","scope");
x.t("different","numbers");
x.t("different","var");
x.t("different","object");
x.t("safe","static");
x.t("safe","gosu");
x.t("safe","references");
x.t("safe","affects");
x.t("safe","define");
x.t("safe","sense");
x.t("safe","note");
x.t("safe","run");
x.t("safe","notable");
x.t("whether","type");
x.t("whether","references");
x.t("whether","defined");
x.t("person","var");
x.t("straightforward","code");
x.t("specifies","minimum");
x.t("represents","keywords");
x.t("represents","isalariedemployee");
x.t("represents","name");
x.t("represents","iclipboardpart");
x.t("double-equals","operator");
x.t("cannot","increment");
x.t("clipboardpart","example");
x.t("clipboardpart","class");
x.t("middle","text");
x.t("substitutes","run");
x.t("extensible","markup");
x.t("http://www.w3.org/xml","gosu");
x.t("spec.inputaddress","address");
x.t("longitude","coordinates.longitude");
x.t("unicode","character");
x.t("language","refer");
x.t("language","primitive");
x.t("language","==");
x.t("language","element");
x.t("language","built");
x.t("language","gosu");
x.t("language","handles");
x.t("language","feature");
x.t("language","itself");
x.t("language","elements");
x.t("language","including");
x.t("powerful","improvements");
x.t("powerful","enhancing");
x.t("powerful","expands");
x.t("powerful","file-based");
x.t("1.5","allows");
x.t("1.5","syntax");
x.t("index","within");
x.t("index","addresslist");
x.t("index","print");
x.t("index","note");
x.t("java.util.list","significantly");
x.t("arbitrary","code");
x.t("step","separate");
x.t("instead","properties");
x.t("instead","providing");
x.t("instead","function");
x.t("instead","compare");
x.t("myobj.name","john");
x.t("myobj.name","myobj.name");
x.t("setradius","double");
x.t("detailed","example");
x.t("detailed","code");
x.t("capitalization","makes");
x.t("responsibility","implementing");
x.t("report","information");
x.t("types","method");
x.t("types","integers");
x.t("types","implement");
x.t("types","arguments");
x.t("types","aspect");
x.t("types","look");
x.t("types","extend");
x.t("types","precede");
x.t("types","objects");
x.t("types","usually");
x.t("types","gosu");
x.t("types","argument");
x.t("types","methods");
x.t("types","especially");
x.t("types","types");
x.t("types","follow");
x.t("types","return");
x.t("types","information");
x.t("types","defined");
x.t("types","run");
x.t("types","using");
x.t("types","even");
x.t("xml","files");
x.t("xml","document");
x.t("xml","xml");
x.t("xml","schema");
x.t("xml","native");
x.t("xml","elements");
x.t("xml","using");
x.t("xml","xsd");
x.t("compile","time");
x.t("declaring","variable");
x.t("implementing","interface");
x.t("keyword","example");
x.t("keyword","just");
x.t("keyword","interface");
x.t("keyword","followed");
x.t("keyword","declare");
x.t("keyword","equivalent");
x.t("keyword","delegate");
x.t("keyword","function");
x.t("keyword","java");
x.t("keyword","package");
x.t("keyword","following");
x.t("keyword","class");
x.t("keyword","//");
x.t("internal","protected");
x.t("internal","variables");
x.t("internal","implementation");
x.t("identical","analogous");
x.t("real-world","code");
x.t("properly","handle");
x.t("handling","following");
x.t("handling","including");
x.t("format","strict");
x.t("format","throws");
x.t("findoptions","spec.options.range");
x.t("object-oriented","easy");
x.t("object-oriented","programming");
x.t("explicit","type");
x.t("explicit","gosu");
x.t("explicit","runtimeexception");
x.t("explicit","anonymous");
x.t("works","primitive");
x.t("works","sortby");
x.t("works","arrays");
x.t("works","similarly");
x.t("switch","statements");
x.t("switch","statement");
x.t("switch","case");
x.t("aa","bb");
x.t("aa","ddddd");
x.t("simply","declare");
x.t("simply","comparing");
x.t("simply","call");
x.t("simply","returns");
x.t("read/write","read-only");
x.t("important","gosu");
x.t("important","note");
x.t("scope","example");
x.t("scope","semantics");
x.t("java-defined","reentrant");
x.t("rewrite","previous");
x.t("entitiy","var");
x.t("calling","web");
x.t("reference","just");
x.t("reference","guide");
x.t("reference","in-memory");
x.t("reference","types");
x.t("reference","simply");
x.t("reference","value");
x.t("code","example");
x.t("code","safely");
x.t("code","readable");
x.t("code","method");
x.t("code","easy");
x.t("code","shows");
x.t("code","uses");
x.t("code","expose");
x.t("code","user.age");
x.t("code","couple");
x.t("code","preserving");
x.t("code","path");
x.t("code","demonstrates");
x.t("code","gosu");
x.t("code","part");
x.t("code","makes");
x.t("code","prints");
x.t("code","independent");
x.t("code","initializes");
x.t("code","customize");
x.t("code","easier");
x.t("code","interacts");
x.t("code","import");
x.t("code","circle.radius");
x.t("code","examples");
x.t("code","called");
x.t("code","note");
x.t("code","myverylongclassname");
x.t("code","typically");
x.t("code","call");
x.t("code","following");
x.t("code","paths");
x.t("code","var");
x.t("code","clean");
x.t("code","item");
x.t("code","matching");
x.t("languages","particularly");
x.t("languages","support");
x.t("languages","require");
x.t("languages","property");
x.t("languages","makes");
x.t("languages","call");
x.t("languages","including");
x.t("languages","notable");
x.t("loader","native");
x.t("ming","languages");
x.t("ming","information");
x.t("end","switch");
x.t("end","case");
x.t("end","var");
x.t("task","algorithm");
x.t("_callbackhandler.execute","gosu");
x.t("enable","gosu");
x.t("ab","abc");
x.t("follow","variable");
x.t("case-sensitive","code");
x.t("invalid","statements");
x.t("invalid","form");
x.t("invalid","format");
x.t("scoping","classes");
x.t("notification","email");
x.t("client","api");
x.t("addr","api");
x.t("16-bit","unicode");
x.t("adds","useful");
x.t("adds","additional");
x.t("adds","following");
x.t("assigns","variables");
x.t("safety","static");
x.t("return","statement");
x.t("return","type");
x.t("return","_somevar.somemethod");
x.t("return","_id");
x.t("return","map");
x.t("return","string");
x.t("return","p1");
x.t("return","keyword");
x.t("return","types");
x.t("return","value");
x.t("return","reportutils.newreport");
x.t("return","expression");
x.t("return","result");
x.t("java-like","syntax");
x.t("instantiate","java");
x.t("fully","compatible");
x.t("slightly","different");
x.t("designing","public");
x.t("thus","cannot");
x.t("throwablesubclass","example");
x.t("interchange","information");
x.t("consumer","gosu");
x.t("general-purpose","programming");
x.t("100","compatible");
x.t("100","blocks");
x.t("previous","example");
x.t("previous","throw");
x.t("previous","examples");
x.t("ad","addresslist");
x.t("ad","type");
x.t("known","squaring");
x.t("square","(10)");
x.t("square","number-");
x.t("method\u2019s","implementation");
x.t("sorted","strings.where");
x.t("exact","type");
x.t("exact","reference");
x.t("issue","happens");
x.t("issue","generally");
x.t("n.name","john");
x.t("matches","original");
x.t("memory","works");
x.t("least","recently");
x.t("schema","definition");
x.t("java","interfaces");
x.t("java","three-part");
x.t("java","example");
x.t("java","method");
x.t("java","just");
x.t("java","full");
x.t("java","static");
x.t("java","type");
x.t("java","objects");
x.t("java","details");
x.t("java","throws");
x.t("java","collections");
x.t("java","no");
x.t("java","gosu");
x.t("java","virtual");
x.t("java","obj.calculate");
x.t("java","compatible");
x.t("java","methods");
x.t("java","makes");
x.t("java","allows");
x.t("java","addition");
x.t("java","blocks");
x.t("java","collection");
x.t("java","1.5");
x.t("java","language");
x.t("java","types");
x.t("java","code");
x.t("java","adds");
x.t("java","import");
x.t("java","exception");
x.t("java","although");
x.t("java","monitor");
x.t("java","classes");
x.t("java","package");
x.t("java","following");
x.t("java","class");
x.t("java","pass");
x.t("java","versions");
x.t("variable","parameter");
x.t("variable","statement");
x.t("variable","lock");
x.t("variable","assignment");
x.t("variable","simplest");
x.t("variable","name");
x.t("variable","gosu");
x.t("variable","instantiating");
x.t("variable","declarations");
x.t("variable","makes");
x.t("variable","standard");
x.t("variable","strongly");
x.t("variable","means");
x.t("variable","function");
x.t("variable","words");
x.t("variable","language");
x.t("variable","important");
x.t("variable","previous");
x.t("variable","variable");
x.t("variable","null");
x.t("variable","declaration");
x.t("variable","throwable");
x.t("variable","using");
x.t("variable","similarly");
x.t("variable","definitions");
x.t("variable","var");
x.t("variable","object");
x.t("despite","appearances");
x.t("variable\u2019s","type");
x.t("20","gosu");
x.t("(10)","//");
x.t("mylist","aa");
x.t("mylist","[0]");
x.t("parentheses","gosu");
x.t("parentheses","annotations");
x.t("parentheses","obj.createreport");
x.t("repeated","information");
x.t("actual","class");
x.t("//_id","exposed");
x.t("(n.id)","//");
x.t("bodies","following");
x.t("bit-oriented","operators");
x.t("kind","type");
x.t("ensure","protect");
x.t("quickly","thread-safe");
x.t("recently","used");
x.t("enter","bar");
x.t("java\u2019s","try");
x.t("documentation","class");
x.t("occurred","messsage");
x.t("programmers","familiar");
x.t("programmers","imperative");
x.t("typing","example");
x.t("typing","imperative");
x.t("typing","blocks");
x.t("typing","var");
x.t("compared","statically-typed");
x.t("null","statement");
x.t("null","want");
x.t("null","gosu");
x.t("null","safe");
x.t("null","pointer");
x.t("null","tolerant");
x.t("curly","braces");
x.t("polymorphism","gosu");
x.t("rules","method");
x.t("rules","methods");
x.t("consider","previous");
x.t("consider","java");
x.t("concurrency","apis");
x.t("concurrency","gosu");
x.t("concurrency","design");
x.t("concurrency","exceptions");
x.t("21","throw");
x.t("existing","xml");
x.t(".latlong","print");
x.t("/no","need");
x.t("mymap","gosu");
x.t("mymap","shorthand");
x.t("mymap","var");
x.t("instances","static");
x.t("instances","type");
x.t("instances","property");
x.t("null-safety","behavior");
x.t("include","full");
x.t("include","variables");
x.t("include","type");
x.t("synchronize","protect");
x.t("assembled","graph");
x.t("address.subdivision=","ca");
x.t("spec.options.range","new");
x.t("latitude","coordinates.latitude");
x.t("lambda","expressions");
x.t("additional","compound");
x.t("additional","powerful");
x.t("power","safety");
x.t("power","readability");
x.t("easier","access");
x.t("easier","understand");
x.t("easier","read");
x.t("similar","least");
x.t("similar","java");
x.t("similar","java\u2019s");
x.t("similar","rules");
x.t("value","method");
x.t("value","key");
x.t("value","cache");
x.t("value","type");
x.t("value","public");
x.t("value","add");
x.t("value","gosu");
x.t("value","pi");
x.t("value","words");
x.t("value","different");
x.t("value","following");
x.t("value","myresult");
x.t("value","equality");
x.t("reportutils.newreport","user");
x.t("named","name");
x.t("named","addressid");
x.t("named","visible");
x.t("usage","static");
x.t("usage","gosu");
x.t("usage","annotations");
x.t("graphs","extracts");
x.t("interacts","xml");
x.t("interacts","data");
x.t("main","work");
x.t("usa","address.subdivision=");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","composition");
x.t("implementation","variables");
x.t("implementation","objects");
x.t("implementation","generalize");
x.t("implementation","iclipboardpart");
x.t("implementation","100");
x.t("declaration","example");
x.t("declaration","=1");
x.t("declaration","property");
x.t("declaration","language");
x.t("declaration","explicit");
x.t("declaration","adding");
x.t("several","features");
x.t("several","levels");
x.t("(namespace)","class");
x.t("specific","property");
x.t("specific","exception");
x.t("specific","classes");
x.t("specific","checked");
x.t("invocation","gosu");
x.t("depending","whether");
x.t("writable","setter");
x.t("writable","name");
x.t("writable","means");
x.t("compatibility","java");
x.t("java.util","package");
x.t("java.util","//");
x.t("--","name");
x.t("--","(decrement-by-one)");
x.t("already","imported");
x.t("already","scope");
x.t("proxies","objects");
x.t("involves","concurrent");
x.t("throwing","exceptions");
x.t("soap.addressid.entity.findoptions","uses");
x.t("send","request");
x.t("programming","language");
x.t("programming","languages");
x.t("programming","using");
x.t("native","support");
x.t("native","soap");
x.t("native","gosu");
x.t("native","web");
x.t("native","string");
x.t("native","in-line");
x.t("native","in-memory");
x.t("native","xml");
x.t("native","java");
x.t("exception","wish");
x.t("exception","related");
x.t("exception","type");
x.t("exception","user.age");
x.t("exception","iterable");
x.t("exception","gosu");
x.t("exception","throw");
x.t("exception","handling");
x.t("exception","runtimeexception");
x.t("condition","test");
x.t("sorts","results");
x.t("sorts","length");
x.t(".each","str");
x.t("chainable","readability");
x.t("exposes","_name");
x.t("exposes","getter");
x.t("exposes","property");
x.t("exposes","methods");
x.t("extends","improves");
x.t("import","statement");
x.t("import","web");
x.t("import","feature");
x.t("import","specific");
x.t("import","native");
x.t("lying","object");
x.t("compilation","error");
x.t("user.enter","(bar)");
x.t("generate","customized");
x.t("deserialization","basic");
x.t("actually","request");
x.t("actually","send");
x.t("systems","basic");
x.t("systems","critical");
x.t("systems","call");
x.t("hello","gosu");
x.t("hello","java");
x.t("hello","world");
x.t("expression","statements");
x.t("expression","example");
x.t("expression","list");
x.t("expression","gosu");
x.t("expression","prints");
x.t("expression","thus");
x.t("expression","return");
x.t("expression","valid");
x.t("expression","information");
x.t("expression","mentioned");
x.t("expression","returns");
x.t("expression","pass");
x.t("expression","var");
x.t("read","uses");
x.t("read","id");
x.t("read","retains");
x.t("read","write");
x.t("read","concise");
x.t("read","information");
x.t("//yet","logic");
x.t("although","gosu");
x.t("although","syntax");
x.t("although","languages");
x.t("represent","action");
x.t("represent","handle");
x.t("represent","character");
x.t("takes","list");
x.t("takes","no");
x.t("takes","exactly");
x.t("takes","up");
x.t("[0]",".latlong");
x.t("[0]","cc");
x.t(":basedir","dir");
x.t("circle.radius","//");
x.t("considered","compatible");
x.t("runs","method");
x.t("runs","within");
x.t("runs","faster");
x.t("runs","enables");
x.t("runs","template");
x.t("valid","type");
x.t("valid","invalid");
x.t("valid","var");
x.t("clauses","properly");
x.t("throwable","need");
x.t("template","parameters");
x.t("template","expressions");
x.t("template","generate");
x.t("template","expression");
x.t("template","output");
x.t("template","following");
x.t("template","var");
x.t("services","soap");
x.t("services","gosu");
x.t("services","(soap)");
x.t("authentication","soap");
x.t("ca","spec.inputaddress");
x.t("echoinputargs","p1");
x.t("(soap)","publishing");
x.t("page","error");
x.t("page","http://www.w3.org/xml");
x.t("compile-time","type");
x.t("str","notice");
x.t("str","works");
x.t("str","information");
x.t("str","print");
x.t("str","str.length");
x.t("people\u2019s","code");
x.t("separate","lines");
x.t("separate","internal");
x.t("output","stream");
x.t("output","show");
x.t("output","call");
x.t("ties","dynamic");
x.t("dynamic","calculations");
x.t("dynamic","getter");
x.t("dynamic","templates");
x.t("getname","returns");
x.t("good","reason");
x.t("cosine","function");
x.t("impermissible","expression");
x.t("compositional","model");
x.t("corruption","topic");
x.t("help","synchronize");
x.t("nodes","cases");
x.t("show","full");
x.t("myserviceapi","function");
x.t("information","interfaces");
x.t("information","composition");
x.t("information","se");
x.t("information","type");
x.t("information","property");
x.t("information","access");
x.t("information","generics");
x.t("information","collections");
x.t("information","writing");
x.t("information","gosu");
x.t("information","blocks");
x.t("information","extensible");
x.t("information","calling");
x.t("information","java");
x.t("information","concurrency");
x.t("information","including");
x.t("information","object");
x.t("typical","gosu");
x.t("typical","control");
x.t("squaring","number");
x.t("number-","/no");
x.t("interact","pre-existing");
x.t("cc","var");
x.t("data","properties");
x.t("data","apis");
x.t("data","access");
x.t("data","searches");
x.t("data","alternatively");
x.t("data","structures");
x.t("data","text-based");
x.t("data","code");
x.t("data","interchange");
x.t("data","corruption");
x.t("data","information");
x.t("data","system");
x.t("data","using");
x.t("attached","class");
x.t("internally","gosu");
x.t("interceptors","gosu");
x.t("optional","parameter");
x.t("graph","rather");
x.t("inference","helps");
x.t("inference","type");
x.t("inference","information");
x.t("inference","greatly");
x.t("production","systems");
x.t("equals","method");
x.t("equals","signs");
x.t("equals","comparison");
x.t("equals","sign");
x.t("equals","template");
x.t("equals","print");
x.t("examples","illustrate");
x.t("examples","rare");
x.t("examples","list");
x.t("examples","notice");
x.t("result","example");
x.t("result","description");
x.t("result","list");
x.t("result","array");
x.t("result","expression");
x.t("result","above");
x.t("defined","property");
x.t("defined","earlier");
x.t("defined","iclipboardpart");
x.t("defined","people\u2019s");
x.t("meaning","java");
x.t("happens","details");
x.t("read-only","getter");
x.t("read-only","property");
x.t("read-only","write-only");
x.t("appropriate","parameterized");
x.t("shared","code");
x.t("shared","data");
x.t("_employee","represents");
x.t("semantics","lazy");
x.t("runtimeexception","user");
x.t("runtimeexception","consequence");
x.t("runtimeexception","gosu");
x.t("runtimeexception","exception");
x.t("runtimeexception","catching");
x.t("customized","email");
x.t("customized","notification");
x.t("soap.addressid.entity.address","uses");
x.t("spec","new");
x.t("spec","var");
x.t("greatly","simplifies");
x.t("unavailable","java");
x.t("case","sensitivity");
x.t("case","creates");
x.t("case","standard");
x.t("case","blocks");
x.t("case","jump");
x.t("case","end");
x.t("case","print");
x.t("case","insensitive");
x.t("case","series");
x.t("ad.id","works");
x.t("prevent","falling");
x.t("significantly","improve");
x.t("values","properties");
x.t("values","variables");
x.t("values","look");
x.t("values","expressions");
x.t("values","using");
x.t("values","var");
x.t("blue","var");
x.t("implicitly","uses");
x.t("comparing","values");
x.t("monitor","locks");
x.t("reentrantlock","//");
x.t("scope-related","utilities");
x.t("enhancements","improve");
x.t("enhancements","extend");
x.t("enhancements","add");
x.t("enhancements","common");
x.t("enhancements","gosu");
x.t("enhancements","allow");
x.t("enhancements","collection");
x.t("enhancements","enable");
x.t("enhancements","enhancements");
x.t("print","(circle.radius)");
x.t("print","===");
x.t("print","_name");
x.t("print","a.id");
x.t("print","however");
x.t("print","==");
x.t("print","gosu");
x.t("print","loading");
x.t("print","failed");
x.t("print","(n.name)");
x.t("print","function");
x.t("print","longitude");
x.t("print","(n.id)");
x.t("print","variable");
x.t("print","latitude");
x.t("print","hello");
x.t("print","str");
x.t("print","ad.id");
x.t("print","call");
x.t("print","break");
x.t("print","mycache.get");
x.t("print","item");
x.t("called","composition");
x.t("called","method");
x.t("called","construct");
x.t("called","===");
x.t("called","type");
x.t("called","circle");
x.t("called","name");
x.t("called","compound");
x.t("called","thread");
x.t("called","blocks");
x.t("called","findaddress");
x.t("called","findaddressspecification");
x.t("called","null");
x.t("called","concurrency");
x.t("called","enhancements");
x.t("called","print");
x.t("character","type");
x.t("character","followed");
x.t("character","add");
x.t("character","virtually");
x.t("character","gosu");
x.t("character","java");
x.t("character","null");
x.t("character","optionally");
x.t("maps","easy");
x.t("maps","gosu");
x.t("maps","scope-related");
x.t("maps","var");
x.t("decides","version");
x.t("choose","list");
x.t("notifies","compile");
x.t("printout","print");
x.t("absent","gosu");
x.t("above","expression");
x.t("java.text.parseexception","text");
x.t("port","var");
x.t("classes","interfaces");
x.t("classes","properties");
x.t("classes","easy-to-read");
x.t("classes","type");
x.t("classes","block");
x.t("classes","add");
x.t("classes","libraries");
x.t("classes","functions");
x.t("classes","java.util.arraylist");
x.t("classes","java.util.list");
x.t("classes","implementing");
x.t("classes","monitor");
x.t("classes","enhancements");
x.t("classes","package");
x.t("classes","pre-scoped");
x.t("note","variables");
x.t("note","type");
x.t("note","gosu");
x.t("note","contrast");
x.t("note","operators");
x.t("note","information");
x.t("note","optionally");
x.t("otherwise","gosu");
x.t("readability","collections-related");
x.t("readability","put");
x.t("subset","items");
x.t("setters","gosu");
x.t("t.width","t.depth");
x.t("sense","either");
x.t("two","variables");
x.t("two","objects");
x.t("myvariable.calculatemytotal","compile");
x.t("work","multiple");
x.t("work","property");
x.t("work","objects");
x.t("work","expect");
x.t("work","gosu");
x.t("myverylongclassname","new");
x.t("myverylongclassname","gosu");
x.t("myverylongclassname","equivalent");
x.t("optionally","add");
x.t("optionally","gosu");
x.t("optionally","annotations");
x.t("optionally","symbolic");
x.t("optionally","specify");
x.t("based","iterated");
x.t("based","number");
x.t("mark","method");
x.t("mark","beginning");
x.t("itself","known");
x.t("itself","case");
x.t("algorithm","allow");
x.t("mentioned","earlier");
x.t("cases","want");
x.t("cases","gosu");
x.t("cases","in-line");
x.t("cases","simply");
x.t("cases","object");
x.t("saw","earlier");
x.t("expands","flattens");
x.t("typically","uses");
x.t("try/catch/finally","try");
x.t("try/catch/finally","blocks");
x.t("argu","ments");
x.t("recipient","email");
x.t("call","example");
x.t("call","method");
x.t("call","static");
x.t("call","inside");
x.t("call","block");
x.t("call","lazy");
x.t("call","soap");
x.t("call","methods");
x.t("call","web");
x.t("call","closures");
x.t("call","function");
x.t("call","services");
x.t("call","saw");
x.t("call","operator");
x.t("literals","just");
x.t("literals","double");
x.t("terminators","control");
x.t("entirely","gosu");
x.t("order","var");
x.t("package","example");
x.t("package","hierarchies");
x.t("package","java.util.concurrent");
x.t("package","test");
x.t("package","name");
x.t("package","keyword");
x.t("package","(namespace)");
x.t("package","class");
x.t("numbers","standard");
x.t("numbers","types");
x.t("delegating","interface");
x.t("dosomethingthatmaythrowioexception","catch");
x.t("file-based","approach");
x.t("markup","language");
x.t("following","example");
x.t("following","method");
x.t("following","n.id");
x.t("following","line");
x.t("following","calls");
x.t("following","block");
x.t("following","simple");
x.t("following","features");
x.t("following","gosu");
x.t("following","prints");
x.t("following","syntax");
x.t("following","period");
x.t("following","code");
x.t("following","java");
x.t("following","rules");
x.t("following","concurrency");
x.t("following","examples");
x.t("following","package");
x.t("statically-typed","tree");
x.t("statically-typed","program");
x.t("system","console");
x.t("system","limitations");
x.t("system","gosu");
x.t("system","handles");
x.t("ending","characters");
x.t("style","avoid");
x.t("style","omit");
x.t("style","designing");
x.t("pointer","excep");
x.t("pointer","exception");
x.t("pointer","equality");
x.t("special","default");
x.t("special","block");
x.t("special","shortcut");
x.t("special","kind");
x.t("special","null-safety");
x.t("special","operator");
x.t("special","equality");
x.t("special","difference");
x.t("break","statements");
x.t("break","statement");
x.t("break","default");
x.t("break","case");
x.t("separated","colon");
x.t("separated","period");
x.t("either","statement");
x.t("either","gosu");
x.t("either","side");
x.t("anonymous","inner");
x.t("anonymous","class");
x.t("elements","lists");
x.t("elements","gosu");
x.t("elements","native");
x.t("run","time");
x.t("run","gosu");
x.t("run","arbitrary");
x.t("analogous","requirement");
x.t("signatures","type");
x.t("signatures","different");
x.t("signatures","without");
x.t("starts","takes");
x.t("tolerant","called");
x.t("corresponding","name");
x.t("insensitive","gosu");
x.t("model","allows");
x.t("\\-","new");
x.t("used","(lru)");
x.t("untyped","nodes");
x.t("service","support");
x.t("service","external");
x.t("service","add");
x.t("service","api");
x.t("service","gosu");
x.t("service","web");
x.t("service","named");
x.t("using","built-in");
x.t("using","static");
x.t("using","interface");
x.t("using","block");
x.t("using","simple");
x.t("using","gosu");
x.t("using","delegate");
x.t("using","function");
x.t("using","different");
x.t("using","keyword");
x.t("using","explicit");
x.t("using","java-defined");
x.t("using","java-like");
x.t("using","existing");
x.t("using","declaration");
x.t("using","lying");
x.t("using","clauses");
x.t("using","equals");
x.t("using","classes");
x.t("using","special");
x.t("using","using");
x.t("using","_lock");
x.t("class","implement");
x.t("class","publishes");
x.t("class","static");
x.t("class","variables");
x.t("class","instance");
x.t("class","abc");
x.t("class","loadablething");
x.t("class","uses");
x.t("class","type");
x.t("class","new");
x.t("class","file");
x.t("class","true");
x.t("class","name");
x.t("class","definition");
x.t("class","constructor");
x.t("class","declares");
x.t("class","methods");
x.t("class","declarations");
x.t("class","gw.api.web.scopes");
x.t("class","delegate");
x.t("class","implements");
x.t("class","mywindow");
x.t("class","define");
x.t("class","person");
x.t("class","instead");
x.t("class","keyword");
x.t("class","code");
x.t("class","variable");
x.t("class","documentation");
x.t("class","import");
x.t("class","myserviceapi");
x.t("class","defined");
x.t("class","called");
x.t("class","class");
x.t("class","vari");
x.t("class","myclass");
x.t("class","contains");
x.t("class","gw.util.concurrent");
x.t("symbolic","versions");
x.t("//","cleanup");
x.t("//","example");
x.t("//","comment");
x.t("//","vars");
x.t("//","static");
x.t("//","supply");
x.t("//","wildcard");
x.t("//","public");
x.t("//","sort");
x.t("//","property");
x.t("//","api");
x.t("//","handle");
x.t("//","gosu");
x.t("//","iterate");
x.t("//","declares");
x.t("//","logging");
x.t("//","up");
x.t("//","exact");
x.t("//","exposes");
x.t("//","compilation");
x.t("//","actually");
x.t("//","work");
x.t("//","call");
x.t("//","class");
x.t("//","insantiate");
x.t("//","imports");
x.t("setting","elements");
x.t("symbol","uses");
x.t("symbol","followed");
x.t("symbol","syntax");
x.t("write-only","example");
x.t("write-only","gosu");
x.t("class\u2019s","cosine");
x.t("similarly","gosu");
x.t("similarly","arrays");
x.t("containing","number");
x.t("general","comparison");
x.t("compares","whether");
x.t("additionally","proper");
x.t("additionally","gosu");
x.t("additionally","write");
x.t("pre-scoped","maps");
x.t("vari","able");
x.t("pass","statement");
x.t("pass","multiple");
x.t("pass","non-exception");
x.t("pass","around");
x.t("pass","constructor");
x.t("pass","input");
x.t("abstracts","behavior");
x.t("xsd","support");
x.t("xsd","file");
x.t("adding","colon");
x.t("adding","@throws");
x.t("series","example");
x.t("series","instance");
x.t("series","collections");
x.t("across","list");
x.t("across","result");
x.t("alternative","using");
x.t("arraylist","string");
x.t("arraylist","var");
x.t("strings.where","s.length");
x.t("returns","cache");
x.t("returns","false");
x.t("returns","true");
x.t("returns","boolean");
x.t("returns","string");
x.t("returns","null");
x.t("returns","instances");
x.t("returns","value");
x.t("outcomes","conditional");
x.t("//constructors","functions");
x.t("omitting","text");
x.t("levels","down");
x.t("compare","instead");
x.t("compare","value");
x.t("compare","object");
x.t("iofficer","gosu");
x.t("catch","syntax");
x.t("catch","throwablesubclass");
x.t("catch","specific");
x.t("catch","print");
x.t("catch","catch");
x.t("catch","ioexception");
x.t("ioexception","throwing");
x.t("ioexception","//");
x.t("behavior","type");
x.t("behavior","class");
x.t("behavior","pure");
x.t("world","console");
x.t("world","tell");
x.t("world","wide");
x.t("world","gosu");
x.t("world","information");
x.t("unnecessary","nearly");
x.t("names",".length");
x.t("names","hierarchies");
x.t("names","syntax");
x.t("names","contains");
x.t("paths","tends");
x.t("paths","form");
x.t("paths","includes");
x.t("paths","gosu");
x.t("paths","function");
x.t("paths","return");
x.t("paths","null");
x.t("paths","good");
x.t("pure","property");
x.t("without","prefix");
x.t("without","function");
x.t("member","however");
x.t("member","qualify");
x.t("member","exists");
x.t("load","next");
x.t("load","print");
x.t("operator","asterisk");
x.t("operator","evaluates");
x.t("operator","list");
x.t("operator","check");
x.t("operator","gosu");
x.t("operator","array");
x.t("operator","supported");
x.t("operator","variable");
x.t("operator","null");
x.t("operator","implicitly");
x.t("operator","called");
x.t("operator","cases");
x.t("operator","returns");
x.t("definitions","composition");
x.t("occur","additionally");
x.t("_lock","new");
x.t("_lock","return");
x.t("mycache.get","hello");
x.t("myclass","@throws");
x.t("insantiate","soap");
x.t("address.countryregion","usa");
x.t("var","_name");
x.t("var","10");
x.t("var","mappedtoc");
x.t("var","statement");
x.t("var","mystrings");
x.t("var","new");
x.t("var","list");
x.t("var","s2");
x.t("var","api");
x.t("var","text_val=eval");
x.t("var","_id");
x.t("var","plus");
x.t("var","myfilecontainer");
x.t("var","strings");
x.t("var","resortedstrings");
x.t("var","address");
x.t("var","int");
x.t("var","string");
x.t("var","coordinates");
x.t("var","minlength");
x.t("var","myobj.name");
x.t("var","keyword");
x.t("var","switch");
x.t("var","addr");
x.t("var","square");
x.t("var","sorted");
x.t("var","despite");
x.t("var","mylist");
x.t("var","mymap");
x.t("var","spec");
x.t("var","_lock");
x.t("var","myresult");
x.t("var","var");
x.t("var","_lazy");
x.t("patterns","information");
x.t("enforces","compile");
x.t("including","improvements");
x.t("including","full");
x.t("including","gosu");
x.t("including","java");
x.t("including","bit-oriented");
x.t("including","try/catch/finally");
x.t("versions","gosu");
x.t("versions","java");
x.t("myresult","example");
x.t("myresult","square");
x.t("incredibly","useful");
x.t("str.length",".each");
x.t("str.length","//");
x.t("obj.createreport","myuser");
x.t("notable","differences");
x.t("notable","difference");
x.t("math.cos","math.pi");
x.t("flattens","complex");
x.t("parameterized","type");
x.t("catching","exceptions");
x.t("passing","parameters");
x.t("insert","parameters");
x.t("describe","complex");
x.t("soap.addressid.entity.findaddressspecification","uses");
x.t("94062","address.countryregion");
x.t("learn","especially");
x.t("even","example");
x.t("even","java");
x.t("generates","no");
x.t("imports","java.util");
x.t("visible","setter");
x.t("math","following");
x.t("math","class\u2019s");
x.t("equality","always");
x.t("equality","java");
x.t("equality","null");
x.t("equality","operator");
x.t("-=","(subtract-and-assign)");
x.t("exceptions","possible");
x.t("exceptions","throws");
x.t("exceptions","gosu");
x.t("exceptions","approach");
x.t("exceptions","following");
x.t("exceptions","occur");
x.t("exceptions","checked");
x.t("validated","type-safety");
x.t("produce","statically-typed");
x.t("companies","around");
x.t("clean","simple");
x.t("object","creation");
x.t("object","just");
x.t("object","serialization");
x.t("object","instance");
x.t("object","type");
x.t("object","left");
x.t("object","hierarchy");
x.t("object",".equals");
x.t("object","initializers");
x.t("object","gosu");
x.t("object","methods");
x.t("object","throw");
x.t("object","handling");
x.t("object","memory");
x.t("object","despite");
x.t("object","variable");
x.t("object","null");
x.t("object","instances");
x.t("object","graphs");
x.t("object","deserialization");
x.t("object","compositional");
x.t("object","internally");
x.t("object","equals");
x.t("object","special");
x.t("object","following");
x.t("object","using");
x.t("object","operator");
x.t("object","equality");
x.t("difference","gosu");
x.t("difference","using");
x.t("item","example");
x.t("item","list");
x.t("item","resortedstrings.each");
x.t("item","length");
x.t("item","against");
x.t("item","order");
x.t("item","strings.sortby");
x.t("strings.sortby","str");
x.t("specify","class");
x.t("specify","comma-separated");
x.t("myfilecontainer.destfile","jarfile");
x.t("contains","list");
x.t("contains","methods");
x.t("contains","return");
x.t("dynamically","property");
x.t("//functions","default");
x.t("12345","//");
x.t("gets","property");
x.t("matching","declaration");
x.t("(decrement-by-one)","-=");
x.t("decrement","declarations");
x.t("decrement","operator");
x.t("comma-separated","list");
x.t("threads","issue");
x.t("generally","called");
x.t("gw.util.concurrent","declares");
x.t("gw.util.concurrent","implements");
x.t("_lazy","lazyvar.make");
x.t("checked","standard");
x.t("checked","exceptions");
x.t("type-safety","just");
}
