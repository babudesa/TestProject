function FileData_Pairs(x)
{
x.t("example","public");
x.t("example","want");
x.t("example","assume");
x.t("method","typical");
x.t("method","work");
x.t("circlearray","arraylist");
x.t("parameter","circlearray");
x.t("within","function");
x.t("question","mark");
x.t("subclasses","subinterfaces");
x.t("always","homogenous");
x.t("arguments","method");
x.t("arguments","work");
x.t("rarely","used");
x.t("line","shapes");
x.t("line","classes");
x.t("drawme","circlearray");
x.t("text_val.select","link");
x.t("support","multiple");
x.t("support","certain");
x.t("support","generics");
x.t("support","homogenous");
x.t("type","example");
x.t("type","wildcard");
x.t("type","type");
x.t("type","supported");
x.t("type","bounded");
x.t("type","perhaps");
x.t("type","extends");
x.t("type","appropriate");
x.t("type","arraylist");
x.t("wildcard","supported");
x.t("wildcard","syntax");
x.t("wildcard","character");
x.t("mix","types");
x.t("public","function");
x.t("however","types");
x.t("however","work");
x.t("extend","shape");
x.t("extend","types");
x.t("multiple","types");
x.t("link","directly");
x.t("details","generics");
x.t("advanced","types");
x.t("want","method");
x.t("want","support");
x.t("want","define");
x.t("items","type");
x.t("circle","line");
x.t("circle","shapes");
x.t("circle","subclass");
x.t("circle","even");
x.t("certain","types");
x.t("english","read");
x.t("objects","type");
x.t("generics","unbounded");
x.t("generics","blocks");
x.t("generics","syntax");
x.t("generics","wildcards");
x.t("generics","java");
x.t("generics","interact");
x.t("generics","work");
x.t("messsage","gosu");
x.t("need","define");
x.t("list","alist");
x.t("shapes","circle");
x.t("shapes","collections");
x.t("supertypes","super");
x.t("guide","gosu");
x.t("assume","collections");
x.t("collections","always");
x.t("collections","line");
x.t("collections","however");
x.t("collections","items");
x.t("collections","circle");
x.t("collections","limiting");
x.t("unbounded","generics");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("no","prior");
x.t("definition","parameter");
x.t("anyway","extends");
x.t("gosu","support");
x.t("gosu","generics");
x.t("gosu","supertype");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","warning");
x.t("subinterfaces","suppose");
x.t("custom","class");
x.t("argument","definition");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("prior","reference");
x.t("shape","however");
x.t("shape","english");
x.t("shape","suppose");
x.t("shape","function");
x.t("shape","instead");
x.t("shape","class");
x.t("supertype","bounded");
x.t("earlier","examples");
x.t("defining","blocks");
x.t("in-line","within");
x.t("sake","example");
x.t("contain","mix");
x.t("tried","pass");
x.t("functions","defined");
x.t("error","occurred");
x.t("blocks","generics");
x.t("blocks","bounded");
x.t("blocks","cases");
x.t("blocks","anonymous");
x.t("supported","gosu");
x.t("supported","java");
x.t("suppose","want");
x.t("suppose","custom");
x.t("syntax","rarely");
x.t("syntax","bounded");
x.t("syntax","extends");
x.t("syntax","super");
x.t("guidewire_selectall","var");
x.t("alist","list");
x.t("alist","[0]");
x.t("function","drawme");
x.t("function","public");
x.t("function","gosu");
x.t("function","guidewire_selectall");
x.t("function","work");
x.t("define","arguments");
x.t("define","function");
x.t("instead","letter");
x.t("instead","specify");
x.t("language","type");
x.t("wildcards","want");
x.t("wildcards","unbounded");
x.t("wildcards","function");
x.t("wildcards","cases");
x.t("wildcards","specify");
x.t("types","extend");
x.t("types","collections");
x.t("types","syntax");
x.t("types","wildcards");
x.t("types","types");
x.t("types","assumptions");
x.t("types","seem");
x.t("simply","question");
x.t("reference","type");
x.t("reference","guide");
x.t("bounded","wildcard");
x.t("bounded","supertypes");
x.t("bounded","wildcards");
x.t("limiting","support");
x.t("assumptions","object\u2019s");
x.t("seem","define");
x.t("java","gosu");
x.t("java","supported");
x.t("java","syntax");
x.t("java","language");
x.t("occurred","messsage");
x.t("getfirstitem","alist");
x.t("instances","class");
x.t("similar","generics");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("perhaps","instances");
x.t("extends","type");
x.t("extends","shape");
x.t("[0]","details");
x.t("read","argument");
x.t("although","gosu");
x.t("page","error");
x.t("typical","defining");
x.t("typical","code");
x.t("interact","blocks");
x.t("examples","need");
x.t("defined","in-line");
x.t("appropriate","typical");
x.t("letter","var");
x.t("character","earlier");
x.t("character","instead");
x.t("character","extends");
x.t("classes","extend");
x.t("cases","no");
x.t("cases","simply");
x.t("mark","character");
x.t("work","collections");
x.t("work","tried");
x.t("work","types");
x.t("work","similar");
x.t("work","pass");
x.t("object\u2019s","type");
x.t("homogenous","collections");
x.t("homogenous","contain");
x.t("subclass","shape");
x.t("anonymous","functions");
x.t("used","anyway");
x.t("class","subclasses");
x.t("class","shape");
x.t("class","sake");
x.t("class","although");
x.t("containing","objects");
x.t("warning","gosu");
x.t("arraylist","circle");
x.t("arraylist","shape");
x.t("arraylist","extends");
x.t("arraylist","containing");
x.t("pass","arraylist");
x.t("pass","object");
x.t("var","text_val=eval");
x.t("var","getfirstitem");
x.t("even","circle");
x.t("specify","support");
x.t("specify","advanced");
x.t("object","type");
x.t("super","type");
}
