function FileData_Pairs(x)
{
x.t("example","defines");
x.t("example","static");
x.t("example","subclasses");
x.t("example","shows");
x.t("example","apis");
x.t("example","advanced");
x.t("example","constructor");
x.t("example","constructs");
x.t("example","suppose");
x.t("example","class");
x.t("interfaces","within");
x.t("interfaces","originally");
x.t("interfaces","defined");
x.t("statements","information");
x.t("statements","//");
x.t("method","uses");
x.t("method","interface");
x.t("method","gosu");
x.t("method","inner");
x.t("method","inherited");
x.t("method","counter.incrementme");
x.t("method","feature");
x.t("method","instead");
x.t("method","_callbackhandler.execute");
x.t("method","return");
x.t("method","similar");
x.t("method","called");
x.t("f.saywhat","test");
x.t("construct","print");
x.t("creation","value");
x.t("creation","//");
x.t("just","need");
x.t("just","constructed");
x.t("defines","static");
x.t("defines","actiontwo");
x.t("defines","anonymous");
x.t("within","method");
x.t("within","greeting");
x.t("within","gosu");
x.t("within","defined");
x.t("within","class");
x.t("t.greetme","prints");
x.t("implement","interface");
x.t("implement","run");
x.t("refer","inner");
x.t("static","public");
x.t("static","modifier");
x.t("static","inner");
x.t("static","class");
x.t("subclasses","greeting");
x.t("create","instance");
x.t("create","inner");
x.t("create","different");
x.t("create","anonymous");
x.t("related","methods");
x.t("related","code");
x.t("related","classes");
x.t("once","defined");
x.t("saywhat","string");
x.t("instance","greeting");
x.t("instance","test");
x.t("instance","anonymous");
x.t("instance","//");
x.t("variables","public");
x.t("variables","methods");
x.t("arguments","no");
x.t("void","execute");
x.t("void","gosu");
x.t("void","run");
x.t("void","//");
x.t("(myblock)","however");
x.t("current","class");
x.t("creates","instance");
x.t("creates","anonymous");
x.t("situations","example");
x.t("container","code");
x.t("execute","block");
x.t("uses","new");
x.t("uses","vehicle");
x.t("uses","anonymous");
x.t("shows","anonymous");
x.t("implemented","either");
x.t("text_val.select","link");
x.t("interface","method");
x.t("interface","within");
x.t("interface","interface");
x.t("interface","public");
x.t("interface","block");
x.t("interface","plugincallbackhandler");
x.t("interface","exactly");
x.t("interface","called");
x.t("interface","anonymous");
x.t("interface","including");
x.t("interface","var");
x.t("greeting.frenchgreeting","print");
x.t("type","method");
x.t("type","parameters");
x.t("type","return");
x.t("public","void");
x.t("public","interface");
x.t("public","property");
x.t("public","function");
x.t("public","private");
x.t("runnable","interface");
x.t("runnable","simple");
x.t("explicitly","public");
x.t("multiple","related");
x.t("however","extend");
x.t("however","write");
x.t("however","define");
x.t("extend","base");
x.t("greeting","static");
x.t("greeting","public");
x.t("greeting","class");
x.t("property","hello");
x.t("guidewire","gosu");
x.t("guidewire","notice");
x.t("apis","java");
x.t("link","directly");
x.t("want","able");
x.t("new","instance");
x.t("new","greeting.frenchgreeting");
x.t("new","inner");
x.t("new","keyword");
x.t("new","vehicle");
x.t("new","example.othergreeting");
x.t("new","example.fancyvehicle");
x.t("new","plugincallbackhandler.block");
x.t("new","class");
x.t("new","operator");
x.t("new","object");
x.t("advanced","anonymous");
x.t("single","method");
x.t("bonjour","static");
x.t("bonjour","notice");
x.t("bonjour","anonymous");
x.t("block","implement");
x.t("block","public");
x.t("block","block");
x.t("block","throws");
x.t("block","shortcut");
x.t("block","syntax");
x.t("block","number");
x.t("block","takes");
x.t("block","alternative");
x.t("messsage","gosu");
x.t("file","related");
x.t("able","refer");
x.t("need","simple");
x.t("generics","features");
x.t("generics","named");
x.t("braces","add");
x.t("counter","new");
x.t("counter","variable");
x.t("actionone","string");
x.t("actionone","called");
x.t("add","additional");
x.t("g.testinner","prints");
x.t("myblock","plugincallbackhandler.block");
x.t("guide","classes");
x.t("simple","container");
x.t("simple","subclass");
x.t("plugincallbackhandler",".block");
x.t("plugincallbackhandler","class");
x.t("plugincallbackhandler","//");
x.t("messageid","int");
x.t("features","gosu");
x.t("throws","throwable");
x.t("directly","page");
x.t("test","new");
x.t("test","gosu");
x.t("test","fancyvehicle");
x.t("test","code");
x.t("test","class");
x.t("true","interfaces");
x.t("writing","concise");
x.t("text_val.focus","text_val.select");
x.t("creating","instances");
x.t("creating","anonymous");
x.t("name","creates");
x.t("name","braces");
x.t("name","derives");
x.t("no","arguments");
x.t("no","name");
x.t("no","return");
x.t(".block","implements");
x.t("definition","java");
x.t("gosu","statements");
x.t("gosu","within");
x.t("gosu","block");
x.t("gosu","generics");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","java");
x.t("gosu","similar");
x.t("gosu","class");
x.t("gosu","tester");
x.t("derives","interesting");
x.t("derives","object");
x.t("constructor","method");
x.t("constructed","actionone");
x.t("constructed","function");
x.t("exactly","method");
x.t("modifier","static");
x.t("modifier","information");
x.t("modifier","similarly");
x.t("base","class");
x.t("incrementme","print");
x.t("inner","interfaces");
x.t("inner","interface");
x.t("inner","classes");
x.t("inner","anonymous");
x.t("inner","class");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("useful","base");
x.t("useful","encapsulating");
x.t("further","defining");
x.t("methods","public");
x.t("methods","multiple");
x.t("methods","useful");
x.t("constructs","new");
x.t("inherited","new");
x.t("shortcut","helpful");
x.t("shortcut","anonymous");
x.t("parameters","single");
x.t("parameters","block");
x.t("helpful","writing");
x.t("arg","create");
x.t("arg","guidewire");
x.t("arg","test.actionone");
x.t("arg","usa");
x.t("originally","implemented");
x.t("final","messageid");
x.t("string","return");
x.t("string","print");
x.t("int","void");
x.t("int","_callbackhandler.execute");
x.t("write","concisely");
x.t("defining","file");
x.t("in-line","within");
x.t("prints","bonjour");
x.t("prints","vehicle");
x.t("prints","value");
x.t("interesting","object");
x.t("counter.incrementme","counter.incrementme");
x.t("counter.incrementme","following");
x.t("fancyvehicle","public");
x.t("fancyvehicle","class");
x.t("error","occurred");
x.t("encapsulating","code");
x.t("frenchgreeting.saywhat","test");
x.t("notice","example");
x.t("notice","inner");
x.t("blocks","gosu");
x.t("outer","class");
x.t("syntax","public");
x.t("syntax","creating");
x.t("example.innertest.runme","prints");
x.t("suppose","plugincallbackhandler");
x.t("suppose","define");
x.t("suppose","using");
x.t("feature","works");
x.t("concise","code");
x.t("guidewire_selectall","var");
x.t("constructors","construct");
x.t("number","type");
x.t("function","saywhat");
x.t("function","actionone");
x.t("function","incrementme");
x.t("function","guidewire_selectall");
x.t("function","actiontwo");
x.t("function","runme");
x.t("function","greetme");
x.t("function","run");
x.t("function","testinner");
x.t("function","messagereceived");
x.t("implements","interface");
x.t("implements","run");
x.t("define","new");
x.t("define","base");
x.t("define","inner");
x.t("define","in-line");
x.t("define","named");
x.t("define","anonymous");
x.t("frenchgreeting","within");
x.t("frenchgreeting","static");
x.t("frenchgreeting","following");
x.t("frenchgreeting","class");
x.t("othergreeting","extends");
x.t("different","named");
x.t("different","class");
x.t("private","private");
x.t("private","variable");
x.t("private","var");
x.t("ways","creating");
x.t("actiontwo","method");
x.t("actiontwo","string");
x.t("actiontwo","called");
x.t("instead","creating");
x.t("keyword","inner");
x.t("implementing","interface");
x.t("explicit","anonymous");
x.t("works","interface");
x.t("reference","guide");
x.t("code","within");
x.t("code","situations");
x.t("code","creates");
x.t("code","gosu");
x.t("code","named");
x.t("code","print");
x.t("code","using");
x.t("code","even");
x.t("derive","outer");
x.t("derive","using");
x.t("_callbackhandler.execute","(myblock)");
x.t("_callbackhandler.execute","gosu");
x.t("return","type");
x.t("return","bonjour");
x.t("return","frenchgreeting.saywhat");
x.t("return","value");
x.t("adds","private");
x.t("vehicle","construct");
x.t("vehicle","just");
x.t("vehicle","defines");
x.t("vehicle","public");
x.t("vehicle","package");
x.t("vehicle","var");
x.t("example.othergreeting","t.greetme");
x.t("java","interface");
x.t("java","public");
x.t("java","useful");
x.t("java","parameters");
x.t("java","syntax");
x.t("variable","method");
x.t("variable","containing");
x.t("test.actionone","usa");
x.t("occurred","messsage");
x.t("example.fancyvehicle","g.testinner");
x.t("include","generics");
x.t("instances","class");
x.t("innertest","static");
x.t("similar","runnable");
x.t("similar","inner");
x.t("similar","ways");
x.t("similar","usage");
x.t("named","inner");
x.t("named","class");
x.t("usage","java");
x.t("additional","variables");
x.t("value","example");
x.t("value","creation");
x.t("value","value");
x.t("value","//");
x.t("usa","actiontwo");
x.t("usa","test.actiontwo");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("extends","greeting");
x.t("extends","vehicle");
x.t("actually","however");
x.t("hello","string");
x.t("takes","no");
x.t("throwable","gosu");
x.t("throwable","//");
x.t("page","error");
x.t("information","static");
x.t("information","blocks");
x.t("defined","inner");
x.t("defined","classes");
x.t("defined","used");
x.t("called","runnable");
x.t("called","plugincallbackhandler");
x.t("called","arg");
x.t("called","frenchgreeting");
x.t("called","run");
x.t("print","f.saywhat");
x.t("print","actionone");
x.t("print","actiontwo");
x.t("print","vehicle");
x.t("print","value");
x.t("print","(example.greeting.hello)");
x.t("concisely","using");
x.t("classes","just");
x.t("classes","variables");
x.t("classes","want");
x.t("classes","gosu");
x.t("classes","inner");
x.t("classes","methods");
x.t("classes","constructors");
x.t("classes","function");
x.t("classes","define");
x.t("classes","implementing");
x.t("classes","derive");
x.t("classes","java");
x.t("classes","similar");
x.t("classes","optionally");
x.t("classes","anonymous");
x.t("optionally","include");
x.t("runme","//");
x.t("based","vehicle");
x.t("plugincallbackhandler.block","new");
x.t("plugincallbackhandler.block","//");
x.t("subclass","define");
x.t("package","example");
x.t("call","vehicle");
x.t("anonymous","inner");
x.t("anonymous","class");
x.t("used","within");
x.t("following","example");
x.t("following","code");
x.t("following","class");
x.t("greetme","var");
x.t("either","gosu");
x.t("run","example");
x.t("run","method");
x.t("run","void");
x.t("run","throws");
x.t("class","example");
x.t("class","method");
x.t("class","defines");
x.t("class","within");
x.t("class","once");
x.t("class","uses");
x.t("class","public");
x.t("class","explicitly");
x.t("class","multiple");
x.t("class","greeting");
x.t("class","new");
x.t("class","true");
x.t("class","name");
x.t("class","no");
x.t("class","definition");
x.t("class","derives");
x.t("class","gosu");
x.t("class","inner");
x.t("class","fancyvehicle");
x.t("class","example.innertest.runme");
x.t("class","suppose");
x.t("class","implements");
x.t("class","frenchgreeting");
x.t("class","othergreeting");
x.t("class","different");
x.t("class","vehicle");
x.t("class","innertest");
x.t("class","extends");
x.t("class","called");
x.t("class","based");
x.t("class","package");
x.t("class","call");
x.t("class","following");
x.t("class","anonymous");
x.t("class","using");
x.t("class","operator");
x.t("class","object");
x.t("class","contains");
x.t("using","current");
x.t("using","new");
x.t("using","plugincallbackhandler");
x.t("using","gosu");
x.t("using","explicit");
x.t("using","code");
x.t("using","following");
x.t("similarly","classes");
x.t("//","implement");
x.t("//","create");
x.t("//","public");
x.t("//","counter");
x.t("//","define");
x.t("//","adds");
x.t("//","anonymous");
x.t("//","class");
x.t("//","pass");
x.t("containing","instance");
x.t("alternative","using");
x.t("pass","anonymous");
x.t("operator","however");
x.t("operator","actually");
x.t("operator","class");
x.t("testinner","//");
x.t("messagereceived","messageid");
x.t("messagereceived","final");
x.t("var","new");
x.t("var","counter");
x.t("var","myblock");
x.t("var","test");
x.t("var","text_val=eval");
x.t("var","//");
x.t("including","interfaces");
x.t("even","further");
x.t("(example.greeting.hello)","prints");
x.t("test.actiontwo","guidewire");
x.t("tester","test");
x.t("tester","using");
x.t("tester","var");
x.t("object","example");
x.t("object","following");
x.t("object","//");
x.t("object","var");
x.t("object","object");
x.t("contains","inner");
}
