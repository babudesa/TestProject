function FileData_Pairs(x)
{
x.t("example","shows");
x.t("example","uses");
x.t("example","type\u2019s");
x.t("example","java.lang.integer");
x.t("example","paste");
x.t("example","gosu");
x.t("example","int");
x.t("example","equivalent");
x.t("example","collection");
x.t("example","getbyfullname");
x.t("example","following");
x.t("example","gets");
x.t("looks","type");
x.t("looks","supertypes");
x.t("looks","truncated");
x.t("i.name","==");
x.t("othertype","method");
x.t("statements","assign");
x.t("interfaces","gosu");
x.t("interfaces","isparameterized");
x.t("root","class");
x.t("myfullclassname","com.mycompany.mytype");
x.t("myfullclassname","var");
x.t("properties","type");
x.t("properties","property");
x.t("properties","name");
x.t("properties","methods");
x.t("properties","appear");
x.t("properties","call");
x.t("properties","using");
x.t("properties","contains");
x.t("properties","item");
x.t("method","looks");
x.t("method","always");
x.t("method","type");
x.t("method","determines");
x.t("method","name");
x.t("method","determine");
x.t("method","return");
x.t("method","considers");
x.t("method","call");
x.t("method","following");
x.t("method","using");
x.t("method","returns");
x.t("parameter","m.parameters");
x.t("parameter","java.lang.string");
x.t("parameter","string");
x.t("exist","primarily");
x.t("rather","unexpected");
x.t("version","boolean");
x.t("version","fully-qualified");
x.t("java.lang","package");
x.t("m.parameters.length","print");
x.t("(comparisonstring)","code");
x.t("full","reference");
x.t("subtle","ways");
x.t("(boxed)","code");
x.t("implement","even");
x.t("studio","alert");
x.t("studio","help");
x.t("description","shortdescription");
x.t("description","name");
x.t("currently","pm");
x.t("subclasses","equality");
x.t("superinterface","type");
x.t("destinationtype","method");
x.t("refer","gosu");
x.t("refer","previous");
x.t("business","entities");
x.t("business","entity");
x.t("once","know");
x.t("always","inappro");
x.t("always","returns");
x.t("source","type");
x.t("various","methods");
x.t("having","common");
x.t("variables","declared");
x.t("related","topic");
x.t("instance","type.typeinfo.getconstructor");
x.t("limits","gosu");
x.t("getclass","equals");
x.t("modifiers","isgeneric");
x.t("modifiers","isarray");
x.t("regular","object");
x.t(".typeinfo.properties","props");
x.t("current","time");
x.t(".intrinsictype","//");
x.t("discussed","earlier");
x.t("topic","java");
x.t("shows","two");
x.t("uses","string");
x.t("uses","java");
x.t("isabstract","type");
x.t("basically","primitive");
x.t("declared","primitive");
x.t("com.mycompany.mytype","var");
x.t("text_val.select","link");
x.t("errors","compile");
x.t("notblank","alpha");
x.t(".displayname","print");
x.t("priate","returns");
x.t("isassignablefrom","method");
x.t("isassignablefrom","destinationtype");
x.t("necessary","example");
x.t("interface","returns");
x.t("working","primitive");
x.t("support","extending");
x.t("provided","java");
x.t("type","properties");
x.t("type","version");
x.t("type","basically");
x.t("type","interface");
x.t("type","type");
x.t("type","basic");
x.t("type","hierarchy");
x.t("type","primitive");
x.t("type","includes");
x.t("type","paste");
x.t("type","reflection");
x.t("type","gosu");
x.t("type","argument");
x.t("type","checking");
x.t("type","generic");
x.t("type","typeis");
x.t("type","final");
x.t("type","array");
x.t("type","string");
x.t("type","metadata");
x.t("type","something");
x.t("type","supported");
x.t("type","contrast");
x.t("type","first");
x.t("type","cannot");
x.t("type","types");
x.t("type",".typeinfo");
x.t("type","abstract");
x.t("type","matches");
x.t("type","memory");
x.t("type","java");
x.t("type","null");
x.t("type","non-primitive");
x.t("type","although");
x.t("type","subtype");
x.t("type","information");
x.t("type","print");
x.t("type","metatype");
x.t("type","two");
x.t("type",".isassignablefrom");
x.t("type","wrapped");
x.t("type","typesystem.getbyfullname");
x.t("type","system");
x.t("type","typeinfo");
x.t("type","using");
x.t("type","parameterized");
x.t("type","var");
x.t("type","object");
x.t("type","sourcetype");
x.t("type\u2019s","complete");
x.t("basic","type");
x.t("boxed","type");
x.t("boxed","boolean");
x.t("boxed",".isprimitive");
x.t("boxed","code");
x.t("boxed","versions");
x.t("time","rather");
x.t("time","currently");
x.t("time","getting");
x.t("time","reflection");
x.t("time","general");
x.t("time","var");
x.t("calls","example");
x.t("packages","instead");
x.t("whereas","type");
x.t("operates","type");
x.t("operates","object");
x.t("hierarchy","returns");
x.t("explicitly","provided");
x.t("handlecall","method");
x.t("however","differences");
x.t("however","equality");
x.t("(object)",".isassignablefrom");
x.t("plug","gosu\u2019s");
x.t("extend","java");
x.t("expose","type");
x.t("guidewire","studio");
x.t("guidewire","applications");
x.t("detect","errors");
x.t("property","description");
x.t("property","type");
x.t("property","name");
x.t("property","called");
x.t("property","contains");
x.t("whitespace","call");
x.t("convert","boolean");
x.t("primitive","boxed");
x.t("primitive","type");
x.t("primitive","sometimes");
x.t("primitive","types");
x.t("primitive","returns");
x.t("automatically","coerced");
x.t("back","again");
x.t("speed","improvement");
x.t("apis","discussed");
x.t("apis","require");
x.t("apis","advanced");
x.t("require","objects");
x.t("uninitialized","values");
x.t("entities","connect");
x.t("link","directly");
x.t("getting","type");
x.t("getting","name");
x.t("getting","typeinfo");
x.t("java.lang.integer","int");
x.t("java.lang.integer","information");
x.t("new","datetime");
x.t("==","false");
x.t("==","typeof");
x.t("==","mymethodname");
x.t("==","compare");
x.t("==","object");
x.t("objects","type");
x.t("objects","no");
x.t("objects","typelists");
x.t("objects","confuse");
x.t("objects","java");
x.t("objects","several");
x.t("objects","analogous");
x.t("want","check");
x.t("differences","handling");
x.t("differences","internally");
x.t("differences","notable");
x.t("advanced","type");
x.t("details","additional");
x.t("includes","property");
x.t("includes","following");
x.t("size","hascontent");
x.t("m.parameters","[0]");
x.t("designed","extended");
x.t("care","difference");
x.t("messsage","gosu");
x.t("need","know");
x.t("need","following");
x.t("list","type");
x.t("list","parameters");
x.t("list","include");
x.t("short","description");
x.t("clarity","wait");
x.t("determines","type");
x.t("determines","expose");
x.t("supertypes","source");
x.t("generics","isinterface");
x.t("generics","isprimitive");
x.t("again","gosu");
x.t("complete","properties");
x.t("paste","following");
x.t("mm.findfirst","i.name");
x.t("inappro","priate");
x.t("assignment","method");
x.t("assign","value");
x.t("assignable","string");
x.t("menu","full");
x.t("menu","details");
x.t("benefit","using");
x.t("guide","type");
x.t("propname","hour");
x.t("check","valid");
x.t("api","reference");
x.t("human-readable","name");
x.t("(unboxed)","print");
x.t("reflection","properties");
x.t("reflection","once");
x.t("reflection","type");
x.t("reflection","apis");
x.t("reflection","paste");
x.t("reflection","no");
x.t("reflection","gosu");
x.t("reflection","dramatically");
x.t("reflection","function");
x.t("reflection","print");
x.t("reflection","note");
x.t("reflection","using");
x.t("reflection","compare");
x.t("reflection","learn");
x.t("case_insensitive_order","length");
x.t("java.lang.string","boolean");
x.t("java.lang.string","int");
x.t("java.lang.string","charat");
x.t("java.lang.string","-1");
x.t("java.lang.string","indexof");
x.t("collections","contain");
x.t("collections","blocks");
x.t("features","var");
x.t("false","type");
x.t("false","true");
x.t("false","gosu");
x.t("false","null");
x.t("false","comparing");
x.t("false","cases");
x.t("false","coercion");
x.t("false","object");
x.t("possibility","subtypes");
x.t("soap","types");
x.t("directly","type");
x.t("directly","code");
x.t("directly","page");
x.t("shortdescription","example");
x.t("props","m.name");
x.t("props","typeof");
x.t("m.name","print");
x.t("bracket","syntax");
x.t("test","types");
x.t("true","interfaces");
x.t("true","modifiers");
x.t("true","false");
x.t("true","gosu");
x.t("true","typeis");
x.t("true","exact");
x.t("true","information");
x.t("true","print");
x.t("true","isfinal");
x.t("true","//");
x.t("true","compare");
x.t("primitives","example");
x.t("primitives","isassignablefrom");
x.t("primitives","stored");
x.t("primitives","int");
x.t("primitives","different");
x.t("primitives","instead");
x.t("primitives","java");
x.t("primitives","internally");
x.t("text_val.focus","text_val.select");
x.t("no","speed");
x.t("no","need");
x.t("no","performance");
x.t("no","supertype");
x.t("name","example");
x.t("name","type");
x.t("name","calls");
x.t("name","property");
x.t("name","short");
x.t("name","human-readable");
x.t("name","m.name");
x.t("name","name");
x.t("name","first");
x.t("name","given");
x.t("name","compareto");
x.t("name","using");
x.t("name","pass");
x.t("name","instantiates");
x.t("name","var");
x.t("wait","wait");
x.t("wait","long");
x.t("functionality","gosu");
x.t("stored","type");
x.t("stored","objects");
x.t("common","ancestor");
x.t("typelists","xml");
x.t(".constructor.newinstance","null");
x.t("gosu","statements");
x.t("gosu","business");
x.t("gosu","uses");
x.t("gosu","boxed");
x.t("gosu","type");
x.t("gosu","guidewire");
x.t("gosu","convert");
x.t("gosu","primitive");
x.t("gosu","objects");
x.t("gosu","care");
x.t("gosu","generics");
x.t("gosu","api");
x.t("gosu","reflection");
x.t("gosu","gosu");
x.t("gosu","provides");
x.t("gosu","find");
x.t("gosu","typeis");
x.t("gosu","examines");
x.t("gosu","implements");
x.t("gosu","statically");
x.t("gosu","language");
x.t("gosu","types");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","classes");
x.t("gosu","work");
x.t("gosu","tester");
x.t("gosu","object");
x.t(".typeinfo.methods","methods");
x.t("performance","benefit");
x.t("typed","gosu");
x.t("typed","gosu\u2019s");
x.t("enables","gosu");
x.t("constructed","runtime");
x.t("avoid","reflection");
x.t("avoid","using");
x.t("dramatically","limits");
x.t("bytes","empty");
x.t("argument","either");
x.t("ancestor","type");
x.t("transparently","exposes");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","properties");
x.t("methods","type");
x.t("methods","m.name");
x.t("methods","name");
x.t("methods","interesting");
x.t("methods","almost");
x.t("methods","typeof");
x.t("methods","run");
x.t("methods","using");
x.t("methods","class");
x.t("methods","even");
x.t("alert","serious");
x.t("parameters","m.parameters.length");
x.t("parameters","name");
x.t("parameters","object");
x.t("compatible","assignment");
x.t("boolean","exist");
x.t("boolean","type");
x.t("boolean","however");
x.t("boolean","primitive");
x.t("boolean","assignable");
x.t("boolean","true");
x.t("boolean","primitives");
x.t("boolean","boolean");
x.t("boolean","string");
x.t("boolean","java");
x.t("boolean","null");
x.t("boolean","called");
x.t("boolean","typically");
x.t("boolean","using");
x.t("boolean","class");
x.t("boolean","object");
x.t("provides","variant");
x.t("checking","information");
x.t("useful","code");
x.t("find","specific");
x.t("find","defined");
x.t("up","object");
x.t("determine","whether");
x.t("supertype","isabstract");
x.t("supertype","type");
x.t("supertype","supertype");
x.t("generic","returns");
x.t("arrays","example");
x.t("typeis","operates");
x.t("typeis","true");
x.t("typeis","typeis");
x.t("typeis","string");
x.t("typeis","operator");
x.t("typeis","object");
x.t("final","returns");
x.t("beaninfo","objects");
x.t("beaninfo","determines");
x.t("beaninfo","information");
x.t("examines","java");
x.t("write","gosu");
x.t("int","properties");
x.t("int","wait");
x.t("int","boolean");
x.t("int","int");
x.t("int","length");
x.t("int","codepointat");
x.t("int","compared");
x.t("int","information");
x.t("int","indexof");
x.t("int","integer");
x.t("int","codepointbefore");
x.t("string","method");
x.t("string","version");
x.t("string","type");
x.t("string","(object)");
x.t("string","false");
x.t("string","true");
x.t("string","boolean");
x.t("string","typeis");
x.t("string","string");
x.t("string","typeof");
x.t("string","hello");
x.t("string","print");
x.t("string","containing");
x.t("string","class");
x.t("string","var");
x.t("string","object");
x.t("empty","case_insensitive_order");
x.t("array","returns");
x.t("(converted)","non-primitive");
x.t("interesting","properties");
x.t("problems","compile");
x.t("prints","java.lang.integer");
x.t("prints","false");
x.t("prints","name");
x.t("prints","methods");
x.t("prints","something");
x.t("prints","code");
x.t("prints","typeof");
x.t("contain","null");
x.t("contain","integer");
x.t("earlier","section");
x.t("unexpected","behavior");
x.t("metadata","properties");
x.t("metadata","including");
x.t("pm","code");
x.t("isparameterized","type");
x.t("error","occurred");
x.t("something","reflection");
x.t("something","prints");
x.t("something","similar");
x.t("approaches","getting");
x.t("blocks","features");
x.t("equivalent","code");
x.t("supported","refer");
x.t("supported","apis");
x.t("sometimes","called");
x.t("contrast","boolean");
x.t("know","type");
x.t("know","differences");
x.t("hascontent","notblank");
x.t("syntax","similar");
x.t("charat","int");
x.t("object-based","types");
x.t("hold","null");
x.t("long","int");
x.t("long","hashcode");
x.t("first","parameter");
x.t("means","type");
x.t("collection","apis");
x.t("exposed","language");
x.t("guidewire_selectall","var");
x.t("datetime","//");
x.t("notify","notifyall");
x.t("number","parameters");
x.t("function","guidewire_selectall");
x.t("better","detect");
x.t("length","size");
x.t("length","subsequence");
x.t("truncated","clarity");
x.t("codepointat","int");
x.t("approach","want");
x.t("implements","dynamic");
x.t("statically","typed");
x.t("different","subtle");
x.t("different","packages");
x.t("different","approaches");
x.t("different","types");
x.t(".name","print");
x.t(".name","//");
x.t("itype","bytes");
x.t("numericspace","whitespace");
x.t("@itype","compareto");
x.t("whether","types");
x.t("subtypes","subclasses");
x.t("subtypes","java");
x.t("subtypes","print");
x.t("cannot","hold");
x.t(".isprimitive","print");
x.t("confuse","dynamically");
x.t("almost","always");
x.t("almost","ways");
x.t("almost","cases");
x.t("ways","gosu");
x.t("ways","object-based");
x.t("ways","equality");
x.t("instead","type");
x.t("instead","boxed");
x.t("language","primitives");
x.t("language","gosu");
x.t("language","transparently");
x.t("language","almost");
x.t("language","abstract");
x.t("language","perspective");
x.t("compile","time");
x.t("alphanumeric","alphanumericspace");
x.t("types","various");
x.t("types","support");
x.t("types","however");
x.t("types","plug");
x.t("types","automatically");
x.t("types","soap");
x.t("types","directly");
x.t("types","gosu");
x.t("types","compatible");
x.t("types","int");
x.t("types","different");
x.t("types","subtypes");
x.t("types","types");
x.t("types","include");
x.t("types","integer");
x.t("types","note");
x.t("types","used");
x.t("types","using");
x.t("types","similarly");
x.t("types","bad");
x.t("superclass","superinterface");
x.t("variant","functionality");
x.t("section","working");
x.t("section","java");
x.t("implementing","java");
x.t("handling","uninitialized");
x.t("xml","types");
x.t("(integer.name)","//");
x.t("alpha","alphaspace");
x.t("tostring","notify");
x.t("important","properties");
x.t("reference","properties");
x.t("reference","studio");
x.t("reference","guide");
x.t("code","looks");
x.t("code","gosu");
x.t("code","avoid");
x.t("code","prints");
x.t("code","assumptions");
x.t("code","print");
x.t("code","even");
x.t("code","gets");
x.t("m.callhandler.handlecall","obj");
x.t("getbyfullname","method");
x.t(".typeinfo","object");
x.t("abstract","type");
x.t("abstract","returns");
x.t("thus","collections");
x.t("return","type");
x.t("alphanumericspace","numeric");
x.t("square","bracket");
x.t("given","string");
x.t("method\u2019s","callhandler");
x.t("exact","type");
x.t("matches","returns");
x.t("appear","directly");
x.t("isinterface","type");
x.t("previous","section");
x.t("memory","location");
x.t("extended","beyond");
x.t("whose","method");
x.t("comparisonstring","//");
x.t("considers","possibility");
x.t("java","interfaces");
x.t("java","type");
x.t("java","primitive");
x.t("java","gosu");
x.t("java","beaninfo");
x.t("java","language");
x.t("java","types");
x.t("java","classes");
x.t("java","class");
x.t("java","class\u2019s");
x.t("java","versions");
x.t("extending","java");
x.t("assumptions","values");
x.t("variable","values");
x.t("occurred","messsage");
x.t("typeof","boxed");
x.t("typeof","==");
x.t("typeof","java.lang.string");
x.t("typeof",".name");
x.t("typeof","typeof");
x.t("typeof","unboxed");
x.t("typeof","29");
x.t("typeof","print");
x.t("typeof",".isassignablefrom");
x.t("typeof","object");
x.t("obj","comparisonstring");
x.t("obj","var");
x.t("null","example");
x.t("null","refer");
x.t("null","differences");
x.t("null","no");
x.t("null",".constructor.newinstance");
x.t("null","value");
x.t("null","//");
x.t("compared","integer");
x.t("include","gosu");
x.t("include","metadata");
x.t("instances","example");
x.t("variety","different");
x.t("similar","gosu");
x.t("similar","following");
x.t("similar","using");
x.t("value","regular");
x.t("value","unrelated");
x.t("isprimitive","type");
x.t("primarily","compatibility");
x.t("non-primitive","print");
x.t("non-primitive","versions");
x.t("unboxed","type");
x.t("unboxed","boolean");
x.t("unboxed",".isprimitive");
x.t("unboxed",".isassignablefrom");
x.t("additional","methods");
x.t("additional","supported");
x.t("introspection","example");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("callhandler","property");
x.t("mm","string.typeinfo.methods");
x.t("specific","method");
x.t("several","ways");
x.t("compatibility","java");
x.t("hashcode","getclass");
x.t("obj.compareto","(comparisonstring)");
x.t("native","objects");
x.t("native","gosu");
x.t("exposes","uses");
x.t("although","type");
x.t("although","gosu");
x.t("(s)","code");
x.t("mymethodname","print");
x.t("mymethodname","compareto");
x.t("[0]",".intrinsictype");
x.t("[0]",".displayname");
x.t("subtype","types");
x.t("unrelated","type");
x.t("hello","var");
x.t("valid","subtypes");
x.t("shell","class");
x.t("page","error");
x.t("help","menu");
x.t("location","no");
x.t("dynamic","type");
x.t("information","isassignablefrom");
x.t("information","type");
x.t("information","boolean");
x.t("information","examples");
x.t("information","encapsulate");
x.t("information","individual");
x.t("information","either");
x.t("-1","paste");
x.t("-1","-1");
x.t("-1","comes");
x.t("-1","compare");
x.t("data","necessary");
x.t("internally","primitives");
x.t("internally","stored");
x.t("gw.lang.reflect.typesystem","additional");
x.t("type.typeinfo.getconstructor","null");
x.t("29",".name");
x.t("equals","java.lang.object");
x.t("examples","typeinfo");
x.t("defined","java.lang");
x.t("meaning","write");
x.t("values","having");
x.t("values","variables");
x.t("values","contain");
x.t("values","call");
x.t("case","string");
x.t("comparing","primitives");
x.t("runtime","gosu");
x.t("print","(boxed)");
x.t("print","type");
x.t("print","(unboxed)");
x.t("print","true");
x.t("print","name");
x.t("print","boolean");
x.t("print","number");
x.t("print","(integer.name)");
x.t("print","m.callhandler.handlecall");
x.t("print","typeof");
x.t("print","obj.compareto");
x.t("print","(s)");
x.t("print","compare");
x.t("print","[propname]");
x.t("print","object");
x.t("called","properties");
x.t("called","boxed");
x.t("called","unboxed");
x.t("createa","string");
x.t("indexof","java.lang.string");
x.t("indexof","int");
x.t("metatype","means");
x.t("beyond","native");
x.t("encapsulate","type");
x.t("fully-qualified","name");
x.t("two","objects");
x.t("two","different");
x.t("compareto","method");
x.t("compareto","java.lang.string");
x.t("compareto","number");
x.t("compareto","//");
x.t("note","related");
x.t("note","returns");
x.t("classes","business");
x.t("classes","gosu");
x.t("classes","beaninfo");
x.t("classes","implementing");
x.t("classes","java");
x.t("classes","meaning");
x.t("perspective","primitives");
x.t("integer","boolean");
x.t("improvement","using");
x.t("gosu\u2019s","type");
x.t("gosu\u2019s","dynamic");
x.t("gosu\u2019s","typeinfo");
x.t("itself","properties");
x.t("cases","example");
x.t("cases","gosu");
x.t("cases","write");
x.t("numeric","numericspace");
x.t("java.lang.object","tostring");
x.t("subsequence","int");
x.t("comes","print");
x.t("(==)","operator");
x.t(".isassignablefrom","othertype");
x.t(".isassignablefrom","operates");
x.t(".isassignablefrom","string");
x.t(".isassignablefrom","typeof");
x.t("typically","need");
x.t("wrapped","shell");
x.t("work","variety");
x.t("applications","types");
x.t("call","properties");
x.t("call","method");
x.t("call","methods");
x.t("call","case");
x.t("package","example");
x.t("typesystem.getbyfullname","myfullclassname");
x.t("system","designed");
x.t("system","enables");
x.t("system","almost");
x.t("system","java");
x.t("system","similar");
x.t("system","introspection");
x.t("system","using");
x.t("system","class");
x.t("run","time");
x.t("following","example");
x.t("following","important");
x.t("following","code");
x.t("following","class");
x.t("individual","methods");
x.t("either","explicitly");
x.t("either","superclass");
x.t("isgeneric","type");
x.t("used","guidewire");
x.t("entity","objects");
x.t("analogous","gosu\u2019s");
x.t("using","type");
x.t("using","==");
x.t("using","reflection");
x.t("using","collections");
x.t("using","primitives");
x.t("using","gosu");
x.t("using","arrays");
x.t("using","typeis");
x.t("using","square");
x.t("using","method\u2019s");
x.t("using","coercion");
x.t("typeinfo","properties");
x.t("typeinfo","information");
x.t("typeinfo","object");
x.t("warning","general");
x.t("general","avoid");
x.t("general","better");
x.t("//","example");
x.t("//","current");
x.t("//","property");
x.t("//","getting");
x.t("//","directly");
x.t("//","boolean");
x.t("//","find");
x.t("//","up");
x.t("//","createa");
x.t("//","call");
x.t("//","using");
x.t("class","boolean");
x.t("class","useful");
x.t("class","itype");
x.t("class","instances");
x.t("class","native");
x.t("class","gw.lang.reflect.typesystem");
x.t("class","compareto");
x.t("class","class");
x.t("class","dynamically");
x.t("containing","property");
x.t("containing","fully-qualified");
x.t("hour","//");
x.t("coercion","isassignablefrom");
x.t("coercion","data");
x.t("isfinal","type");
x.t("connect","type");
x.t("similarly","implement");
x.t("class\u2019s","beaninfo");
x.t("pass","list");
x.t("pass","primitives");
x.t("returns","false");
x.t("returns","true");
x.t("returns","-1");
x.t("compare","type");
x.t("compare","string");
x.t("compare","types");
x.t("bad","approach");
x.t("isarray","type");
x.t("instantiates","using");
x.t("behavior","run");
x.t("codepointbefore","int");
x.t("operator","method");
x.t("operator","whereas");
x.t("operator","test");
x.t("operator","almost");
x.t("var","myfullclassname");
x.t("var","instance");
x.t("var","boxed");
x.t("var","type");
x.t("var","new");
x.t("var","mm.findfirst");
x.t("var","propname");
x.t("var","props");
x.t("var","text_val=eval");
x.t("var","methods");
x.t("var","boolean");
x.t("var","string");
x.t("var","comparisonstring");
x.t("var","obj");
x.t("var","unboxed");
x.t("var","mm");
x.t("var","mymethodname");
x.t("var","var");
x.t("var","object");
x.t("string.typeinfo.methods","var");
x.t("parameterized","returns");
x.t("coerced","(converted)");
x.t("versions","back");
x.t("versions","primitives");
x.t("versions","gosu");
x.t("versions","int");
x.t("notable","pass");
x.t("including","properties");
x.t("learn","type");
x.t("serious","problems");
x.t("alphaspace","alphanumeric");
x.t("[propname]","time");
x.t("notifyall","@itype");
x.t("even","extend");
x.t("even","call");
x.t("equality","(==)");
x.t("equality","operator");
x.t("object","example");
x.t("object","root");
x.t("object","properties");
x.t("object","refer");
x.t("object",".typeinfo.properties");
x.t("object","type");
x.t("object","includes");
x.t("object","assignable");
x.t("object",".typeinfo.methods");
x.t("object","supertype");
x.t("object","string");
x.t("object","exposed");
x.t("object","code");
x.t("object","thus");
x.t("object","whose");
x.t("object","variable");
x.t("object","values");
x.t("object","itself");
x.t("object","warning");
x.t("object","using");
x.t("object","//");
x.t("contains","handlecall");
x.t("contains","list");
x.t("item","list");
x.t("tester","example");
x.t("tester","//");
x.t("tester","var");
x.t("gets","method");
x.t("gets","type");
x.t("sourcetype","isassignablefrom");
x.t("dynamically","typed");
x.t("dynamically","constructed");
x.t("difference","java");
}
