function FileData_Pairs(x)
{
x.t("safely","concurrently-accessed");
x.t("safely","gets");
x.t("concurrently-accessed","data");
x.t("particularly","careful");
x.t("example","plugin");
x.t("example","want");
x.t("example","claimcenter");
x.t("cleanup","exceptions");
x.t("synchronized","access");
x.t("method","calls");
x.t("method","different");
x.t("provide","proper");
x.t("transactions","attempt");
x.t("rather","once");
x.t("simultaneously","plugin");
x.t("simultaneously","code");
x.t("diagnose","debug");
x.t("easy","create");
x.t("easy","write");
x.t("pattern","typesafe");
x.t("needs","ensure");
x.t("ables","variables");
x.t("implement","caches");
x.t("subtle","problems");
x.t("files","claimcenter");
x.t("situation","requires");
x.t("static","variables");
x.t("static","vari");
x.t("timing","multi-user");
x.t("create","custom");
x.t("built-in","systems");
x.t("variables","static");
x.t("variables","synchronization");
x.t("variables","lazyvar");
x.t("variables","stored");
x.t("variables","concurrent");
x.t("variables","extremely");
x.t("variables","shared");
x.t("variables","special");
x.t("variables","multi-threaded");
x.t("once","per");
x.t("instance","example");
x.t("instance","plugin");
x.t("instance","class");
x.t("always","require");
x.t("bundles","transactions");
x.t("synchronization","example");
x.t("synchronization","refers");
x.t("topic","involves");
x.t("refers","locking");
x.t("locking","pattern");
x.t("locking","access");
x.t("plugin","method");
x.t("plugin","instance");
x.t("plugin","support");
x.t("plugin","access");
x.t("plugin","exists");
x.t("plugin","methods");
x.t("plugin","implementation");
x.t("user","request");
x.t("user","sessions");
x.t("user","warning");
x.t("multi-user","multi-threaded");
x.t("easy-to-read","syntax");
x.t("easy-to-read","using");
x.t("try","synchronize");
x.t("cache","cache");
x.t("cache","thread-safe");
x.t("cache","guidewire");
x.t("cache","applies");
x.t("cache","similar");
x.t("cache","values");
x.t("cache","entity");
x.t("cache","class");
x.t("cache","warning");
x.t("contexts","always");
x.t("uses","lazyvar");
x.t("uses","java");
x.t("last","result");
x.t("text_val.select","link");
x.t("necessary","ensure");
x.t("support","easy-to-read");
x.t("support","multiple");
x.t("support","java");
x.t("deployment","properly");
x.t("people","team");
x.t("people","call");
x.t("look","up");
x.t("calls","plugin");
x.t("time","code");
x.t("time","ensure");
x.t("multiple","method");
x.t("multiple","user");
x.t("multiple","people");
x.t("multiple","calls");
x.t("multiple","simultaneous");
x.t("multiple","threads");
x.t("thread-safe","lazyvar");
x.t("thread-safe","declares");
x.t("thread-safe","code");
x.t("thread-safe","information");
x.t("protect","access");
x.t("protect","data");
x.t("guidewire","entities");
x.t("guidewire","strongly");
x.t("guidewire","application");
x.t("require","proper");
x.t("apis","easy");
x.t("apis","return");
x.t("apis","affect");
x.t("apis","synchronize");
x.t("put","data");
x.t("automatically","synchronizes");
x.t("automatically","manages");
x.t("lazyvar","class");
x.t("wraps","double-checked");
x.t("typesafe","holder");
x.t("entities","bundles");
x.t("entities","try");
x.t("entities","defined");
x.t("link","directly");
x.t("access","simultaneously");
x.t("access","static");
x.t("access","multiple");
x.t("access","guidewire");
x.t("access","lazy");
x.t("access","collections");
x.t("access","avoid");
x.t("access","concurrent");
x.t("access","problems");
x.t("access","java-based");
x.t("access","data");
x.t("access","shared");
x.t("access","semantics");
x.t("access","classes");
x.t("access","entity");
x.t("access","class");
x.t("access","threads");
x.t("certain","static");
x.t("want","manage");
x.t("single","user");
x.t("single","local");
x.t("speaking","assume");
x.t("objects","provide");
x.t("objects","support");
x.t("objects","put");
x.t("objects","gosu");
x.t("objects","concurrency");
x.t("synchronizes","map");
x.t("java.util.concurrent","gosu");
x.t("includes","built-in");
x.t("messsage","gosu");
x.t("proper","synchronization");
x.t("proper","concurrent");
x.t("proper","concurrency");
x.t("http","request");
x.t("utilities","class");
x.t("lazy","variables");
x.t("lazy","concurrent");
x.t("lazy","variable");
x.t("machine","access");
x.t("machine","server");
x.t("recommends","multiple");
x.t("guide","concurrency");
x.t("applies","multiple");
x.t("assume","shared");
x.t("testing","environment");
x.t("holder","information");
x.t("overview","thread");
x.t("collections","entities");
x.t("directly","page");
x.t("requires","proper");
x.t("dangerous","multi-threaded");
x.t("locks","reentrant");
x.t("locks","custom");
x.t("locks","java");
x.t("handle","cleanup");
x.t("text_val.focus","text_val.select");
x.t("common","situation");
x.t("stored","once");
x.t("libraries","access");
x.t("gosu","automatically");
x.t("gosu","objects");
x.t("gosu","provides");
x.t("gosu","constructs");
x.t("gosu","makes");
x.t("gosu","thread");
x.t("gosu","reference");
x.t("gosu","scoping");
x.t("exactly","instance");
x.t("performance","cache");
x.t("cache-related","code");
x.t("avoid","data");
x.t("virtual","machine");
x.t("declares","cache");
x.t("declares","concurrent");
x.t("reentrant","objects");
x.t("reentrant","locks");
x.t("reentrant","object");
x.t("custom","gosu");
x.t("custom","reentrant");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","java");
x.t("alternatively","protect");
x.t("methods","time");
x.t("provides","access");
x.t("provides","following");
x.t("constructs","first");
x.t("(lru)","cache");
x.t("none","concurrency");
x.t("gw.api.web.scopes","help");
x.t("up","quickly");
x.t("makes","easy");
x.t("makes","easier");
x.t("writes","shared");
x.t("map","objects");
x.t("loading","caching");
x.t("concurrent","variables");
x.t("concurrent","cache");
x.t("concurrent","access");
x.t("concurrent","lazy");
x.t("sets","data");
x.t("local","memory");
x.t("claimcenter","automatically");
x.t("claimcenter","includes");
x.t("claimcenter","manages");
x.t("claimcenter","call");
x.t("impossible","control");
x.t("write","thread-safe");
x.t("caches","last");
x.t("caches","cause");
x.t("caches","difficult");
x.t("attempt","synchronize");
x.t("thread","needs");
x.t("thread","safe");
x.t("thread","safety");
x.t("thread","interacts");
x.t("structures","thread");
x.t("problems","caches");
x.t("problems","production");
x.t("problems","occur");
x.t("request","single");
x.t("request","http");
x.t("clusters","none");
x.t("clusters","information");
x.t("clusters","practice");
x.t("error","occurred");
x.t("strongly","recommends");
x.t("review","cache-related");
x.t("syntax","reentrant");
x.t("clus","ters");
x.t("means","gosu");
x.t("means","following");
x.t("first","time");
x.t("guidewire_selectall","var");
x.t("cause","subtle");
x.t("cause","problems");
x.t("control","testing");
x.t("function","guidewire_selectall");
x.t("design","code");
x.t("implements","people");
x.t("java-based","classes");
x.t("cluster","clusters");
x.t("cluster","information");
x.t("safe","common");
x.t("carefully","review");
x.t("carefully","synchronize");
x.t("reads","writes");
x.t("different","plugin");
x.t("different","scope");
x.t("different","threads");
x.t("unique","user");
x.t("handling","data");
x.t("handling","information");
x.t("properly","handle");
x.t("properly","synchronize");
x.t("types","concurrency");
x.t("scope","semantics");
x.t("reference","guide");
x.t("code","safely");
x.t("code","uses");
x.t("code","support");
x.t("code","scoping");
x.t("code","called");
x.t("scoping","classes");
x.t("safety","concurrency");
x.t("return","map");
x.t("issue","generally");
x.t("memory","cache");
x.t("environment","gosu");
x.t("environment","cause");
x.t("environment","using");
x.t("environment","difficult");
x.t("least","recently");
x.t("affect","shared");
x.t("ensure","multiple");
x.t("ensure","protect");
x.t("ensure","synchronize");
x.t("ensure","simultaneous");
x.t("java","virtual");
x.t("java","concurrency");
x.t("java","monitor");
x.t("java","package");
x.t("variable","thread-safe");
x.t("variable","means");
x.t("quickly","thread-safe");
x.t("recently","used");
x.t("concurrency","apis");
x.t("concurrency","overview");
x.t("concurrency","libraries");
x.t("concurrency","gosu");
x.t("concurrency","function");
x.t("concurrency","design");
x.t("concurrency","handling");
x.t("concurrency","monitor");
x.t("occurred","messsage");
x.t("sessions","generally");
x.t("extremely","dangerous");
x.t("extremely","difficult");
x.t("synchronize","protect");
x.t("synchronize","guidewire");
x.t("synchronize","access");
x.t("synchronize","reads");
x.t("synchronize","across");
x.t("synchronize","intelligently");
x.t("configuration","files");
x.t("interacts","data");
x.t("similar","least");
x.t("easier","access");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("involves","concurrent");
x.t("implementation","support");
x.t("implementation","exactly");
x.t("ters","entity");
x.t("programming","certain");
x.t("actually","access");
x.t("temporary","storage");
x.t("double-checked","locking");
x.t("clauses","properly");
x.t("systems","synchronize");
x.t("manages","synchronized");
x.t("manages","access");
x.t("page","error");
x.t("corruption","topic");
x.t("help","synchronize");
x.t("data","safely");
x.t("data","necessary");
x.t("data","guidewire");
x.t("data","apis");
x.t("data","access");
x.t("data","alternatively");
x.t("data","claimcenter");
x.t("data","structures");
x.t("data","code");
x.t("data","temporary");
x.t("data","corruption");
x.t("data","shared");
x.t("data","experienced");
x.t("data","model");
x.t("data","class");
x.t("data","using");
x.t("data","across");
x.t("information","gosu");
x.t("information","concurrent");
x.t("information","claimcenter");
x.t("information","concurrency");
x.t("shared","data");
x.t("shared","across");
x.t("shared","resources");
x.t("production","deployment");
x.t("semantics","gosu");
x.t("semantics","information");
x.t("result","performance");
x.t("team","carefully");
x.t("practice","data");
x.t("defined","data");
x.t("application","contexts");
x.t("scope-related","utilities");
x.t("values","look");
x.t("monitor","locks");
x.t("called","thread");
x.t("called","concurrency");
x.t("simultaneous","calls");
x.t("simultaneous","access");
x.t("maps","lazy");
x.t("maps","scope-related");
x.t("two","different");
x.t("two","threads");
x.t("classes","easy-to-read");
x.t("classes","monitor");
x.t("classes","pre-scoped");
x.t("cases","particularly");
x.t("debug","timing");
x.t("experienced","multi-threaded");
x.t("call","lazy");
x.t("call","two");
x.t("package","java.util.concurrent");
x.t("locally","across");
x.t("multi-threaded","environment");
x.t("multi-threaded","programming");
x.t("special","cases");
x.t("manage","single");
x.t("following","plugin");
x.t("following","types");
x.t("storage","unique");
x.t("used","(lru)");
x.t("entity","loading");
x.t("entity","data");
x.t("model","configuration");
x.t("caching","locally");
x.t("class","rather");
x.t("class","static");
x.t("class","uses");
x.t("class","multiple");
x.t("class","wraps");
x.t("class","gw.api.web.scopes");
x.t("class","ensure");
x.t("class","gw.util.concurrent");
x.t("vari","ables");
x.t("warning","static");
x.t("warning","caches");
x.t("using","static");
x.t("using","different");
x.t("using","clauses");
x.t("difficult","diagnose");
x.t("difficult","implement");
x.t("difficult","impossible");
x.t("pre-scoped","maps");
x.t("additionally","gosu");
x.t("per","instance");
x.t("per","class");
x.t("across","clusters");
x.t("across","clus");
x.t("across","cluster");
x.t("occur","extremely");
x.t("occur","additionally");
x.t("intelligently","cache");
x.t("var","text_val=eval");
x.t("careful","example");
x.t("exceptions","occur");
x.t("threads","access");
x.t("threads","carefully");
x.t("threads","issue");
x.t("threads","java");
x.t("threads","ensure");
x.t("threads","actually");
x.t("threads","shared");
x.t("generally","speaking");
x.t("generally","called");
x.t("gets","sets");
x.t("resources","static");
x.t("resources","two");
x.t("server","means");
x.t("gw.util.concurrent","declares");
x.t("gw.util.concurrent","implements");
x.t("object","handling");
}
