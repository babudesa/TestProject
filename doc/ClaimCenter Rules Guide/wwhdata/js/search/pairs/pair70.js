function FileData_Pairs(x)
{
x.t("example","entering");
x.t("example","searches");
x.t("example","attempts");
x.t("example","sets");
x.t("example","code");
x.t("example","assigns");
x.t("example","city");
x.t("example","following");
x.t("serves","center");
x.t("asc.usersearchcriteria.attributename","french");
x.t("method","example");
x.t("method","within");
x.t("method","gw.api.geocode.geocodescripthelper.setupuserproximitysearch");
x.t("method","performs");
x.t("method","bases");
x.t("method","uses");
x.t("method","compiles");
x.t("method","includes");
x.t("method","nearly");
x.t("method","slow");
x.t("method","provides");
x.t("method","up");
x.t("method","sets");
x.t("method","repeats");
x.t("method","rotate");
x.t("method","first");
x.t("method","works");
x.t("method","reference");
x.t("method","assigns");
x.t("method","logs");
x.t("method","tries");
x.t("method","similar");
x.t("method","discards");
x.t("method","computes");
x.t("method","takes");
x.t("method","information");
x.t("method","ignores");
x.t("method","choose");
x.t("method","except");
x.t("method","following");
x.t("method","returns");
x.t("method","suits");
x.t("method","therefore");
x.t("parameter","description");
x.t("parameter","false");
x.t("parameter","true");
x.t("parameter","currentgroup");
x.t("parameter","null");
x.t("parameter","takes");
x.t("possible","example");
x.t("else","print");
x.t("gw.api.geocode.ccgeocodescripthelper","//");
x.t("claim","assignment");
x.t("claim","someone");
x.t("claim","french");
x.t("claim","loss");
x.t("claim","var");
x.t("rather","specific");
x.t("rather","usersearchcriteria");
x.t("lists","assignment");
x.t("implement","access");
x.t("setupuserproximitysearch","searchcenter");
x.t("within","10");
x.t("within","miles");
x.t("within","context");
x.t("usc.usersearchcriteria.contact.address.postalcode","94404");
x.t("table","lists");
x.t("describes","differences");
x.t("tree","assignuserbylocationusingproximityandattributes");
x.t("tree","assignuserbyproximitywithsearchcriteria");
x.t("contact","management");
x.t("contact","entity");
x.t("business","need");
x.t("studio","help");
x.t("description","address");
x.t("description","usc");
x.t("description","searchcenter");
x.t("description","asc");
x.t("gw.api.geocode.geocodescripthelper.setupuserproximitysearch","method");
x.t("userattributetype.tc_language","frenchspeaker.attributevalue");
x.t("key","address");
x.t("key","contactsearchcriteria");
x.t("always","assign");
x.t("10","miles");
x.t("10","unitofdistance.tc_mile");
x.t("10","mile");
x.t("94404","claim.currentassignment.assignuserbyproximitywithsearchcriteria");
x.t("performs","following");
x.t("bases","round-robin");
x.t("foreign","key");
x.t("user","closest");
x.t("user","certain");
x.t("user","specified");
x.t("user","addresses");
x.t("user","perform");
x.t("user","search");
x.t("user","attribute");
x.t("user","cap");
x.t("user","return");
x.t("user","location");
x.t("user","city");
x.t("user","based");
x.t("user","attributes");
x.t("current","group");
x.t("claim.assignedgroup","assignuserbylocationusingproximityandattributes");
x.t("claim.assignedgroup","actions.exit");
x.t("creates","new");
x.t("maximizes","benefit");
x.t("uses","gw.api.geocode.ccgeocodescripthelper");
x.t("uses","assignmentsearchcriteria");
x.t("uses","distance");
x.t("uses","part");
x.t("uses","primary");
x.t("uses","proximity");
x.t("uses","geocodescripthelper.setupassignmentproximitysearch");
x.t("uses","gw.api.geocode.geocodescripthelper");
x.t("uses","following");
x.t("uses","object");
x.t("uses","round-robin");
x.t("field","returns");
x.t("unitofdistance","parameter");
x.t("unitofdistance","distance-based");
x.t("unitofdistance","typelist");
x.t("text_val.select","link");
x.t("center","method");
x.t("center","search");
x.t("center","location");
x.t("descendant","groups");
x.t("supply","guidewire");
x.t("state","postal");
x.t("errors","setting");
x.t("displays","results");
x.t("french-speaking","attribute");
x.t("type","search");
x.t("type","gw.api.assignment.assignmentsearchcriteria");
x.t("type","usersearchcriteria");
x.t("time","search");
x.t("calculation","attributes");
x.t("speaker","within");
x.t("speaker","closest");
x.t("public","boolean");
x.t("satisfy","user");
x.t("calls","method");
x.t("claim.currentassignment.assignuserbyproximitywithsearchcriteria","usc");
x.t("multiple","attributes");
x.t("frenchspeaker.attributevalue","french");
x.t("attributebasedassignmentcriteria.addtoattributecriteria","frenchspeaker");
x.t("activity.currentassignment.assignedgroup","assignuserbyproximitywithsearchcriteria");
x.t("compiles","list");
x.t("guidewire","recommends");
x.t("guidewire","provides");
x.t("closest","user");
x.t("closest","specified");
x.t("closest","distance");
x.t("closest","address");
x.t("closest","three");
x.t("closest","straight-line");
x.t("closest","given");
x.t("attributecrieriaelement","object");
x.t("claimant","claim");
x.t("claimant","address");
x.t("activity.claimant.person.primaryaddress","attributebasedassignmentcriteria");
x.t("link","directly");
x.t("advanced","topics");
x.t("differences","method");
x.t("single","attribute");
x.t("geocode","user");
x.t("geocode","supplied");
x.t("geocode","users");
x.t("access","gosu");
x.t("access","location");
x.t("items","assignuserbylocationusingproximitysearch");
x.t("supplied","group");
x.t("supplied","address");
x.t("supplied","location");
x.t("among","users");
x.t("want","perform");
x.t("want","find");
x.t("certain","attributes");
x.t("new","attributecrieriaelement");
x.t("new","attributebasedassignmentcriteria");
x.t("new","attributecriteriaelement");
x.t("new","object");
x.t("signature","parameters");
x.t("assignmentsearchcriteria","object");
x.t("claim.assignuserbyproximitywithassignmentsearchcriteria","asc");
x.t("geocoding","gosu");
x.t("geocoding","attempt");
x.t("geocoding","proximity");
x.t("includes","users");
x.t("nearly","identical");
x.t("messsage","claimcenter");
x.t("need","guidewire");
x.t("entering","proximity");
x.t(".getproximitysearchcriteria","method");
x.t("list","include");
x.t("list","users");
x.t("found","users");
x.t("determines","claimcenter");
x.t("determines","number");
x.t("ment","algorithm");
x.t("finds","nearest");
x.t("finds","users");
x.t("indicates","unit");
x.t("assignment","method");
x.t("assignment","guidewire");
x.t("assignment","among");
x.t("assignment","methods");
x.t("assignment","proximity-based");
x.t("assignment","claimcenter");
x.t("assignment","function");
x.t("assignment","cannot");
x.t("assignment","succeeded");
x.t("assignment","null");
x.t("assignment","rules");
x.t("assignment","claim.losslocation");
x.t("assignment","algorithm");
x.t("assignment","assignuserbylocationusingproximitysearch");
x.t("assignment","following");
x.t("assignment","var");
x.t("group","method");
x.t("group","tree");
x.t("group","includes");
x.t("group","currentgroup");
x.t("group","whose");
x.t("group","users");
x.t("group","includesubgroups");
x.t("recommends","review");
x.t("recommends","consider");
x.t("recommends","following");
x.t("recommends","general");
x.t("menu","search");
x.t("assign","claim");
x.t("assign","ment");
x.t("assign","activity");
x.t("assign","entity");
x.t("benefit","round-robin");
x.t("pasadena","usc.usersearchcriteria.contact.address.postalcode");
x.t("guide","advanced");
x.t("guide","choose");
x.t("api","reference");
x.t("results","zero");
x.t("results","ignored");
x.t("results","return");
x.t("results","less");
x.t("results","round-robin");
x.t("nearest","users");
x.t("fails","supplied");
x.t("false","activity.currentassignment.assignedgroup");
x.t("false","want");
x.t("false","unitofdistance.tc_mile");
x.t("false","unable");
x.t("false","returns");
x.t("directly","page");
x.t("specified","group");
x.t("specified","address");
x.t("specified","cap");
x.t("specified","location");
x.t("true","method");
x.t("true","10");
x.t("true","claim.assignedgroup");
x.t("true","want");
x.t("true","notice");
x.t("true","include");
x.t("true","claim.currentassignment.assignedgroup");
x.t("text_val.focus","text_val.select");
x.t("functionality","find");
x.t("functionality","following");
x.t("no","current");
x.t("no","searches");
x.t("claimant\u2019s","primary");
x.t("account","search");
x.t("resulting","users");
x.t("slow","compared");
x.t("searches","geocoding");
x.t("searches","indicates");
x.t("searches","determines");
x.t("searches","group");
x.t("searches","false");
x.t("searches","true");
x.t("searches","french");
x.t("searches","search");
x.t("searches","maximum");
x.t("searches","ordinal-based");
x.t("gosu","contact");
x.t("gosu","api");
x.t("addresses","database");
x.t("someone","closest");
x.t("assignuserbylocationandattributes","method");
x.t("french","speaker");
x.t("french","attributebasedassignmentcriteria.addtoattributecriteria");
x.t("french","asc.usersearchcriteria.attributevalue");
x.t("french","adds");
x.t("performance","implications");
x.t("proximity-related","items");
x.t("distance","user");
x.t("distance","calculation");
x.t("distance","claimant\u2019s");
x.t("distance","number");
x.t("distance","primary");
x.t("distance","along");
x.t("perform","ordinal-based");
x.t("perform","distance-based");
x.t("perform","round-robin");
x.t("part","search");
x.t("limit","number");
x.t("avoid","errors");
x.t("//needed","using");
x.t("custom","attribute");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","number");
x.t("provides","slightly");
x.t("methods","method");
x.t("methods","describes");
x.t("methods","guidewire");
x.t("methods","geocodescripthelper");
x.t("methods","integrate");
x.t("boolean","assignuserbyproximitywithassignmentsearchcriteria");
x.t("boolean","assignuserbylocationusingproximitysearch");
x.t("boolean","assignuserbylocationusingproximityandattributes");
x.t("boolean","assignuserbyproximitywithsearchcriteria");
x.t("parameters","parameter");
x.t("parameters","setupuserproximitysearch");
x.t("parameters","proximity");
x.t("zero","sets");
x.t("zero","less");
x.t("geocodescripthelper.setupuserproximitysearch","claim.losslocation");
x.t("proximity-based","assignment");
x.t("find","user");
x.t("find","closest");
x.t("find","specific");
x.t("up","french-speaking");
x.t("up","parameters");
x.t("up","number");
x.t("up","proximity");
x.t("up","ordinal-based");
x.t("up","distance-based");
x.t("search","method");
x.t("search","claim");
x.t("search","user");
x.t("search","field");
x.t("search","unitofdistance");
x.t("search","center");
x.t("search","type");
x.t("search","guidewire");
x.t("search","geocoding");
x.t("search","finds");
x.t("search","results");
x.t("search","functionality");
x.t("search","avoid");
x.t("search","address");
x.t("search","sets");
x.t("search","radius");
x.t("search","cannot");
x.t("search","begins");
x.t("search","important");
x.t("search","proximity");
x.t("search","already");
x.t("search","assignuserbyproximitywithassignmentsearchcriteria");
x.t("search","algorithm");
x.t("search","attributebasedassignmentcriteria");
x.t("search","either");
x.t("search","includesubgroups");
x.t("search","using");
x.t("search","isdistancebased");
x.t("search","criteria");
x.t("address","serves");
x.t("address","example");
x.t("address","contact");
x.t("address","maximizes");
x.t("address","uses");
x.t("address","center");
x.t("address","claimant");
x.t("address","specified");
x.t("address","address");
x.t("address","cap");
x.t("address","starting");
x.t("address","ordinal-based");
x.t("address","measured");
x.t("address","claim.losslocation");
x.t("address","claim.assignuserbylocationusingproximitysearch");
x.t("address","location");
x.t("address","attributebasedassignmentcriteria");
x.t("address","includesubgroups");
x.t("address","object");
x.t("miles","(kilometers)");
x.t("miles","kilometers");
x.t("miles","distance-based");
x.t("//set","user");
x.t("attempts","assign");
x.t("claimcenter","displays");
x.t("claimcenter","assignment");
x.t("claimcenter","rules");
x.t("claimcenter","geoc");
x.t("attempt","fails");
x.t("sets","up");
x.t("sets","maximum");
x.t("sets","starting");
x.t("fields","search");
x.t("unitofdistance.tc_mile","claim.currentassignment.assignuserbyproximitywithsearchcriteria");
x.t("unitofdistance.tc_mile","//set");
x.t("unitofdistance.tc_mile","distance-based");
x.t("unitofdistance.tc_mile","//");
x.t("mile","radius");
x.t("attribute","uses");
x.t("attribute","assignmentsearchcriteria");
x.t("attribute","match");
x.t("repeats","process");
x.t("radius","claim");
x.t("radius","10");
x.t("radius","miles");
x.t("three","users");
x.t("farthest","search");
x.t("failed","else");
x.t("failed","uses");
x.t("error","no");
x.t("error","occurred");
x.t("error","returns");
x.t("review","gosu");
x.t("subgroups","supplied");
x.t("notice","code");
x.t("members","consider");
x.t("rotate","resulting");
x.t("select","studio");
x.t("select","closest");
x.t("earth","method");
x.t("first","creates");
x.t("first","uses");
x.t("first","geocode");
x.t("first","geocodes");
x.t("cap","limit");
x.t("cap","integer");
x.t("cap","includesubgroups");
x.t("means","repeated");
x.t("unit","miles");
x.t("guidewire_selectall","var");
x.t("number","unitofdistance");
x.t("number","results");
x.t("number","proximity-related");
x.t("number","proximity-based");
x.t("number","specific");
x.t("number","users");
x.t("number","distance-based");
x.t("oding","server");
x.t("claim.claimant.primaryaddress","true");
x.t("activity","french");
x.t("usc.getcontact",".getproximitysearchcriteria");
x.t("processing","reduces");
x.t("computed","straight-line");
x.t("function","guidewire_selectall");
x.t("advance","time");
x.t("maximum","number");
x.t("different","functionality");
x.t("particular","business");
x.t("cannot","null");
x.t("against","includesubgroups");
x.t("straight-line","distance");
x.t("whether","assignment");
x.t("currentgroup","method");
x.t("currentgroup","parameter");
x.t("currentgroup","group");
x.t("currentgroup","error");
x.t("begins","users");
x.t("rotation","exact");
x.t("starting","search");
x.t("starting","location");
x.t("(kilometers)","searchcenter");
x.t("ignored","otherwise");
x.t("asc.usersearchcriteria.attributevalue","claim.assignuserbyproximitywithassignmentsearchcriteria");
x.t("match","asc.usersearchcriteria.attributename");
x.t("match","cap");
x.t("match","against");
x.t("identical","calls");
x.t("identical","assignuserbyproximitywithsearchcriteria");
x.t("succeeded","failed");
x.t("loss","location");
x.t("works","attributes");
x.t("important","assignment");
x.t("important","proximity");
x.t("reference","proximity-based");
x.t("reference","select");
x.t("reference","material");
x.t("material","associated");
x.t("code","rather");
x.t("code","search");
x.t("code","first");
x.t("code","usc.getcontact");
x.t("code","logs");
x.t("reduces","load");
x.t("slightly","different");
x.t("assigns","claim");
x.t("assigns","value");
x.t("assigns","entity");
x.t("primary","address");
x.t("groups","specified");
x.t("adds","new");
x.t("return","method");
x.t("return","greater");
x.t("return","ordinal");
x.t("proximity","uses");
x.t("proximity","claimant");
x.t("proximity","assignment");
x.t("proximity","searches");
x.t("proximity","search");
x.t("proximity","loss");
x.t("proximity","information");
x.t("proximity","restrictions");
x.t("database","geocode");
x.t("logs","error");
x.t("logs","whether");
x.t("given","address");
x.t("frenchspeaker","new");
x.t("frenchspeaker","activity.currentassignment");
x.t("exact","usersearchcriteria");
x.t("ordinal-based","example");
x.t("ordinal-based","searches");
x.t("ordinal-based","search");
x.t("ordinal-based","proximity");
x.t("gw.api.assignment.assignmentsearchcriteria","sets");
x.t("whose","members");
x.t("geocoded","access");
x.t("repeated","identical");
x.t("greater","zero");
x.t("geocodescripthelper.setupassignmentproximitysearch","method");
x.t("geocodescripthelper.setupassignmentproximitysearch","claim.losslocation");
x.t("occurred","messsage");
x.t("rules","else");
x.t("rules","guide");
x.t("rules","assignuserbyproximitywithassignmentsearchcriteria");
x.t("consider","assignment");
x.t("consider","performance");
x.t("null","method");
x.t("null","currentgroup");
x.t("null","ordinal-based");
x.t("null","usersearchcriteria");
x.t("null","following");
x.t("null","var");
x.t("null","not-");
x.t("tries","assign");
x.t("pick","found");
x.t("less","method");
x.t("compared","assignment");
x.t("include","proximity");
x.t("include","users");
x.t("include","round-robin");
x.t("similar","assignuserbylocationandattributes");
x.t("value","unitofdistance");
x.t("value","determines");
x.t("value","french");
x.t("discards","users");
x.t("claim.currentassignment.assignedgroup","actions.exit");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","assignment");
x.t("specific","fields");
x.t("specific","street");
x.t("measured","great-circle");
x.t("great-circle","distance");
x.t("already","geocoded");
x.t("claim.losslocation","supplied");
x.t("claim.losslocation","false");
x.t("claim.losslocation","true");
x.t("claim.losslocation","failed");
x.t("claim.losslocation","null");
x.t("process","descendant");
x.t("usc","geocodescripthelper.setupuserproximitysearch");
x.t("usc","cap");
x.t("usc","-1");
x.t("usc","object");
x.t("computes","distance");
x.t("takes","user");
x.t("takes","value");
x.t("takes","following");
x.t("page","error");
x.t("help","menu");
x.t("along","surface");
x.t("surface","earth");
x.t("location","serves");
x.t("location","method");
x.t("location","possible");
x.t("location","uses");
x.t("location","center");
x.t("location","supplied");
x.t("location","perform");
x.t("location","notice");
x.t("location","computed");
x.t("location","proximity");
x.t("location","ordinal-based");
x.t("location","claim.losslocation");
x.t("location","following");
x.t("location","usc.usersearchcriteria.contact.address.city");
x.t("claim.assignuserbylocationusingproximitysearch","claim.claimant.primaryaddress");
x.t("context","assignment");
x.t("information","method");
x.t("information","search");
x.t("information","proximity");
x.t("-1","true");
x.t("ignores","parameter");
x.t("searchcenter","location");
x.t("searchcenter","isdistancebased");
x.t("usersearchcriteria","supply");
x.t("usersearchcriteria","sets");
x.t("usersearchcriteria","object");
x.t("implications","using");
x.t("unitofdistance.tc_kilometer","unitofdistance.tc_mile");
x.t("choose","implement");
x.t("choose","proximity-based");
x.t("city","state");
x.t("city","postal");
x.t("print","claim.losslocation");
x.t("print","assigning");
x.t("topics","assignment");
x.t("assignuserbyproximitywithassignmentsearchcriteria","single");
x.t("assignuserbyproximitywithassignmentsearchcriteria","boolean");
x.t("assignuserbyproximitywithassignmentsearchcriteria","asc");
x.t("geoc","oding");
x.t("users","method");
x.t("users","within");
x.t("users","current");
x.t("users","satisfy");
x.t("users","supplied");
x.t("users","list");
x.t("users","find");
x.t("users","search");
x.t("users","farthest");
x.t("users","subgroups");
x.t("users","means");
x.t("users","return");
x.t("users","consider");
x.t("users","include");
x.t("users","information");
x.t("users","searchcenter");
x.t("integer","value");
x.t("otherwise","parameter");
x.t("algorithm","method");
x.t("algorithm","always");
x.t("algorithm","user");
x.t("algorithm","uses");
x.t("algorithm","search");
x.t("algorithm","pick");
x.t("algorithm","assignuserbylocationusingproximitysearch");
x.t("algorithm","includesubgroups");
x.t("unable","assignment");
x.t("attributebasedassignmentcriteria","user");
x.t("attributebasedassignmentcriteria","new");
x.t("attributebasedassignmentcriteria","false");
x.t("attributebasedassignmentcriteria","includesubgroups");
x.t("attributebasedassignmentcriteria","var");
x.t("attributebasedassignmentcriteria","object");
x.t("based","user");
x.t("street","address");
x.t("distance-based","example");
x.t("distance-based","searches");
x.t("distance-based","search");
x.t("distance-based","proximity");
x.t("kilometers","distance-based");
x.t("gw.api.geocode.geocodescripthelper","//");
x.t("following","example");
x.t("following","method");
x.t("following","table");
x.t("following","signature");
x.t("following","parameters");
x.t("following","search");
x.t("following","code");
x.t("assignuserbylocationusingproximitysearch","method");
x.t("assignuserbylocationusingproximitysearch","no");
x.t("assignuserbylocationusingproximitysearch","boolean");
x.t("assignuserbylocationusingproximitysearch","address");
x.t("management","guide");
x.t("entity","user");
x.t("entity","closest");
x.t("entity","turn");
x.t("either","advance");
x.t("except","uses");
x.t("except","takes");
x.t("attributecriteriaelement","frenchspeaker.attributetype");
x.t("geocodes","location");
x.t("system","method");
x.t("contactsearchcriteria","entity");
x.t("turn","foreign");
x.t("ordinal","search");
x.t("includesubgroups","parameter");
x.t("includesubgroups","true");
x.t("includesubgroups","currentgroup");
x.t("general","location");
x.t("using","method");
x.t("using","supplied");
x.t("using","claim.losslocation");
x.t("using","following");
x.t("using","setting");
x.t("setting","up");
x.t("isdistancebased","parameter");
x.t("isdistancebased","number");
x.t("isdistancebased","distance-based");
x.t("typelist","unitofdistance.tc_kilometer");
x.t("//","custom");
x.t("//","up");
x.t("returns","user");
x.t("returns","closest");
x.t("returns","false");
x.t("returns","number");
x.t("returns","usersearchcriteria");
x.t("criteria","assignment");
x.t("criteria","specified");
x.t("criteria","geocodescripthelper");
x.t("postal","code");
x.t("geocodescripthelper","method");
x.t("assigning","proximity");
x.t("asc","cap");
x.t("asc","geocodescripthelper.setupassignmentproximitysearch");
x.t("asc","-1");
x.t("asc","object");
x.t("suits","particular");
x.t("associated","method");
x.t("therefore","want");
x.t("load","system");
x.t("var","text_val=eval");
x.t("var","frenchspeaker");
x.t("var","usc");
x.t("var","attributebasedassignmentcriteria");
x.t("var","asc");
x.t("assignuserbylocationusingproximityandattributes","multiple");
x.t("assignuserbylocationusingproximityandattributes","activity.claimant.person.primaryaddress");
x.t("assignuserbylocationusingproximityandattributes","boolean");
x.t("assignuserbylocationusingproximityandattributes","address");
x.t("assignuserbyproximitywithsearchcriteria","method");
x.t("assignuserbyproximitywithsearchcriteria","public");
x.t("assignuserbyproximitywithsearchcriteria","single");
x.t("assignuserbyproximitywithsearchcriteria","usc");
x.t("frenchspeaker.attributetype","userattributetype.tc_language");
x.t("restrictions","search");
x.t("actions.exit","//needed");
x.t("not-","null");
x.t("usc.usersearchcriteria.contact.address.city","pasadena");
x.t("attributes","method");
x.t("attributes","account");
x.t("attributes","searches");
x.t("attributes","search");
x.t("attributes","select");
x.t("attributes","match");
x.t("integrate","claimcenter");
x.t("server","geocode");
x.t("round-robin","assignment");
x.t("round-robin","assign");
x.t("round-robin","processing");
x.t("round-robin","rotation");
x.t("round-robin","algorithm");
x.t("object","method");
x.t("object","rather");
x.t("object","foreign");
x.t("object","uses");
x.t("object","type");
x.t("object","part");
x.t("object","assigns");
x.t("object","proximity");
x.t("object","attributebasedassignmentcriteria");
x.t("object","isdistancebased");
x.t("activity.currentassignment","assignuserbylocationusingproximityandattributes");
}
