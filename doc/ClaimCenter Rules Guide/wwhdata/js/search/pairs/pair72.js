function FileData_Pairs(x)
{
x.t("complex","conditions");
x.t("example","entities");
x.t("example","validation");
x.t("example","person");
x.t("example","dynamic");
x.t("interfaces","public");
x.t("root","group");
x.t("happen","example");
x.t("rolls","back");
x.t("method","re-adjust");
x.t("method","automatically");
x.t("method","perform");
x.t("method","reference");
x.t("method","return");
x.t("method","implementation");
x.t("method","takes");
x.t("method","following");
x.t("method","returns");
x.t("available","users");
x.t("candidategroups","locks");
x.t("possible","possible");
x.t("possible","save");
x.t("possible","commit");
x.t("provide","implementations");
x.t("parameter","indicates");
x.t("parameter","establishes");
x.t("construct","override");
x.t("construct","implementation");
x.t("token","override");
x.t("version","provide");
x.t("version","equivalent");
x.t("version","load");
x.t("defines","following");
x.t("claim","wizard");
x.t("claim","claimcenter");
x.t("claim","database");
x.t("locked","guidewire");
x.t("locked","objects");
x.t("candidates:set","return");
x.t("candidates:set","locks:set");
x.t("implement","version");
x.t("implement","assignment");
x.t("fnol","intake");
x.t("workload","interface");
x.t("workload","information");
x.t("needs","inspect");
x.t("needs","access");
x.t("counters","similar");
x.t("saved","opportunity");
x.t("re-adjust","load");
x.t("gw.api.assignment.dynamicuserassignmentstrategy","uses");
x.t("commits","assignment");
x.t("commits","modifications");
x.t("preserve","results");
x.t("create","working");
x.t("includesubgroups:boolean","var");
x.t("various","methods");
x.t("wizard","claimcenter");
x.t("persistent","entities");
x.t("ensures","multiple");
x.t("ensures","assignment");
x.t("ensures","claimcenter");
x.t("performs","assignment");
x.t("performs","simple");
x.t("performs","actual");
x.t("rollback","however");
x.t("user","gone");
x.t("user","users.iterator");
x.t("user","group");
x.t("user","assignable");
x.t("user","name");
x.t("user","selection");
x.t("user","candidates");
x.t("user","information");
x.t("user","data");
x.t("user","var");
x.t("current","machine");
x.t("locking","mandate");
x.t("situations","assignment");
x.t("preserves","assignment");
x.t("groupuser",".map");
x.t("groupuser","findusertoassign");
x.t("groupuser","entity");
x.t("groupuser","groupuser.user");
x.t("groupuser","var");
x.t("shows","increase");
x.t("shows","implementation");
x.t("last","final");
x.t("later","during");
x.t("until","assignment");
x.t("uses","gw.api.assignment.dynamicuserassignmentstrategy");
x.t("uses","java.util.set");
x.t("uses","java.util.hashset");
x.t("assignable:assignable","candidates:set");
x.t("assignable:assignable","assignedentity:object");
x.t("assignable:assignable","group:group");
x.t("text_val.select","link");
x.t("interface","defines");
x.t("interface","group");
x.t("interface","methods");
x.t("interface","implementation");
x.t("roll","back");
x.t("descendant","groups");
x.t("necessary","state");
x.t("necessary","concepts");
x.t("state","modifications");
x.t("state","numbers");
x.t("working","implementation");
x.t("dynamicgroupassignmentstrategy","interface");
x.t("open","new");
x.t("change","rollbackassignment");
x.t("basic","idea");
x.t("sample","dynamicuserassignmentstrategy");
x.t("inspect","user");
x.t("public","groupuser");
x.t("public","getlocksforassignable");
x.t("public","getcandidateusers");
x.t("public","boolean");
x.t("time","commits");
x.t("calls","getassignmenttoken");
x.t("calls","rollbackassignment");
x.t("automated","assignment");
x.t("dynamicuserassignmentstrategy","construct");
x.t("dynamicuserassignmentstrategy","interface");
x.t("dynamicuserassignmentstrategy","dynamicgroupassignmentstrategy");
x.t("dynamicuserassignmentstrategy","implementation");
x.t("getlocksforassignable","method");
x.t("getlocksforassignable","assignable:assignable");
x.t("getlocksforassignable","getlocksforassignable");
x.t("getlocksforassignable","assignable");
x.t("getlocksforassignable","findusertoassign");
x.t("sort","locking");
x.t("multiple","machines");
x.t("multiple","activities");
x.t("however","locked");
x.t("java.util.set","uses");
x.t("assignedentity:object","boolean");
x.t("(dynamicuserassignmentstrategy)","methods");
x.t("entities","persistent");
x.t("entities","lock");
x.t("entities","need");
x.t("entities","machine");
x.t("entities","returned");
x.t("entities","rows");
x.t("entities","bundle");
x.t("entities","updated");
x.t("lock","locked");
x.t("lock","ensures");
x.t("lock","open");
x.t("lock","entities");
x.t("lock","row");
x.t("lock","database");
x.t("back","state");
x.t("back","changes");
x.t("back","database");
x.t("guidewire","includes");
x.t("guidewire","provides");
x.t("guidewire","means");
x.t("require","sort");
x.t("count","example");
x.t("automatically","construct");
x.t("needed","create");
x.t("gone","longest");
x.t("link","directly");
x.t("advanced","topics");
x.t("single","argument");
x.t("new","claim");
x.t("new","database");
x.t("new","hashset");
x.t("updates","workload");
x.t("access","rows");
x.t("mandate","multiple");
x.t("items","load");
x.t("objects","already");
x.t("gw.api.assignment.examples","uses");
x.t("users.iterator",".next");
x.t("assignedentity","object");
x.t("includes","following");
x.t("messsage","claimcenter");
x.t("need","lock");
x.t("need","assign");
x.t("indicates","whether");
x.t("again","sample");
x.t("longest","without");
x.t(".map","groupuser");
x.t("assignment","complex");
x.t("assignment","happen");
x.t("assignment","method");
x.t("assignment","implement");
x.t("assignment","saved");
x.t("assignment","change");
x.t("assignment","require");
x.t("assignment","updates");
x.t("assignment","complete");
x.t("assignment","operation");
x.t("assignment","provides");
x.t("assignment","claimcenter");
x.t("assignment","flow");
x.t("assignment","logic");
x.t("assignment","elsewhere");
x.t("assignment","function");
x.t("assignment","code");
x.t("assignment","event");
x.t("assignment","process");
x.t("assignment","dynamic");
x.t("assignment","two");
x.t("assignment","work");
x.t("assignment","class");
x.t("parallel","difference");
x.t("group","parameter");
x.t("group","version");
x.t("group","getlocksforassignable");
x.t("group","need");
x.t("group","find");
x.t("group","modifications");
x.t("group","includesubgroups");
x.t("assignable","candidategroups");
x.t("assignable","ensures");
x.t("assignable","assignedentity");
x.t("assignable","group");
x.t("assignable","candidateusers");
x.t("assignable","candidates");
x.t("assignable","override");
x.t("assignable","item");
x.t("assign","multiple");
x.t("assign","commit");
x.t("unlocked","dynamic");
x.t("complete","steps");
x.t("during","fnol");
x.t("during","future");
x.t("machine","needs");
x.t("machine","obtains");
x.t("candidate","users");
x.t("guide","advanced");
x.t("getassignmenttoken","method");
x.t("getassignmenttoken","getcandidateusers");
x.t("getassignmenttoken","(assignable)");
x.t("getassignmenttoken","rollbackassignment");
x.t("getassignmenttoken","(assignable:assignable)");
x.t("results","lock");
x.t("results","assignment");
x.t("saves","claim");
x.t("increase","user\u2019s");
x.t("api","guidewire");
x.t("api","methods");
x.t("simple","user");
x.t("simple","implementation");
x.t("simple","application");
x.t("fails","roll");
x.t("rolling","back");
x.t("false","claimcenter");
x.t("false","otherwise");
x.t("looking","user");
x.t("directly","page");
x.t("locks","lock");
x.t("locks","boolean");
x.t("true","succeeds");
x.t("text_val.focus","text_val.select");
x.t("hook","implement");
x.t("creating","new");
x.t("operation","basic");
x.t("operation","implementing");
x.t("operation","adding");
x.t("name","reassign");
x.t("wait","until");
x.t("group.users","groupuser");
x.t("exactly","parallel");
x.t("dynamicuserassignmentstrategy.findusertoassign","passing");
x.t("previously","returns");
x.t("perform","automated");
x.t("perform","actual");
x.t("perform","simultaneous");
x.t("argument","argument");
x.t("argument","class");
x.t("getcandidateusers","method");
x.t("getcandidateusers","assignable:assignable");
x.t("getcandidateusers","getlocksforassignable");
x.t("getcandidateusers","assignable");
x.t("getcandidateusers","implementation");
x.t("getcandidateusers","returns");
x.t("progressing","candidates");
x.t("base","configuration");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","generic");
x.t("provides","final");
x.t("methods","interfaces");
x.t("methods","available");
x.t("methods","interface");
x.t("methods","single");
x.t("methods","assignment");
x.t("methods","group");
x.t("methods","exactly");
x.t("methods","getcandidateusers");
x.t("methods","allow");
x.t("methods","deal");
x.t("methods","takes");
x.t("methods","major");
x.t("methods","following");
x.t("methods","class");
x.t("boolean","assigngroupdynamically");
x.t("boolean","assignuserdynamically");
x.t("boolean","rollbackassignment");
x.t("boolean","return");
x.t("boolean","includesubgroups");
x.t("updating","counters");
x.t("rule","caused");
x.t("generic","hook");
x.t("implementations","following");
x.t("find","users");
x.t("makes","necessary");
x.t("opportunity","implementation");
x.t("final","step");
x.t("final","two");
x.t("selection","simply");
x.t("selection","algorithm");
x.t("modification","selection");
x.t("claimcenter","rolls");
x.t("claimcenter","commits");
x.t("claimcenter","performs");
x.t("claimcenter","preserves");
x.t("claimcenter","calls");
x.t("claimcenter","assignment");
x.t("claimcenter","cannot");
x.t("claimcenter","rules");
x.t("candidateusers","public");
x.t("sets","entities");
x.t("sets","generated");
x.t("allow","failure");
x.t("flow","dynamicuserassignmentstrategy");
x.t("flow","bundle");
x.t("flow","problem");
x.t("flow","call");
x.t("three","methods");
x.t("assigngroupdynamically","(dynamicgroupassignmentstrategy)");
x.t("selected","user");
x.t("error","occurred");
x.t("logic","again");
x.t("logic","perform");
x.t("logic","following");
x.t("equivalent","public");
x.t("blocks","assignment");
x.t("members","parent");
x.t("validation","rule");
x.t("first","three");
x.t("elsewhere","group");
x.t("means","current");
x.t("leastrecentlymodifiedassignmentstrategy","implements");
x.t("leastrecentlymodifiedassignmentstrategy","class");
x.t("guidewire_selectall","var");
x.t("function","getlocksforassignable");
x.t("function","getassignmenttoken");
x.t("function","getcandidateusers");
x.t("function","guidewire_selectall");
x.t("function","rollbackassignment");
x.t("function","findusertoassign");
x.t("implements","dynamicuserassignmentstrategy");
x.t("implements","following");
x.t("parent","group");
x.t("deal","situations");
x.t("balancing","assignment");
x.t("group-assignment","methods");
x.t("(dynamicgroupassignmentstrategy)","public");
x.t("cannot","save");
x.t("whether","include");
x.t("person","instead");
x.t("idea","event");
x.t("result.addall","users");
x.t("unique","token");
x.t("row","transaction");
x.t("step","assignment");
x.t("step","previously");
x.t("step","step");
x.t("step","commit");
x.t("intake","creating");
x.t("instead","progressing");
x.t("changes","made");
x.t("changes","already");
x.t("implementing","interface");
x.t("returned","getcandidateusers");
x.t("returned","previous");
x.t("(assignable)","first");
x.t("simply","looking");
x.t("reference","dynamic");
x.t("assignuserdynamically","(dynamicuserassignmentstrategy)");
x.t("rollbackassignment","method");
x.t("rollbackassignment","assignable:assignable");
x.t("rollbackassignment","guidewire");
x.t("rollbackassignment","assignable");
x.t("rollbackassignment","getassignmenttoken");
x.t("rows","performs");
x.t("rows","wait");
x.t("rows","database");
x.t("rows","corresponding");
x.t("steps","often");
x.t("code","shows");
x.t("code","work");
x.t("oldestmodifieduser.updatetime","oldestmodifieduser");
x.t("groups","members");
x.t("groups","user-");
x.t("candidates","user");
x.t("candidates","findusertoassign");
x.t("candidates","//must");
x.t("candidates","call");
x.t("candidates","returns");
x.t("often","during");
x.t("reassign","user");
x.t("return","false");
x.t("return","true");
x.t("return","unique");
x.t("return","oldestmodifieduser.groupusers");
x.t("return","candidates");
x.t("return","result");
x.t("return","users");
x.t("return","object");
x.t("return","leastrecentlymodifiedassignmentstrategy_");
x.t("machines","perform");
x.t("machines","package");
x.t("assignments","ensures");
x.t("assignments","assign");
x.t("succeed","claimcenter");
x.t("override","function");
x.t("oldestmodifieduser.groupusers","[0]");
x.t("dynamicuserassignmentstrategy.getcandidateusers","returns");
x.t("database","rollback");
x.t("database","shows");
x.t("database","lock");
x.t("database","step");
x.t("database","changes");
x.t("database","rows");
x.t("database","transaction");
x.t("previous","two");
x.t("caused","database");
x.t("actual","assignment");
x.t("bundle","assignable");
x.t("bundle","commit");
x.t("event","possible");
x.t("event","assignment");
x.t("event","invoke");
x.t("interference","machines");
x.t("occurred","messsage");
x.t("rules","guide");
x.t("made","user");
x.t("made","claimcenter");
x.t("consider","assignment");
x.t("findusertoassign","method");
x.t("findusertoassign","assignable:assignable");
x.t("findusertoassign","assignable");
x.t("findusertoassign","rollbackassignment");
x.t("findusertoassign","implementation");
x.t("failure","commit");
x.t("include","users");
x.t("configuration","gw.api.leastrecentlymodifiedassignmentstrategy");
x.t("group:group","includesubgroups:boolean");
x.t("similar","operations");
x.t(".next","nextuser");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("inter","faces");
x.t("implementation","method");
x.t("implementation","interface");
x.t("implementation","simple");
x.t("implementation","api");
x.t("implementation","getcandidateusers");
x.t("implementation","leastrecentlymodifiedassignmentstrategy");
x.t("implementation","findusertoassign");
x.t("implementation","class");
x.t("already","made");
x.t("already","updated");
x.t("locks:set","groupuser");
x.t("generated","step");
x.t("process","finishes");
x.t("user-","group-assignment");
x.t("takes","users");
x.t("hashset","result.addall");
x.t("[0]","override");
x.t("dynamic","assignment");
x.t("dynamic","methods");
x.t("page","error");
x.t("major","methods");
x.t("belonging","descendant");
x.t("information","possible");
x.t("information","saves");
x.t("data","assignment");
x.t("save","claim");
x.t("save","user");
x.t("save","operation");
x.t("future","save");
x.t("result","new");
x.t("result","override");
x.t("//must","return");
x.t("application","necessary");
x.t("themselves","entities");
x.t("java.util.hashset","@export");
x.t("simultaneous","assignments");
x.t("activities","example");
x.t("modifications","time");
x.t("modifications","items");
x.t("modifications","updating");
x.t("problem","bundle");
x.t("topics","assignment");
x.t("two","api");
x.t("two","methods");
x.t("two","sets");
x.t("two","dynamic");
x.t("users","user");
x.t("users","entities");
x.t("users","group.users");
x.t("users","returned");
x.t("users","groups");
x.t("users","return");
x.t("users","consider");
x.t("users","belonging");
x.t("users","themselves");
x.t("users","consideration");
x.t("users","nextuser.updatetime");
x.t("transaction","results");
x.t("transaction","call");
x.t("transaction","entity");
x.t("consideration","boolean");
x.t("otherwise","event");
x.t("@export","class");
x.t("nextuser","return");
x.t("nextuser","users");
x.t("nextuser.updatetime","oldestmodifieduser.updatetime");
x.t("work","using");
x.t("work","without");
x.t("algorithm","needs");
x.t("call","dynamicuserassignmentstrategy.findusertoassign");
x.t("call","dynamicuserassignmentstrategy.getcandidateusers");
x.t("call","dynamicuserassignmentstrategy.getlocksforassignable");
x.t("numbers","getassignmenttoken");
x.t("numbers","false");
x.t("gw.api.leastrecentlymodifiedassignmentstrategy","following");
x.t("package","gw.api.assignment.examples");
x.t("following","assignment");
x.t("following","base");
x.t("following","methods");
x.t("following","makes");
x.t("following","claimcenter");
x.t("following","code");
x.t("following","inter");
x.t("entity","locks");
x.t("entity","representing");
x.t("corresponding","entities");
x.t("finishes","round-robin");
x.t("(assignable:assignable)","object");
x.t("class","performs");
x.t("class","simple");
x.t("class","leastrecentlymodifiedassignmentstrategy");
x.t("class","implements");
x.t("class","returns");
x.t("faces","dynamicuserassignmentstrategy");
x.t("includesubgroups","parameter");
x.t("includesubgroups","public");
x.t("using","two");
x.t("committed","database");
x.t("returns","groupuser");
x.t("returns","entities");
x.t("returns","assignable");
x.t("returns","candidate");
x.t("returns","false");
x.t("adding","last");
x.t("succeeds","rolling");
x.t("oldestmodifieduser","user");
x.t("oldestmodifieduser","nextuser");
x.t("load","count");
x.t("load","balancing");
x.t("load","numbers");
x.t("names","various");
x.t("obtains","database");
x.t("operations","returns");
x.t("invoke","assignment");
x.t("without","modification");
x.t("without","interference");
x.t("var","text_val=eval");
x.t("var","result");
x.t("var","users");
x.t("var","oldestmodifieduser");
x.t("passing","candidates");
x.t("passing","two");
x.t("commit","assignment");
x.t("commit","fails");
x.t("commit","operation");
x.t("commit","blocks");
x.t("commit","succeed");
x.t("commit","transaction");
x.t("groupuser.user","var");
x.t("conditions","example");
x.t("dynamicuserassignmentstrategy.getlocksforassignable","passing");
x.t("representing","user");
x.t("representing","selected");
x.t("difference","names");
x.t("object","preserve");
x.t("object","getassignmenttoken");
x.t("object","return");
x.t("updated","unlocked");
x.t("updated","committed");
x.t("user\u2019s","workload");
x.t("item","later");
x.t("establishes","root");
x.t("round-robin","dynamic");
x.t("concepts","needed");
x.t("leastrecentlymodifiedassignmentstrategy_","assignable");
}
