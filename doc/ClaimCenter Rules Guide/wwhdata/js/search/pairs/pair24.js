function FileData_Pairs(x)
{
x.t("statements","statements");
x.t("statements","try");
x.t("statements","guaranteed");
x.t("statements","no");
x.t("statements","rule");
x.t("statements","error");
x.t("statements","//some");
x.t("statements","finally");
x.t("statements","unconditionally");
x.t("statements","executed");
x.t("statements","rethrows");
x.t("statements","value");
x.t("statements","elements");
x.t("statements","used");
x.t("statements","catch");
x.t("statements","associated");
x.t("statements","caught");
x.t("example","first");
x.t("example","following");
x.t("example","using");
x.t("passed","error");
x.t("possible","errors");
x.t("within","higher-level");
x.t("business","rules");
x.t("try...catch...finally","statement");
x.t("try...catch...finally","block");
x.t("try...catch...finally","blocks");
x.t("always","executes");
x.t("try","statements");
x.t("try","try");
x.t("try","statement");
x.t("try","block");
x.t("try","blocks");
x.t("try","throw");
x.t("try","expression");
x.t("try","print");
x.t("program","control");
x.t("guaranteed","run");
x.t("errors","try...catch...finally");
x.t("errors","handle");
x.t("errors","function");
x.t("errors","handling");
x.t("errors","occurred");
x.t("errors","occur");
x.t("errors","exceptions");
x.t("text_val.select","link");
x.t("statement","block");
x.t("statement","passes");
x.t("statement","blocks");
x.t("statement","occurs");
x.t("statement","throw");
x.t("statement","rethrow");
x.t("statement","optional");
x.t("statement","catch");
x.t("best","practices");
x.t("lower-level","catch");
x.t("however","cannot");
x.t("inside","inner");
x.t("inside","finally");
x.t("inside","catch");
x.t("original","error");
x.t("link","directly");
x.t("thrown","error");
x.t("engine","passes");
x.t("engine","generates");
x.t("block","statements");
x.t("block","always");
x.t("block","try");
x.t("block","original");
x.t("block","rule");
x.t("block","inner");
x.t("block","second");
x.t("block","preceding");
x.t("block","finally");
x.t("block","outer");
x.t("block","rethrown");
x.t("block","code");
x.t("block","adds");
x.t("block","exception");
x.t("block","optional");
x.t("block","//end");
x.t("block","catch");
x.t("block","//output");
x.t("block","without");
x.t("block","caught");
x.t("passes","program");
x.t("passes","message");
x.t("messsage","claimcenter");
x.t("higher-level","try");
x.t("higher-level","error");
x.t("during","runtime");
x.t("guide","gosu");
x.t("guide","information");
x.t("practices","handling");
x.t("meanings","try");
x.t("throws","outer");
x.t("directly","page");
x.t("writing","rules");
x.t("handle","possible");
x.t("handle","errors");
x.t("handle","specific");
x.t("handle","catch");
x.t("text_val.focus","text_val.select");
x.t("name","initial");
x.t("name","catch");
x.t("no","error");
x.t("run-time","error");
x.t("gosu","business");
x.t("gosu","handles");
x.t("gosu","reference");
x.t("construction","following");
x.t("logging","error");
x.t("handles","errors");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","handle");
x.t("rule","engine");
x.t("inner","try");
x.t("inner","block");
x.t("inner","finally");
x.t("inner","try-catch-finally");
x.t("inner","catch");
x.t("completed","catch");
x.t("ex_printinfo","try");
x.t("claimcenter","processes");
x.t("claimcenter","rules");
x.t("string","outer");
x.t("string","rethrown");
x.t("(exception)","catch");
x.t("second","throw");
x.t("preceding","example");
x.t("preceding","try");
x.t("error","higher-level");
x.t("error","logging");
x.t("error","sometimes");
x.t("error","occurs");
x.t("error","processing");
x.t("error","handling");
x.t("error","return");
x.t("error","message");
x.t("error","325");
x.t("error","occurred");
x.t("error","exception");
x.t("error","condition");
x.t("error","catch");
x.t("error","occur");
x.t("blocks","handle");
x.t("blocks","provides");
x.t("blocks","finally");
x.t("blocks","nested");
x.t("sometimes","cannot");
x.t("//some","class");
x.t("syntax","try");
x.t("finally","statements");
x.t("finally","statement");
x.t("finally","block");
x.t("finally","finally");
x.t("finally","print");
x.t("occurs","try");
x.t("occurs","inside");
x.t("occurs","catch");
x.t("outer","try");
x.t("outer","finally");
x.t("outer","try-catch-finally");
x.t("outer","catch");
x.t("unconditionally","executed");
x.t("throw","statement");
x.t("throw","inside");
x.t("throw","error");
x.t("throw","rethrown");
x.t("throw","exception");
x.t("first","throw");
x.t("guidewire_selectall","var");
x.t("processing","completed");
x.t("processing","occurred");
x.t("control","catch");
x.t("function","ex_printinfo");
x.t("function","guidewire_selectall");
x.t("cannot","handle");
x.t("cannot","catch");
x.t("processes","run-time");
x.t("handling","try...catch...finally");
x.t("handling","errors");
x.t("handling","gosu");
x.t("rethrown","inner");
x.t("initial","try");
x.t("initial","value");
x.t("code","inside");
x.t("code","during");
x.t("executed","errors");
x.t("executed","error");
x.t("executed","code");
x.t("reference","guide");
x.t("level","catch");
x.t("return","statement");
x.t("adds","passed");
x.t("adds","string");
x.t("given","block");
x.t("message","throws");
x.t("message","string");
x.t("message","error");
x.t("variable","name");
x.t("rethrows","error");
x.t("325","inner");
x.t("(e)","print");
x.t("occurred","try");
x.t("occurred","messsage");
x.t("occurred","preceding");
x.t("occurred","finally");
x.t("occurred","case");
x.t("rules","best");
x.t("rules","guide");
x.t("rules","writing");
x.t("rethrow","error");
x.t("value","thrown");
x.t("value","error");
x.t("value","exception");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","error");
x.t("exception","lower-level");
x.t("exception","name");
x.t("exception","handling");
x.t("exception","variable");
x.t("exception","value");
x.t("exception","unhandled");
x.t("condition","case");
x.t("condition","note");
x.t("expression","optional");
x.t("page","error");
x.t("optional","try...catch...finally");
x.t("optional","however");
x.t("optional","finally");
x.t("information","gosu");
x.t("nested","within");
x.t("nested","try...catch...finally");
x.t("unhandled","error");
x.t("try-catch-finally","block");
x.t("runtime","following");
x.t("application","error");
x.t("case","claimcenter");
x.t("case","throw");
x.t("print","inner");
x.t("print","outer");
x.t("executes","even");
x.t("note","exception");
x.t("following","example");
x.t("following","meanings");
x.t("following","syntax");
x.t("elements","construction");
x.t("used","handle");
x.t("run","exception");
x.t("//end","inner");
x.t("//end","outer");
x.t("using","nested");
x.t("class","function");
x.t("catch","statements");
x.t("catch","try");
x.t("catch","statement");
x.t("catch","block");
x.t("catch","(exception)");
x.t("catch","(e)");
x.t("//output","outer");
x.t("occur","try");
x.t("occur","given");
x.t("without","initial");
x.t("associated","try");
x.t("caught","prints");
x.t("caught","error");
x.t("caught","finally");
x.t("caught","throw");
x.t("caught","higher");
x.t("var","text_val=eval");
x.t("generates","application");
x.t("even","catch");
x.t("exceptions","example");
x.t("higher","level");
}
