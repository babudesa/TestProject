function FileData_Pairs(x)
{
x.t("particularly","valuable");
x.t("statements","switch");
x.t("statements","similar");
x.t("looks","following");
x.t("example","shows");
x.t("example","uses");
x.t("example","following");
x.t(".length","//");
x.t("upgrade","summary");
x.t("downcasting","method");
x.t("downcasting","improve");
x.t("downcasting","type");
x.t("downcasting","property");
x.t("downcasting","makes");
x.t("downcasting","typeis");
x.t("downcasting","write");
x.t("downcasting","function");
x.t("downcasting","works");
x.t("downcasting","happens");
x.t("downcasting","following");
x.t("downcasting","object");
x.t("method","call");
x.t("within","statement");
x.t("within","block");
x.t("within","gosu");
x.t("cast","var");
x.t("variables","declared");
x.t("improve","readability");
x.t("summary","review");
x.t("easy-to-read","concise");
x.t("shows","variable");
x.t("declared","object");
x.t("uses","java.util.date");
x.t("conditional","expression");
x.t("text_val.select","link");
x.t("statement","block");
x.t("statement","need");
x.t("type","particularly");
x.t("type","looks");
x.t("type","expressions");
x.t("type","subtype");
x.t("type","inference");
x.t("java.util.date","var");
x.t("what\u2019s","new");
x.t("neat","switch");
x.t("automatically","downcasts");
x.t("original","type");
x.t("assumes","subtype_name");
x.t("property","access");
x.t("property","string");
x.t("link","directly");
x.t("new","changed");
x.t("new","gosu");
x.t("access","work");
x.t("block","downcasting");
x.t("block","code");
x.t("messsage","claimcenter");
x.t("need","casting");
x.t("need","additional");
x.t("around","variable");
x.t("ternary","conditional");
x.t("guide","what\u2019s");
x.t("guide","priority");
x.t("remove","unnecessary");
x.t("directly","page");
x.t("true","first");
x.t("text_val.focus","text_val.select");
x.t("x.charat","//");
x.t("changed","guide");
x.t("changed","gosu");
x.t("changed","6.0");
x.t("gosu","automatically");
x.t("gosu","6.0");
x.t("gosu","structures");
x.t("gosu","code");
x.t("gosu","reference");
x.t("gosu","implicitly");
x.t("gosu","confirms");
x.t("type_name","example");
x.t("type_name","variable_name");
x.t("corresponds","true");
x.t("part","expression");
x.t("part","information");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("x.length","downcasting");
x.t("x.length","works");
x.t("unneces","sary");
x.t("makes","gosu");
x.t("typeis","string");
x.t("typeis","typeof");
x.t("typeis","expression");
x.t("typeis","inference");
x.t("typeis","subtype_name");
x.t("claimcenter","new");
x.t("string",".length");
x.t("string","within");
x.t("string","x.length");
x.t("string","strlen");
x.t("string","means");
x.t("string","print");
x.t("string","object");
x.t("write","easy-to-read");
x.t("write","gosu");
x.t("6.0","type");
x.t("6.0","new");
x.t("structures","within");
x.t("effective","immediately");
x.t("error","occurred");
x.t("downcasts","typeis");
x.t("equivalent","unnecessary");
x.t("review","code");
x.t("automatic","downcasting");
x.t("next","upgrade");
x.t("strlen","x.length");
x.t("strlen","typeis");
x.t("strlen","string");
x.t("means","need");
x.t("concise","gosu");
x.t("first","part");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("adjacent","expressions");
x.t("length","property");
x.t("casts","works");
x.t("expressions","important");
x.t("expressions","subtype");
x.t("words","following");
x.t("casting","type");
x.t("casting","around");
x.t("casting","break");
x.t("casting","//");
x.t("works","ternary");
x.t("works","typeis");
x.t("works","switch");
x.t("important","note");
x.t("switch","statements");
x.t("switch","variables");
x.t("switch","typeof");
x.t("code","remove");
x.t("code","gosu");
x.t("code","unneces");
x.t("code","write");
x.t("code","equivalent");
x.t("code","bounded");
x.t("code","easier");
x.t("code","valid");
x.t("code","structure");
x.t("reference","guide");
x.t("bounded","statement");
x.t("least","within");
x.t("considers","variable\u2019s");
x.t("variable\u2019s","type");
x.t("variable","declared");
x.t("variable","words");
x.t("occurred","messsage");
x.t("nice","var");
x.t("typeof","gosu");
x.t("typeof","case");
x.t("similar","gosu");
x.t("additional","casting");
x.t("easier","read");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","subtype");
x.t("expression","type");
x.t("expression","corresponds");
x.t("expression","following");
x.t("subtype","original");
x.t("subtype","gosu");
x.t("subtype","type_name");
x.t("subtype","least");
x.t("valid","var");
x.t("read","maintain");
x.t("page","error");
x.t("x.time","//");
x.t("information","automatic");
x.t("inference","downcasting");
x.t("inference","effective");
x.t("sary","casts");
x.t("happens","part");
x.t("implicitly","considers");
x.t("subtype_name","subtype");
x.t("subtype_name","//");
x.t("subtype_name","without");
x.t("downcasted","string");
x.t("case","string");
x.t("case","date");
x.t("confirms","object");
x.t("structure","type");
x.t("print","x.charat");
x.t("print","x.time");
x.t("readability","gosu");
x.t("variable_name","type_name");
x.t("variable_name","typeis");
x.t("variable_name","subtype_name");
x.t("note","length");
x.t("date","print");
x.t("priority","next");
x.t("work","without");
x.t("valuable","statements");
x.t("immediately","propagates");
x.t("call","work");
x.t("following","example");
x.t("following","typeis");
x.t("following","code");
x.t("following","var");
x.t("break","downcasting");
x.t("break","case");
x.t("//","assumes");
x.t("//","length");
x.t("//","variable_name");
x.t("//","without");
x.t("without","downcasting");
x.t("without","casting");
x.t("unnecessary","downcasting");
x.t("unnecessary","cast");
x.t("var","text_val=eval");
x.t("var","strlen");
x.t("var","variable_name");
x.t("var","object");
x.t("propagates","adjacent");
x.t("object","example");
x.t("object","downcasting");
x.t("object","neat");
x.t("object","string");
x.t("object","automatic");
x.t("object","nice");
x.t("object","specific");
x.t("object","downcasted");
}
