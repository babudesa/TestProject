function FileData_Pairs(x)
{
x.t("(===)","function");
x.t("(===)","java");
x.t("(===)","object");
x.t("example","demonstrates");
x.t("integers","reference");
x.t("===","s2");
x.t("===","three");
x.t("===","operators");
x.t("refer","object");
x.t("always","compares");
x.t("variables","reference");
x.t("text_val.select","link");
x.t("evaluates","true");
x.t("times","want");
x.t("calls","object");
x.t("what\u2019s","new");
x.t("however","cases");
x.t("primitive","types");
x.t("automatically","calls");
x.t("link","directly");
x.t("new","changed");
x.t("new","gosu");
x.t("new","object");
x.t("==","===");
x.t("==","s2");
x.t("==","operator");
x.t("want","identity");
x.t("want","know");
x.t("want","reference");
x.t("want","compare");
x.t("want","object");
x.t("objects","literally");
x.t("objects","contain");
x.t("objects","different");
x.t("objects","//");
x.t("literally","reference");
x.t("contents","//");
x.t("usually","want");
x.t("messsage","claimcenter");
x.t("operands","exact");
x.t("signs","always");
x.t("s1","===");
x.t("s1","==");
x.t("s1","s2");
x.t("s1","variable");
x.t("s1","hello");
x.t(".equals","instead");
x.t("s2","s1");
x.t("s2","hello");
x.t("s2","//");
x.t("assign","s1");
x.t("guide","what\u2019s");
x.t("identity","reference");
x.t("identity","print");
x.t("false","--");
x.t("directly","page");
x.t("true","refer");
x.t("true","operands");
x.t("true","--");
x.t("text_val.focus","text_val.select");
x.t("demonstrates","difference");
x.t("changed","guide");
x.t("changed","gosu");
x.t("changed","6.0");
x.t("gosu","6.0");
x.t("gosu","language");
x.t("references","point");
x.t("comparison","words");
x.t("comparison","reference");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("claimcenter","new");
x.t("claimcenter","6.0");
x.t("string","objects");
x.t("6.0","new");
x.t("6.0","object");
x.t("three","equals");
x.t("prints","false");
x.t("prints","true");
x.t("contain","contents");
x.t("in-memory","object");
x.t("error","occurred");
x.t("point","in-memory");
x.t("know","two");
x.t("operators","var");
x.t("guidewire_selectall","var");
x.t("underlying","object");
x.t("function","guidewire_selectall");
x.t("words","evaluates");
x.t("words","times");
x.t("whether","references");
x.t("different","objects");
x.t("language","==");
x.t("instead","using");
x.t("instead","compare");
x.t("types","integers");
x.t("types","however");
x.t("types","usually");
x.t("types","cases");
x.t("works","primitive");
x.t("simply","comparing");
x.t("reference","in-memory");
x.t("reference","types");
x.t("reference","simply");
x.t("reference","value");
x.t("reference","object");
x.t("exact","reference");
x.t("exact","object");
x.t("memory","works");
x.t("java","language");
x.t("java","probably");
x.t("variable","exact");
x.t("occurred","messsage");
x.t("value","words");
x.t("value","print");
x.t("value","equality");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("--","two");
x.t("hello","//");
x.t("hello","var");
x.t("page","error");
x.t("probably","want");
x.t("equals","signs");
x.t("equals","comparison");
x.t("comparing","values");
x.t("values","using");
x.t("print","s1");
x.t("two","variables");
x.t("two","objects");
x.t("two","string");
x.t("cases","want");
x.t("following","example");
x.t("using","==");
x.t("using","underlying");
x.t("compares","whether");
x.t("//","assign");
x.t("//","prints");
x.t("//","compare");
x.t("compare","identity");
x.t("compare","instead");
x.t("compare","value");
x.t("operator","(===)");
x.t("operator","===");
x.t("operator","evaluates");
x.t("operator","automatically");
x.t("operator","gosu");
x.t("var","s1");
x.t("var","s2");
x.t("var","text_val=eval");
x.t("equality","java");
x.t("equality","operator");
x.t("object",".equals");
x.t("object","s2");
x.t("object","claimcenter");
x.t("object","memory");
x.t("object","equals");
x.t("object","following");
x.t("object","equality");
x.t("difference","==");
}
