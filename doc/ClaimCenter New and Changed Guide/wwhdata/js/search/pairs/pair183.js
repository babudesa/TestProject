function FileData_Pairs(x)
{
x.t("example","getoriginalvalue");
x.t("method","declared");
x.t("method","used");
x.t("method","compare");
x.t("operand\u2019s","type");
x.t("right","operands");
x.t("right","side");
x.t("mycoveragestatuscde","mycoveragestatuscde");
x.t("mycoveragestatuscde","however");
x.t("mycoveragestatuscde","typecode");
x.t("mycoveragestatuscde","cov.getoriginalvalue");
x.t("mycoveragestatuscde","priorcovstat");
x.t("mycoveragestatuscde","warning");
x.t("5.0","change");
x.t("5.0","new");
x.t("5.0","changed");
x.t("preferred","guidewire");
x.t("situation","type");
x.t("variables","declare");
x.t("declared","return");
x.t("conventional","declaration");
x.t("text_val.select","link");
x.t("look","compiler");
x.t("potentially","unintentional");
x.t("statement","fails");
x.t("change","follows");
x.t("change","behavior");
x.t("change","equality");
x.t("type","mycoveragestatuscde");
x.t("type","variables");
x.t("type","expect");
x.t("type","determine");
x.t("type","variable");
x.t("type","inference");
x.t("type","priorcovstat");
x.t("type","object");
x.t("getoriginalvalue","method");
x.t("compiler","warnings");
x.t("left","right");
x.t("evaluate","properly");
x.t("time","typecode");
x.t("what\u2019s","new");
x.t("however","preferred");
x.t("count","statement");
x.t("count","count");
x.t("guidewire","strongly");
x.t("guidewire","syntax");
x.t("new","warnings");
x.t("new","changed");
x.t("link","directly");
x.t("==","consequence");
x.t("==","used");
x.t("objects","different");
x.t("objects","reduce");
x.t("asymmetric","comparison");
x.t("asymmetric","warning");
x.t("messsage","claimcenter");
x.t("gscript","5.0");
x.t("gscript","type");
x.t("gscript","behaves");
x.t("operands","respectively");
x.t("operands","message");
x.t("favors","left-hand-side");
x.t("expect","example");
x.t("typecode","requires");
x.t("typecode","suppose");
x.t("typecode","simply");
x.t("typecode","coercion");
x.t("knowing","typelist");
x.t("recommends","fix");
x.t("guide","what\u2019s");
x.t("testing","equality");
x.t("results","gosu");
x.t("fails","evaluate");
x.t("directly","page");
x.t("test","==");
x.t("test","equality");
x.t("detects","generates");
x.t("unintentional","comparison");
x.t("declare","type");
x.t("declare","ensure");
x.t("cov.getoriginalvalue","mycoveragestatuscde");
x.t("requires","knowing");
x.t("warnings","look");
x.t("warnings","potentially");
x.t("warnings","issue");
x.t("warnings","edge");
x.t("text_val.focus","text_val.select");
x.t("consequence","fewer");
x.t("direction","cases");
x.t("{1}","contain");
x.t("{1}","consider");
x.t("changed","5.0");
x.t("changed","gscript");
x.t("changed","guide");
x.t("gosu","favors");
x.t("gosu","detects");
x.t("typed","specific");
x.t("follows","var");
x.t("conversion","right");
x.t("comparison","new");
x.t("comparison","objects");
x.t("comparison","{0}");
x.t("avoid","situation");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("nr","priorcovstat");
x.t("determine","internal");
x.t("claimcenter","new");
x.t("string","typecode");
x.t("string","coercion");
x.t("fix","code");
x.t("contain","types");
x.t("conventionally","respect");
x.t("error","occurred");
x.t("respect","method");
x.t("respect","equality");
x.t("strongly","recommends");
x.t("respectively","avoid");
x.t("suppose","code");
x.t("syntax","keyword");
x.t("guidewire_selectall","var");
x.t("fewer","cases");
x.t("side","expression");
x.t("function","guidewire_selectall");
x.t("words","method");
x.t("different","types");
x.t("define","type");
x.t("reduce","chance");
x.t("internal","method");
x.t("types","left");
x.t("types","cases");
x.t("format","asymmetric");
x.t("casting","operands");
x.t("properly","declare");
x.t("compile","time");
x.t("keyword","explicit");
x.t("simply","object");
x.t("explicit","conversion");
x.t("explicit","prevent");
x.t("code","explicit");
x.t("code","var");
x.t("return","compile-time");
x.t("symmetric","respect");
x.t("message","{0}");
x.t("message","following");
x.t("exact","typecode");
x.t("issue","guidewire");
x.t("ensure","type");
x.t("variable","var");
x.t("occurred","messsage");
x.t("consider","casting");
x.t("null","count");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","exact");
x.t("declaration","change");
x.t("{0}","{1}");
x.t("expression","gscript");
x.t("page","error");
x.t("compile-time","type");
x.t("behaves","conventionally");
x.t("inference","define");
x.t("prevent","warning");
x.t("chance","change");
x.t("cases","method");
x.t("cases","change");
x.t("cases","gscript");
x.t("cases","function");
x.t("cases","implicit");
x.t("cases","using");
x.t("implicit","string");
x.t("implicit","coercion");
x.t("typically","symmetric");
x.t("priorcovstat","mycoveragestatuscde");
x.t("priorcovstat","type");
x.t("priorcovstat","cov.getoriginalvalue");
x.t("priorcovstat","nr");
x.t("priorcovstat","null");
x.t("used","testing");
x.t("used","test");
x.t("either","direction");
x.t("left-hand-side","operand\u2019s");
x.t("following","format");
x.t("coercion","gosu");
x.t("coercion","string");
x.t("coercion","either");
x.t("coercion","equality");
x.t("using","implicit");
x.t("warning","compiler");
x.t("warning","message");
x.t("typelist","compile");
x.t("compare","objects");
x.t("operations","implicit");
x.t("operations","typically");
x.t("behavior","results");
x.t("edge","cases");
x.t("var","text_val=eval");
x.t("var","priorcovstat");
x.t("equality","asymmetric");
x.t("equality","comparison");
x.t("equality","words");
x.t("equality","operations");
x.t("generates","compiler");
x.t("object","conventional");
x.t("object","typed");
}
