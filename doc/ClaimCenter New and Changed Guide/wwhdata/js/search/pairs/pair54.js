function FileData_Pairs(x)
{
x.t("example","populate");
x.t("example","following");
x.t(".thenbydescending","\\row-");
x.t("improvements","claimcenter");
x.t("improvements","function");
x.t("improvements","query");
x.t("columns","access");
x.t("columns","need");
x.t("columns","returning");
x.t("columns","row");
x.t("columns","database");
x.t("columns","result");
x.t("method","signature");
x.t("method","no");
x.t("method","provides");
x.t("method","query");
x.t("improved","ability");
x.t("improved","compared");
x.t("just","using");
x.t("anything","specify");
x.t("row.e.e","information");
x.t("5.0","call");
x.t("within","function");
x.t("full","entities");
x.t("retrieving","entire");
x.t("alternate","method");
x.t("descending","order");
x.t("result.orderby","\\row-");
x.t("few","columns");
x.t("arguments","claimcenter");
x.t("arguments","simply");
x.t("ability","order");
x.t("situations","need");
x.t("query.getprocessor","method");
x.t("program","return");
x.t("field","need");
x.t("field","paths");
x.t("text_val.select","link");
x.t("introduced","claimcenter");
x.t("row.a2",".thenbydescending");
x.t("type","anything");
x.t("type","need");
x.t("type","fine");
x.t("type","returns");
x.t("calculations","return");
x.t("populate","custom");
x.t("public","id");
x.t("orders","column");
x.t("what\u2019s","new");
x.t("however","guidewire");
x.t("formats","additionally");
x.t("apis","improved");
x.t("apis","information");
x.t("guidewire","strongly");
x.t("entities","retrieving");
x.t("link","directly");
x.t("new","changed");
x.t("new","code");
x.t("new","database");
x.t("new","query");
x.t("details","just");
x.t("signature","takes");
x.t("want","return");
x.t("access","block");
x.t("single","field");
x.t("block","block");
x.t("block","in-line");
x.t("block","reduces");
x.t("block","takes");
x.t("messsage","claimcenter");
x.t("need","few");
x.t("need","public");
x.t("need","match");
x.t("need","simply");
x.t("need","database");
x.t("recommends","new");
x.t("improves","overall");
x.t("id","string");
x.t("api","improvements");
x.t("api","changes");
x.t("guide","situations");
x.t("guide","what\u2019s");
x.t("guide","pass");
x.t("iterator","across");
x.t("results","custom");
x.t("results","database");
x.t("results","query");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("no","arguments");
x.t("overall","server");
x.t("second-level","additional");
x.t("forward","reverse");
x.t("changed","guide");
x.t("changed","gosu");
x.t("changed","6.0");
x.t("gosu","6.0");
x.t("gosu","blocks");
x.t("gosu","loads");
x.t("gosu","reference");
x.t("gosu","class");
x.t("performance","assemble");
x.t("returning","results");
x.t("custom","formats");
x.t("custom","gosu");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","following");
x.t("find","expressions");
x.t("find","expression");
x.t("place","full");
x.t("fine","choose");
x.t("claimcenter","improved");
x.t("claimcenter","5.0");
x.t("claimcenter","new");
x.t("claimcenter","6.0");
x.t("claimcenter","5.0.5");
x.t("claimcenter","5.0.x");
x.t("write","new");
x.t("entire","entity");
x.t("fields","need");
x.t("fields","including");
x.t("string","information");
x.t("6.0","alternate");
x.t("6.0","new");
x.t("6.0","changed");
x.t("6.0","query");
x.t("in-line","function");
x.t("structures","calculations");
x.t("error","occurred");
x.t("strongly","recommends");
x.t("blocks","gosu");
x.t("whatever","want");
x.t("whatever","convenient");
x.t("syntax","deprecated");
x.t("loads","columns");
x.t("select","method");
x.t("select","second-level");
x.t("getprocessor","claimcenter");
x.t("entirety","database");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("function","define");
x.t("function","information");
x.t("expressions","find");
x.t("define","within");
x.t("instead","calling");
x.t("instead","whole");
x.t("row","instead");
x.t("arbitrary","type");
x.t("arbitrary","structures");
x.t("variant","select");
x.t("changes","details");
x.t("match","native");
x.t("types","columns");
x.t("important","benefits");
x.t("important","query");
x.t("5.0.5","replaces");
x.t("simply","iterator");
x.t("simply","return");
x.t("calling","select");
x.t("ordering","results");
x.t("replaces","query.getprocessor");
x.t("replaces","find");
x.t("code","write");
x.t("reference","guide");
x.t("whole","entity");
x.t("reduces","memory");
x.t("return","type");
x.t("return","single");
x.t("return","place");
x.t("return","result");
x.t("benefits","gosu");
x.t("assemble","arbitrary");
x.t("multi-level","field");
x.t("level","sorting");
x.t("e.e","result.orderby");
x.t("5.0.x","important");
x.t("database","fields");
x.t("database","loads");
x.t("database","query");
x.t("database","alternative");
x.t("database","returns");
x.t("memory","usage");
x.t("sorting","example");
x.t("sorting","choose");
x.t("occurred","messsage");
x.t("compared","claimcenter");
x.t("convenient","program");
x.t("usage","improves");
x.t("additional","levels");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("selecting","columns");
x.t("builder","apis");
x.t("builder","new");
x.t("builder","api");
x.t("builder","gosu");
x.t("builder","query");
x.t("native","types");
x.t("expression","syntax");
x.t("takes","block");
x.t("takes","object");
x.t("page","error");
x.t("query","type");
x.t("query","replaces");
x.t("query","builder");
x.t("query","result");
x.t("query","system");
x.t("information","blocks");
x.t("information","ordering");
x.t("information","selecting");
x.t("information","query");
x.t("result","example");
x.t("result","instead");
x.t("result","entity");
x.t("deprecated","however");
x.t("choose","whatever");
x.t("choose","return");
x.t("choose","order");
x.t("column","e.e");
x.t("column","a2");
x.t("a2","descending");
x.t("call","method");
x.t("order","results");
x.t("order","forward");
x.t("order","column");
x.t("reverse","level");
x.t("system","introduced");
x.t("entity","entirety");
x.t("entity","variant");
x.t("entity","choose");
x.t("following","orders");
x.t("following","important");
x.t("using","getprocessor");
x.t("class","containing");
x.t("containing","fields");
x.t("additionally","claimcenter");
x.t("across","results");
x.t("pass","block");
x.t("returns","columns");
x.t("returns","whatever");
x.t("alternative","select");
x.t("levels","sorting");
x.t("paths","select");
x.t("var","text_val=eval");
x.t("including","multi-level");
x.t("\\row-","row.e.e");
x.t("\\row-","row.a2");
x.t("object","query");
x.t("specify","arbitrary");
x.t("server","performance");
}
