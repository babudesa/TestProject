function FileData_Pairs(x)
{
x.t("example","suppose");
x.t("debugging","until");
x.t("debugging","during");
x.t("upgrade","easier");
x.t("method","arguments");
x.t("parameter","called");
x.t("within","web");
x.t("integration","6.0");
x.t("contact","guidewire");
x.t("rename","classes");
x.t("arguments","return");
x.t("mypackage.integration.policy","try");
x.t("flag","name");
x.t("try","access");
x.t("questions","contact");
x.t("parsers","flag");
x.t("until","time");
x.t("text_val.select","link");
x.t("errors","gosu");
x.t("type","mypackage.integration.policy");
x.t("type","name");
x.t("type","web");
x.t("change","class");
x.t("customer","support");
x.t("customer","service");
x.t("unsafe","true");
x.t("please","contact");
x.t("packages","even");
x.t("evaluate","soap.local.entity.policy");
x.t("time","rename");
x.t("what\u2019s","new");
x.t("releases","claimcenter");
x.t("locally-published","soap");
x.t("guidewire","customer");
x.t("default","unsafe");
x.t("link","directly");
x.t("new","changed");
x.t("new","configuration");
x.t("access","locally-published");
x.t("servers","edge");
x.t("think","cannot");
x.t("publish","claimcenter");
x.t("publish","two");
x.t("ambiguity","wsdl");
x.t("messsage","claimcenter");
x.t("finds","compile");
x.t("flags","name");
x.t("during","upgrade");
x.t("guide","what\u2019s");
x.t("soap","gosu");
x.t("soap","types");
x.t("resolves","issue");
x.t("6.0.1","new");
x.t("become","warnings");
x.t("false","default");
x.t("directly","page");
x.t("true","error");
x.t("true","production");
x.t("true","even");
x.t("name","resolves");
x.t("name","conflicts");
x.t("name","types");
x.t("conflicts","within");
x.t("conflicts","finds");
x.t("conflicts","gosu");
x.t("conflicts","function");
x.t("conflicts","enforcement");
x.t("text_val.focus","text_val.select");
x.t("libraries","invalid");
x.t("warnings","development");
x.t("changed","integration");
x.t("changed","guide");
x.t("changed","6.0");
x.t("gosu","parsers");
x.t("gosu","type");
x.t("gosu","identifies");
x.t("gosu","parser");
x.t("wsdl","generated");
x.t("avoid","namespace");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("representative","debugging");
x.t("namespace","collision");
x.t("namespace","collisions");
x.t("web","services");
x.t("web","service");
x.t("claimcenter","new");
x.t("claimcenter","soap");
x.t("claimcenter","6.0.1");
x.t("claimcenter","invalid");
x.t("fix","namespace");
x.t("6.0","new");
x.t("6.0","changes");
x.t("6.0","enforcement");
x.t("error","messages");
x.t("error","occurred");
x.t("suppose","two");
x.t("allowsoapwebservicereferencenamespacecollisions","true");
x.t("messages","become");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("different","packages");
x.t("different","published");
x.t("cannot","rename");
x.t("changes","integration");
x.t("types","method");
x.t("types","change");
x.t("types","evaluate");
x.t("types","true");
x.t("types","name");
x.t("types","different");
x.t("myapi1","exposes");
x.t("compile","errors");
x.t("myapi2","exposes");
x.t("invalid","publish");
x.t("invalid","previous");
x.t("return","type");
x.t("return","types");
x.t("identifies","conflict");
x.t("collision","setting");
x.t("soap.local.entity.policy","similarly");
x.t("previous","releases");
x.t("issue","questions");
x.t("java","libraries");
x.t("occurred","messsage");
x.t("configuration","parameter");
x.t("easier","claimcenter");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("exposes","gosu");
x.t("exposes","entity");
x.t("generated","java");
x.t("services","example");
x.t("services","publish");
x.t("services","web");
x.t("page","error");
x.t("parser","flags");
x.t("enforcement","web");
x.t("production","servers");
x.t("published","web");
x.t("case","think");
x.t("called","allowsoapwebservicereferencenamespacecollisions");
x.t("two","web");
x.t("two","types");
x.t("classes","avoid");
x.t("classes","fix");
x.t("entity.policy","return");
x.t("service","type");
x.t("service","representative");
x.t("service","myapi1");
x.t("service","myapi2");
x.t("entity","entity.policy");
x.t("similarly","ambiguity");
x.t("conflict","two");
x.t("class","name");
x.t("setting","false");
x.t("development","debugging");
x.t("collisions","please");
x.t("var","text_val=eval");
x.t("edge","case");
x.t("even","different");
x.t("even","types");
}
