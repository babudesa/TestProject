function FileData_Pairs(x)
{
x.t("example","money");
x.t("example","field");
x.t("example","base");
x.t("example","address");
x.t("example","works");
x.t("example","view");
x.t("example","using");
x.t("extensions","provide");
x.t("extensions","select");
x.t("extensions","define");
x.t("extensions","folder");
x.t("money","fields");
x.t("localization","field");
x.t("localization","localizing");
x.t("provide","multiple");
x.t("provide","translated");
x.t("provide","localized");
x.t("possible","create");
x.t("exist","specified");
x.t("exist","claimcenter");
x.t("defines","regular");
x.t("jp","switzerland");
x.t("within","file");
x.t("files","possible");
x.t("files","want");
x.t("implement","create");
x.t("create","multiple");
x.t("create","country-specific");
x.t("create","translated");
x.t("create","localized");
x.t("studio","stores");
x.t("studio","resources");
x.t("description","field");
x.t("{4}","[0-9]");
x.t("uppercase","iso");
x.t("refer","following");
x.t("key","example");
x.t("key","provide");
x.t("regular","expression");
x.t("ability","create");
x.t("name=","phone");
x.t("user","example");
x.t("user","create");
x.t("user","data");
x.t("field","trigger");
x.t("field","validation");
x.t("field","match");
x.t("field","validators");
x.t("field","several");
x.t("field","validator");
x.t("{0,4}","case");
x.t("uses","file");
x.t("uses","name");
x.t("text_val.select","link");
x.t("validatordef","description=");
x.t("interface","locale");
x.t("type","localizedstring");
x.t("type","localized");
x.t("localizedstring","cannot");
x.t("logged-in","user");
x.t("associates","address");
x.t("locale","user");
x.t("locale","logged-in");
x.t("locale","multiple");
x.t("locale","claimcenter");
x.t("multiple","field");
x.t("multiple","sets");
x.t("multiple","translated");
x.t("multiple","countries");
x.t("trigger","locale");
x.t("property","stores");
x.t("property","code");
x.t("listed","address");
x.t("default","country-specific");
x.t("default","definition");
x.t("default","definitions");
x.t("link","directly");
x.t("single","field");
x.t("indication","user");
x.t("validator.phone","display");
x.t("validator.phone","input-mask=");
x.t("want","create");
x.t("new","file");
x.t("consists","two-character");
x.t("english","multiple");
x.t("iso","3166-1-alpha-2");
x.t("messsage","claimcenter");
x.t("file","exist");
x.t("file","description");
x.t("file","default");
x.t("file","determine");
x.t("file","select");
x.t("file","right-click");
x.t("file","data");
x.t("file","fieldvalidators_");
x.t("file","country");
x.t("file","following");
x.t("file","using");
x.t("file","fieldvalidators.xml");
x.t("list","valid");
x.t("description=","validator.phone");
x.t("menu","enter");
x.t("guide","configuring");
x.t("simple","validation");
x.t("configuring","localization");
x.t("configuring","localized");
x.t("country-specific","field");
x.t("country-specific","entity");
x.t("country-specific","folders");
x.t("country-specific","validator");
x.t("directly","page");
x.t("handle","simple");
x.t("specified","country");
x.t("text_val.focus","text_val.select");
x.t("definition","defines");
x.t("definition","validatordef");
x.t("definition","specify");
x.t("maintain","property");
x.t("name","file");
x.t("name","format");
x.t("codes","refer");
x.t("base","configuration");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","ability");
x.t("provides","visual");
x.t("exists","country");
x.t("3166-1-alpha-2","code");
x.t("determine","country");
x.t("standard","english");
x.t("phone","value=");
x.t("[0-9]","{4}");
x.t("[0-9]","{0,4}");
x.t("[0-9]","{3}");
x.t("address","locale");
x.t("address","claimcenter");
x.t("address","format");
x.t("web","site");
x.t("claimcenter","uses");
x.t("claimcenter","interface");
x.t("claimcenter","associates");
x.t("claimcenter","configuration");
x.t("claimcenter","triggers");
x.t("sets","field");
x.t("fields","non-");
x.t("fields","extended");
x.t("fields","data");
x.t("string","data");
x.t(".xml","claimcenter");
x.t("input","mask");
x.t("mask","provides");
x.t("addition","entity");
x.t("two-character","uppercase");
x.t("two-character","abbreviation");
x.t("error","messages");
x.t("error","occurred");
x.t("display","key");
x.t("abbreviation","fr");
x.t("validation","files");
x.t("validation","field");
x.t("validation","type");
x.t("validation","single");
x.t("validation","function");
x.t("validation","works");
x.t("validation","localizing");
x.t("validation","country");
x.t("{3}","[0-9]");
x.t("france","two-character");
x.t("messages","field");
x.t("messages","locale");
x.t("messages","validating");
x.t("non-","string");
x.t("select","new");
x.t("select","fieldvalidatorscountries");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("approach","localization");
x.t("define","validators");
x.t("define","optional");
x.t("different","ways");
x.t("cannot","example");
x.t("ways","approach");
x.t("stores","field");
x.t("stores","specific");
x.t("match","existing");
x.t("match","valid");
x.t("types","addition");
x.t("format","file");
x.t("format","country");
x.t("works","fields");
x.t("works","practice");
x.t("important","file");
x.t("important","claimcenter");
x.t("code","implement");
x.t("code","consists");
x.t("code","exists");
x.t("code","country");
x.t("code","entity");
x.t("folder","studio");
x.t("folder","fieldvalidators.xml");
x.t("validators","example");
x.t("validators","within");
x.t("validators","file");
x.t("validators","handle");
x.t("validators","provides");
x.t("validators","standard");
x.t("validators","specific");
x.t("validators","localizing");
x.t("validators","valid");
x.t("validators","countries");
x.t("validators","country");
x.t("extended","example");
x.t("fieldvalidatorscountries","folder");
x.t("enter","field");
x.t("enter","name");
x.t("translated","error");
x.t("translated","versions");
x.t("japan","jp");
x.t("occurred","messsage");
x.t("existing","country");
x.t("configuration","studio");
x.t("configuration","file");
x.t("configuration","guide");
x.t("configuration","fieldvalidators.xml");
x.t("visual","indication");
x.t("right-click","menu");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","different");
x.t("specific","country");
x.t("country_code",".xml");
x.t("country_code","match");
x.t("triggers","field");
x.t("view","list");
x.t("localizing","field");
x.t("expression","data");
x.t("valid","define");
x.t("valid","country_code");
x.t("valid","country");
x.t("fr","japan");
x.t("page","error");
x.t("along","translated");
x.t("site","http://www.iso.org/iso/english_country_names_and_code_elements");
x.t("data","field");
x.t("data","type");
x.t("data","types");
x.t("data","enter");
x.t("data","model");
x.t("optional","input");
x.t("information","resources");
x.t("validating","country-specific");
x.t("practice","important");
x.t("countries","exist");
x.t("countries","create");
x.t("countries","base");
x.t("case","validator.phone");
x.t("fieldvalidators_","country_code");
x.t("input-mask=","name=");
x.t("localized","field");
x.t("localized","error");
x.t("localized","validators");
x.t("localized","versions");
x.t("ch","example");
x.t("country","field");
x.t("country","listed");
x.t("country","codes");
x.t("country","base");
x.t("country","claimcenter");
x.t("country","france");
x.t("country","important");
x.t("country","code");
x.t("country","along");
x.t("country","typelist");
x.t("country","associated");
x.t("model","extensions");
x.t("following","name");
x.t("following","web");
x.t("following","validator");
x.t("entity","field");
x.t("entity","property");
x.t("entity","maintain");
x.t("entity","fields");
x.t("http://www.iso.org/iso/english_country_names_and_code_elements","enter");
x.t("using","field");
x.t("using","multiple");
x.t("using","single");
x.t("typelist","country");
x.t("folders","data");
x.t("fieldvalidators.xml","file");
x.t("fieldvalidators.xml","using");
x.t("fieldvalidators.xml","contains");
x.t("associated","entity");
x.t("definitions","field");
x.t("var","text_val=eval");
x.t("versions","configuring");
x.t("versions","display");
x.t("versions","fieldvalidators.xml");
x.t("versions","validator");
x.t("validator","files");
x.t("validator","file");
x.t("validator","definition");
x.t("validator","display");
x.t("validator","error");
x.t("validator","information");
x.t("value=","[0-9]");
x.t("resources","data");
x.t("contains","default");
x.t("contains","following");
x.t("switzerland","ch");
x.t("specify","country");
}
