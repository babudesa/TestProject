function FileData_Pairs(x)
{
x.t("root","element");
x.t("example","create");
x.t("example","assignable");
x.t("example","base");
x.t("interfaces","delegates");
x.t("looks","similar");
x.t("composition","gosu");
x.t("columns","delegate");
x.t("columns","using");
x.t("possible","override");
x.t("possible","entity");
x.t("provide","implementation");
x.t("param","parameter");
x.t("parameter","pass");
x.t("rather","define");
x.t("rather","java");
x.t("rather","class");
x.t("defines","number");
x.t("defines","object");
x.t("just","gosu");
x.t("reusable","entity");
x.t("implement","interface");
x.t("implement","extension");
x.t("implement","multiple");
x.t("implement","directly");
x.t("implement","delegate");
x.t("files","contain");
x.t("files","delegate");
x.t("wish","polymorphism");
x.t("create","table");
x.t("create","delegate");
x.t("create","delegates");
x.t("description","default");
x.t("description","column");
x.t("refer","delegate");
x.t("table","create");
x.t("table","claimcenter");
x.t("table","extremely");
x.t("required","required");
x.t("required","default");
x.t("required","none");
x.t("name=","someentity");
x.t("name=","somedelegate");
x.t("name=","validatable");
x.t("editable","retireable");
x.t("avoids","single-table");
x.t("ability","define");
x.t("version=","1.0");
x.t("implemented","interface");
x.t("http://guidewire.com/datamodel","subtyping");
x.t("text_val.select","link");
x.t("interface","rather");
x.t("interface","multiple");
x.t("interface","default");
x.t("interface","guidewire");
x.t("interface","want");
x.t("interface","specified");
x.t("interface","common");
x.t("interface","none");
x.t("interface","implementors");
x.t("interface","subtyping");
x.t("interface","implementsentity");
x.t("interface","delegating");
x.t("interface","class");
x.t("extension","guidewire");
x.t("extension","words");
x.t("extension","implementsentity");
x.t("extension","entity");
x.t("working","delegates");
x.t("type","attribute");
x.t("type","implements");
x.t("basic","syntax");
x.t("change","thereafter");
x.t("change","delegate");
x.t("change","graph");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("hierarchy","number");
x.t("duplicating","shared");
x.t("multiple","interfaces");
x.t("multiple","entities");
x.t("multiple","parent");
x.t("multiple","delegates");
x.t("extend","base");
x.t("extend","existing");
x.t("however","push");
x.t("default","false");
x.t("default","base");
x.t("default","implementation");
x.t("entities","implement");
x.t("entities","refer");
x.t("entities","guidewire");
x.t("entities","search");
x.t("entities","reuse");
x.t("guidewire","defines");
x.t("guidewire","recommends");
x.t("guidewire","base");
x.t("guidewire","provides");
x.t("guidewire","sets");
x.t("guidewire","means");
x.t("guidewire","recommendations");
x.t("guidewire","permit");
x.t("text","xml");
x.t("require","delegate");
x.t("objects","implement");
x.t("objects","delegate");
x.t("objects","function");
x.t("objects","merely");
x.t("objects","share");
x.t("link","directly");
x.t("element","extend");
x.t("element","discussion");
x.t("element","versionable");
x.t("element","specify");
x.t("element","contains");
x.t("certain","delegates");
x.t("belongs","extension");
x.t("belongs","guidewire");
x.t("new","delegate");
x.t("details","delegate");
x.t("want","multiple");
x.t("want","implementations");
x.t("want","store");
x.t("want","following");
x.t("single","table");
x.t("messsage","claimcenter");
x.t("need","add");
x.t("list","base");
x.t("file","folder");
x.t("add","following");
x.t("recommends","create");
x.t("recommends","delegate");
x.t("recommends","consider");
x.t("recommends","delegates");
x.t("assignable","modifiable");
x.t("guide","data");
x.t("guide","attributes");
x.t("inheritance","guidewire");
x.t("inheritance","preserving");
x.t("inheritance","using");
x.t("retireable","instead");
x.t("retireable","implementsentity");
x.t("retireable","entity");
x.t("false","extendable");
x.t("false","typekey");
x.t("false","javaclass");
x.t("large","extremely");
x.t("directly","implementsentity");
x.t("directly","delegates");
x.t("directly","page");
x.t("requires","attribute");
x.t("requires","optional");
x.t("specified","requires");
x.t("true","especially");
x.t("hier","archy");
x.t("text_val.focus","text_val.select");
x.t("definition","extension");
x.t("account","implementsentity");
x.t("account","type=");
x.t("account","entity");
x.t("creating","new");
x.t("name","required");
x.t("name","type");
x.t("common","interface");
x.t("common","guidewire");
x.t("common","implementations");
x.t("common","subtypes");
x.t("common","superclass");
x.t("wide","true");
x.t("preserving","ability");
x.t("possibly","poloymorphic");
x.t("gosu","composition");
x.t("gosu","subtypes");
x.t("gosu","reference");
x.t("gosu","java");
x.t("gosu","classes");
x.t("thereafter","delegates");
x.t("enables","delegate");
x.t("base","entities");
x.t("base","claimcenter");
x.t("base","internal");
x.t("base","configuration");
x.t("base","entity");
x.t("component","data");
x.t("argument","delegate");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","base");
x.t("provides","implementation");
x.t("none","requires");
x.t("none","name");
x.t("none","subelements");
x.t("methods","gosu");
x.t("methods","behaviors");
x.t("methods","core");
x.t("determine","list");
x.t("determine","graph");
x.t("implementations","interface");
x.t("implementations","common");
x.t("implementations","share");
x.t("supertype","entity");
x.t("place","guidewire");
x.t("search","metadata");
x.t("decision","model");
x.t("claimcenter","stores");
x.t("claimcenter","configuration");
x.t("claimcenter","data");
x.t("claimcenter","classes");
x.t("claimcenter","generates");
x.t("sets","delegates");
x.t("attempt","example");
x.t("attempt","change");
x.t("implementors","guidewire");
x.t("implementors","delegate");
x.t("implementors","specify");
x.t("fields","behavior");
x.t("permits","polymorphism");
x.t("permits","entity");
x.t("marked","extendable");
x.t("extendable","create");
x.t("extendable","internal");
x.t("attribute","retireable");
x.t("attribute","name");
x.t("attribute","implementors");
x.t("attribute","delegate");
x.t("attribute","implementsentity");
x.t("attribute","entity");
x.t("attribute","inter-related");
x.t("attribute","associated");
x.t("contain","following");
x.t("metadata","files");
x.t("metadata","file");
x.t("someentity","type=");
x.t("store","subtype");
x.t("error","attempt");
x.t("error","occurred");
x.t("strongly","interlinked");
x.t("delegate","provide");
x.t("delegate","implement");
x.t("delegate","avoids");
x.t("delegate","xmlns=");
x.t("delegate","guidewire");
x.t("delegate","entities");
x.t("delegate","objects");
x.t("delegate","element");
x.t("delegate","want");
x.t("delegate","requires");
x.t("delegate","implementations");
x.t("delegate","marked");
x.t("delegate","strongly");
x.t("delegate","delegate");
x.t("delegate","implements");
x.t("delegate","xml");
x.t("delegate","often");
x.t("delegate","usage");
x.t("delegate","data");
x.t("delegate","entity");
x.t("delegate","using");
x.t("delegate","setting");
x.t("delegate","object");
x.t("delegate","attributes");
x.t("delegate","specify");
x.t("delegate","subelements");
x.t("delegate","contains");
x.t("keyablebean","editable");
x.t("syntax","looks");
x.t("extractable","important");
x.t("1.0","delegate");
x.t("especially","entity");
x.t("behaviors","possibly");
x.t("/entity","possible");
x.t("/entity","delegates");
x.t("means","entities");
x.t("guidewire_selectall","var");
x.t("subtyping","without");
x.t("number","different");
x.t("number","delegates");
x.t("poloymorphic","interface");
x.t("function","guidewire_selectall");
x.t("implements","extension");
x.t("implements","interface");
x.t("implements","retirable");
x.t("implements","code");
x.t("implements","validatable");
x.t("parent","entities");
x.t("parent","entity");
x.t("merely","need");
x.t("share","common");
x.t("share","code");
x.t("somedelegate","example");
x.t("cannot","implement");
x.t("cannot","change");
x.t("carefully","base");
x.t("carefully","making");
x.t("words","attempt");
x.t("specifies","interface");
x.t("define","supertype");
x.t("define","fields");
x.t("subtypes","columns");
x.t("subtypes","however");
x.t("subtypes","supertype");
x.t("subtypes","place");
x.t("different","subtypes");
x.t("stores","database");
x.t("stores","information");
x.t("instead","using");
x.t("index","param");
x.t("index","index");
x.t("push","methods");
x.t("xml","root");
x.t("xml","version=");
x.t("implementing","common");
x.t("implementing","delegate");
x.t("internal","false");
x.t("internal","java");
x.t("internal","foreignkey");
x.t("superclass","require");
x.t("retirable","delegate");
x.t("important","requires");
x.t("important","attempt");
x.t("important","attribute");
x.t("code","rather");
x.t("code","delegate");
x.t("code","thus");
x.t("reference","guide");
x.t("datetimeordering","internal");
x.t("typekey","guidewire");
x.t("typekey","typekey");
x.t("scenarios","implementing");
x.t("archy","using");
x.t("often","delegate");
x.t("thus","delegate");
x.t("folder","files");
x.t("override","class");
x.t("database","columns");
x.t("validatable","determine");
x.t("validatable","delegate");
x.t("validatable","/entity");
x.t("java","possible");
x.t("java","superclass");
x.t("java","class");
x.t("occurred","messsage");
x.t("existing","delegates");
x.t("implementsentity","name=");
x.t("implementsentity","element");
x.t("implementsentity","none");
x.t("implementsentity","claimcenter");
x.t("implementsentity","delegate");
x.t("implementsentity","important");
x.t("implementsentity","implementsentity");
x.t("implementsentity","value");
x.t("implementsentity","implementsinterface");
x.t("implementsentity","specify");
x.t("polymorphism","guidewire");
x.t("polymorphism","enables");
x.t("polymorphism","implementing");
x.t("polymorphism","class");
x.t("extremely","large");
x.t("extremely","wide");
x.t("consider","carefully");
x.t("configuration","example");
x.t("configuration","certain");
x.t("configuration","guide");
x.t("configuration","account");
x.t("configuration","claimcenter");
x.t("configuration","delegate");
x.t("configuration","cannot");
x.t("include","following");
x.t("discussion","working");
x.t("discussion","details");
x.t("javaclass","internal");
x.t("similar","following");
x.t("value","requires");
x.t("value","adapter");
x.t("core","claimcenter");
x.t("usage","permits");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","interface");
x.t("implementation","implementors");
x.t("implementation","inter");
x.t("inter","face");
x.t("delegates","just");
x.t("delegates","implement");
x.t("delegates","gosu");
x.t("delegates","base");
x.t("delegates","determine");
x.t("delegates","delegate");
x.t("delegates","cannot");
x.t("delegates","carefully");
x.t("delegates","include");
x.t("delegates","delegates");
x.t("delegates","note");
x.t("delegates","following");
x.t("declaration","basic");
x.t("type=","retireable");
x.t("type=","somedelegate");
x.t("making","decision");
x.t("subtype","data");
x.t("page","error");
x.t("data","objects");
x.t("data","single");
x.t("data","model");
x.t("data","object");
x.t("versionable","keyablebean");
x.t("graph","guidewire");
x.t("graph","entity");
x.t("optional","specifies");
x.t("information","subtypes");
x.t("shared","code");
x.t("foreignkey","foreignkey");
x.t("foreignkey","fulldescription");
x.t("implementsinterface","index");
x.t("implementsinterface","implementsinterface");
x.t("single-table","inheritance");
x.t("defined","java");
x.t("reuse","guidewire");
x.t("recommendations","guidewire");
x.t("permit","extend");
x.t("note","component");
x.t("classes","defined");
x.t("classes","using");
x.t("column","datetimeordering");
x.t("column","column");
x.t("delegating","implementation");
x.t("model","base");
x.t("model","metadata");
x.t("model","configuration");
x.t("model","entity");
x.t("entity","rather");
x.t("entity","implement");
x.t("entity","wish");
x.t("entity","name=");
x.t("entity","type");
x.t("entity","hierarchy");
x.t("entity","belongs");
x.t("entity","want");
x.t("entity","single");
x.t("entity","hier");
x.t("entity","definition");
x.t("entity","parent");
x.t("entity","implements");
x.t("entity","implementing");
x.t("entity","polymorphism");
x.t("entity","declaration");
x.t("entity","entity=");
x.t("entity","using");
x.t("entity","associated");
x.t("entity","contains");
x.t("following","text");
x.t("following","want");
x.t("following","extractable");
x.t("following","scenarios");
x.t("following","entity");
x.t("following","attributes");
x.t("following","subelements");
x.t("interlinked","adapter");
x.t("class","implement");
x.t("class","duplicating");
x.t("class","provides");
x.t("class","methods");
x.t("class","delegate");
x.t("using","type");
x.t("using","gosu");
x.t("using","delegate");
x.t("using","implementsentity");
x.t("using","following");
x.t("using","entity");
x.t("entity=","account");
x.t("setting","entity");
x.t("face","permits");
x.t("fulldescription","implementsentity");
x.t("fulldescription","fulldescription");
x.t("pass","argument");
x.t("associated","implemented");
x.t("associated","delegate");
x.t("inter-related","adapter");
x.t("without","single-table");
x.t("modifiable","validatable");
x.t("behavior","common");
x.t("var","text_val=eval");
x.t("adapter","attribute");
x.t("adapter","attributes");
x.t("generates","error");
x.t("object","reusable");
x.t("object","creating");
x.t("object","claimcenter");
x.t("object","discussion");
x.t("object","data");
x.t("contains","interface");
x.t("contains","following");
x.t("specify","delegate");
x.t("specify","value");
x.t("specify","adapter");
x.t("attributes","description");
x.t("attributes","name");
x.t("attributes","delegate");
x.t("attributes","important");
x.t("attributes","implementsentity");
x.t("subelements","description");
x.t("subelements","delegate");
}
