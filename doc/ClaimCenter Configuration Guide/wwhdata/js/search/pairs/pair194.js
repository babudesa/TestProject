function FileData_Pairs(x)
{
x.t("example","creating");
x.t("testclaimassignableid","name=");
x.t("claim","exportable=");
x.t("key","base");
x.t("foreign","key");
x.t("foreign","keys");
x.t("name=","testclaimassignable");
x.t("name=","testclaimassignables");
x.t("testclaimassignable","open");
x.t("testclaimassignable","fkentity=");
x.t("testclaimassignable","desc=");
x.t("uses","foreign");
x.t("text_val.select","link");
x.t("extension","entity");
x.t("open","activity.etx");
x.t("open","claim.etx");
x.t("editing","add");
x.t("entities","want");
x.t("entities","need");
x.t("entities","creating");
x.t("entities","function");
x.t("entities","step");
x.t("link","assignable");
x.t("link","directly");
x.t("want","link");
x.t("fkentity=","testclaimassignable");
x.t("messsage","claimcenter");
x.t("need","foreign");
x.t("add","foreign");
x.t("add","following");
x.t("assignable","extension");
x.t("assignable","entities");
x.t("assignable","entity");
x.t("guide","data");
x.t("directly","page");
x.t("test","assignables");
x.t("true","name=");
x.t("text_val.focus","text_val.select");
x.t("creating","assignable");
x.t("base","configuration");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("place","xml");
x.t("arrayentity=","testclaimassignable");
x.t("claimcenter","configuration");
x.t("array","arrayentity=");
x.t("desc=","test");
x.t("error","occurred");
x.t("activity.etx","editing");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("step","add");
x.t("xml","array");
x.t("xml","foreignkey");
x.t("assignables","claim");
x.t("occurred","messsage");
x.t("keys","testclaimassignable");
x.t("keys","assignable");
x.t("keys","step");
x.t("configuration","example");
x.t("configuration","assignable");
x.t("configuration","guide");
x.t("configuration","entity");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("page","error");
x.t("claim.etx","editing");
x.t("data","model");
x.t("appropriate","place");
x.t("foreignkey","columnname=");
x.t("columnname=","testclaimassignableid");
x.t("testclaimassignables","open");
x.t("model","configuration");
x.t("entity","uses");
x.t("entity","assignable");
x.t("entity","add");
x.t("entity","base");
x.t("following","appropriate");
x.t("exportable=","true");
x.t("var","text_val=eval");
}
