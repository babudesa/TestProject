function FileData_Pairs(x)
{
x.t("active","selection");
x.t("active","language");
x.t("menuitem","widget");
x.t("localization","localizing");
x.t("exist","language");
x.t("possible","add");
x.t("create","check");
x.t("log-in","process");
x.t("user","locale");
x.t("user","determines");
x.t("user","during");
x.t("user","exists");
x.t("user","logs");
x.t("user","whose");
x.t("user","click");
x.t("current","user");
x.t("uses","default");
x.t("uses","first");
x.t("uses","checked");
x.t("text_val.select","link");
x.t("interface","locale");
x.t("interface","claimcenter");
x.t("interface","setting");
x.t("authenticates","current");
x.t("languagetabbarlink","widget");
x.t("locale","user");
x.t("locale","uses");
x.t("locale","multiple");
x.t("locale","web");
x.t("locale","claimcenter");
x.t("locale","select");
x.t("locale","function");
x.t("locale","en_us");
x.t("locale","setting");
x.t("browser","accept-language");
x.t("browser","claimcenter");
x.t("multiple","codes");
x.t("multiple","locales");
x.t("widget","create");
x.t("widget","part");
x.t("widget","turn");
x.t("default","user");
x.t("default","locale");
x.t("link","directly");
x.t("want","modify");
x.t("==","lang");
x.t("top","claimcenter");
x.t("messsage","claimcenter");
x.t("determines","locale");
x.t("determines","appropriate");
x.t("http","header");
x.t("list","locale");
x.t("list","add");
x.t("during","log-in");
x.t("accept-language","http");
x.t("accept-language","header");
x.t("add","check");
x.t("guide","configuring");
x.t("check","mark");
x.t("configuring","localization");
x.t("directly","page");
x.t("desired","language");
x.t("text_val.focus","text_val.select");
x.t("definition","whose");
x.t("codes","claimcenter");
x.t("edit","desired");
x.t("part","languagetabbarlink");
x.t("part","tabbar");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","claimcenter");
x.t("determine","locale");
x.t("profile","want");
x.t("profile","page");
x.t("web","browser");
x.t("search","user");
x.t("selection","language");
x.t("selection","checked");
x.t("claimcenter","uses");
x.t("claimcenter","interface");
x.t("claimcenter","authenticates");
x.t("claimcenter","determines");
x.t("claimcenter","chooses");
x.t("claimcenter","cannot");
x.t("claimcenter","configuration");
x.t("claimcenter","administration");
x.t("local","based");
x.t("chooses","gwlocale");
x.t("chooses","individual");
x.t("attribute","menuitem");
x.t("attribute","matches");
x.t("attribute","following");
x.t("selector","possible");
x.t("selector","claimcenter");
x.t("selector","appears");
x.t("selector","drop-down");
x.t("error","occurred");
x.t("display","check");
x.t("next","active");
x.t("first","matching");
x.t("appears","along");
x.t("select","value");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("util.localeutil.getcurrentuserlanguage","==");
x.t("cannot","determine");
x.t("cannot","locate");
x.t("language","selection");
x.t("language","selector");
x.t("language","using");
x.t("code","claimcenter");
x.t("code","attribute");
x.t("logs","navigates");
x.t("matches","value");
x.t("header","browser");
x.t("header","contains");
x.t("whose","profile");
x.t("whose","code");
x.t("click","edit");
x.t("occurred","messsage");
x.t("configuration","guide");
x.t("value","accept-language");
x.t("value","drop-down");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("en_us","default");
x.t("drop-down","list");
x.t("process","chooses");
x.t("locales","exist");
x.t("localizing","claimcenter");
x.t("page","user");
x.t("page","error");
x.t("along","top");
x.t("navigates","interface");
x.t("appropriate","local");
x.t("locate","individual");
x.t("gwlocale","definition");
x.t("administration","tab");
x.t("based","following");
x.t("mark","active");
x.t("mark","display");
x.t("mark","next");
x.t("mark","language");
x.t("tabbar","widget");
x.t("following","claimcenter");
x.t("following","util.localeutil.getcurrentuserlanguage");
x.t("individual","locale");
x.t("turn","part");
x.t("setting","user");
x.t("using","language");
x.t("tab","search");
x.t("modify","profile");
x.t("var","text_val=eval");
x.t("contains","multiple");
x.t("matching","code");
x.t("checked","attribute");
}
