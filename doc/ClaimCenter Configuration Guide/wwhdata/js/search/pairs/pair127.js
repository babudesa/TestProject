function FileData_Pairs(x)
{
x.t("root","open");
x.t("root","delete");
x.t("root","path");
x.t("root","level");
x.t("root","enter");
x.t("example","type");
x.t("localization","claimcenter");
x.t("editors","using");
x.t("rather","hard-coded");
x.t("files","locale");
x.t("within","studio");
x.t("within","hierarchical");
x.t("within","display");
x.t("within","display.properties");
x.t("alphabetically","root");
x.t("dot","claimcenter");
x.t("studio","editors");
x.t("studio","however");
x.t("studio","access");
x.t("studio","saves");
x.t("studio","translates");
x.t("studio","following");
x.t("create","new");
x.t("create","display");
x.t("create","dis");
x.t("create","localizing");
x.t("tree","place");
x.t("tree","structure");
x.t("expandable","nodes");
x.t("key","dialog");
x.t("key","removes");
x.t("key","want");
x.t("key","navigate");
x.t("key","name");
x.t("key","select");
x.t("key","display.properties");
x.t("key","click");
x.t("user","kept");
x.t("uses","additional");
x.t("dialog","delete");
x.t("dialog","enter");
x.t("dialog","using");
x.t("text_val.select","link");
x.t("potentially","reach");
x.t("press","alt-enter");
x.t("displays","multiple");
x.t("open","create");
x.t("type","validation");
x.t("hierarchical","name");
x.t("hierarchy","within");
x.t("explicitly","save");
x.t("delete","click");
x.t("delete","existing");
x.t("however","navigate");
x.t("however","localize");
x.t("however","save");
x.t("locale","create");
x.t("locale","enter");
x.t("multiple","choices");
x.t("guidewire","studio");
x.t("guidewire","strongly");
x.t("text","box");
x.t("text","string");
x.t("text","existing");
x.t("text","localizing");
x.t("automatically","explicitly");
x.t("automatically","however");
x.t("automatically","unless");
x.t("automatically","sorts");
x.t("removes","empty");
x.t("default","value");
x.t("link","directly");
x.t("single","user-viewable");
x.t("eyes","user");
x.t("access","display");
x.t("want","delete");
x.t("want","view");
x.t("want","modify");
x.t("new","root");
x.t("new","display");
x.t("hard-coded","string");
x.t("messsage","claimcenter");
x.t("file","no");
x.t("file","following");
x.t("recommends","string");
x.t("actions","view");
x.t("add","new");
x.t("guide","guidewire");
x.t("saves","work");
x.t("filter","box");
x.t("unless","navigate");
x.t("remove","localize");
x.t("navigate","display");
x.t("navigate","different");
x.t("directly","page");
x.t("desired","claimcenter");
x.t("text_val.focus","text_val.select");
x.t("no","localization");
x.t("no","value");
x.t("name","default");
x.t("name","space");
x.t("operation","studio");
x.t("path","new");
x.t("path","filter");
x.t("box","example");
x.t("box","desired");
x.t("localize","display");
x.t("localize","existing");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("place","cursor");
x.t("search","enter");
x.t("claimcenter","uses");
x.t("claimcenter","displays");
x.t("claimcenter","represents");
x.t("claimcenter","stores");
x.t("claimcenter","configuration");
x.t("claimcenter","save");
x.t("string","press");
x.t("string","guidewire");
x.t("string","text");
x.t("string","constant");
x.t("empty","display");
x.t("display","key");
x.t("display","keys");
x.t("error","occurred");
x.t("strongly","recommends");
x.t("choices","java.validation");
x.t("validation","dot");
x.t("java.validation","modify");
x.t("kept","displaykey");
x.t("space","within");
x.t("select","root");
x.t("select","display");
x.t("select","different");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("editor","studio");
x.t("editor","create");
x.t("editor","automatically");
x.t("editor","display");
x.t("editor","function");
x.t("editor","displaykey");
x.t("editor","selecting");
x.t("editor","following");
x.t("represents","single");
x.t("represents","display");
x.t("different","locale");
x.t("different","editor");
x.t("stores","file");
x.t("stores","display");
x.t("row","search");
x.t("dis","play");
x.t("display.properties","files");
x.t("display.properties","file");
x.t("display.properties","translates");
x.t("claimcenter/modules/cc/config/locale/en_us","however");
x.t("changes","made");
x.t("node","resources");
x.t("cursor","text");
x.t("task","actions");
x.t("level","create");
x.t("level","package");
x.t("upon","save");
x.t("enter","new");
x.t("enter","path");
x.t("enter","display");
x.t("enter","localized");
x.t("click","open");
x.t("click","remove");
x.t("occurred","messsage");
x.t("displaykey","rather");
x.t("displaykey","represents");
x.t("made","display");
x.t("existing","root");
x.t("existing","display");
x.t("keys","within");
x.t("keys","alphabetically");
x.t("keys","no");
x.t("keys","claimcenter");
x.t("keys","editor");
x.t("keys","information");
x.t("configuration","guide");
x.t("alt-enter","open");
x.t("additional","display.properties");
x.t("value","add");
x.t("value","upon");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("constant","potentially");
x.t("constant","claimcenter");
x.t("selecting","node");
x.t("sorts","display");
x.t("view","display");
x.t("view","expanding");
x.t("localizing","display");
x.t("page","error");
x.t("location","claimcenter/modules/cc/config/locale/en_us");
x.t("nodes","within");
x.t("nodes","nar");
x.t("information","claimcenter");
x.t("expanding","nodes");
x.t("reach","eyes");
x.t("save","operation");
x.t("save","changes");
x.t("save","work");
x.t("structure","expandable");
x.t("nar","row");
x.t("work","studio");
x.t("work","automatically");
x.t("localized","text");
x.t("package","level");
x.t("following","automatically");
x.t("following","task");
x.t("following","location");
x.t("translates","tree");
x.t("translates","separating");
x.t("using","display");
x.t("separating","levels");
x.t("play","key");
x.t("levels","hierarchy");
x.t("modify","text");
x.t("modify","string");
x.t("modify","modify");
x.t("var","text_val=eval");
x.t("user-viewable","text");
x.t("resources","tree");
}
