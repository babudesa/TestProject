function FileData_Pairs(x)
{
x.t("example","type");
x.t("example","claimcenter");
x.t("example","criteriadef");
x.t("claimrpt","claimrpt");
x.t("claimrpt","table");
x.t("claimrpt","claimcenter");
x.t("claimrpt","documentsearchcriteria");
x.t("searching","claim");
x.t("targetentityname","attributes");
x.t("possible","map");
x.t("introduce","problems");
x.t("exist","base");
x.t("claim","searches");
x.t("claim","financials");
x.t("claim","specific");
x.t("claim","claiminfo");
x.t("arraycriterion","creates");
x.t("ccnamecriteria","contact");
x.t("lists","search");
x.t("description","entity");
x.t("description","criterion");
x.t("table","lists");
x.t("table","claimcenter");
x.t("table","contains");
x.t("contact","claiminfocriteria");
x.t("required","description");
x.t("required","base");
x.t("financial","related");
x.t("financial","values");
x.t("related","claim");
x.t("avoids","calculating");
x.t("performs","simple");
x.t("user","interface");
x.t("creates","simple");
x.t("uses","following");
x.t("text_val.select","link");
x.t("interface","configuration");
x.t("authoritylimitprofile","user");
x.t("type","name");
x.t("type","search");
x.t("open","reserve");
x.t("bulkinvoice","ccnamecriteria");
x.t("entities","claim");
x.t("increases","search");
x.t("guidewire","strongly");
x.t("one-to-one","mapping");
x.t("element","introduce");
x.t("element","uses");
x.t("element","function");
x.t("element","specifies");
x.t("element","criteriadef");
x.t("element","following");
x.t("element","criteria");
x.t("element","associated");
x.t("element","specify");
x.t("link","directly");
x.t("single","search");
x.t("new","criteriadef");
x.t("contents","existing");
x.t("objects","\u00adclaimcenter");
x.t("document","paymentsearchcriteria");
x.t("document","entity");
x.t("messsage","claimcenter");
x.t("search-config.xml","corresponding");
x.t("search-config.xml","modify");
x.t("checkrpt","recoverysearchcriteria");
x.t("add","new");
x.t("recommends","remove");
x.t("guide","user");
x.t("denormalized","claim");
x.t("remove","required");
x.t("remove","criteriadef");
x.t("simple","one-to-one");
x.t("simple","join");
x.t("check","checkrpt");
x.t("configuring","search");
x.t("directly","page");
x.t("reserve","amount");
x.t("\u00adclaimcenter","search");
x.t("definition","element");
x.t("text_val.focus","text_val.select");
x.t("functionality","criteria");
x.t("name","target");
x.t("name","criteria");
x.t("performance","financial");
x.t("searches","example");
x.t("base","configuration");
x.t("base","criteriadef");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("bulkinvoicesearchcriteria","bulkinvoice");
x.t("targetentity=","targetentityname");
x.t("search","example");
x.t("search","searching");
x.t("search","functionality");
x.t("search","performance");
x.t("search","query");
x.t("search","criteria");
x.t("map","single");
x.t("address","bulkinvoicesearchcriteria");
x.t("address","address");
x.t("claimcenter","avoids");
x.t("claimcenter","increases");
x.t("claimcenter","claimsearchcriteria");
x.t("claimcenter","configuration");
x.t("claimcenter","installation");
x.t("target","entity");
x.t("target","attributes");
x.t("array","entity");
x.t("problems","claimcenter");
x.t("attribute","search");
x.t("attribute","target");
x.t("attribute","criterionchoice");
x.t("attribute","attributeuser");
x.t("ones","remove");
x.t("error","occurred");
x.t("strongly","recommends");
x.t("activitysearchcriteria","activity");
x.t("syntax","criteriadef");
x.t("calculating","financial");
x.t("guidewire_selectall","var");
x.t("number","target");
x.t("activity","address");
x.t("function","guidewire_selectall");
x.t("criterionchoice","matches");
x.t("specifies","mapping");
x.t("against","array");
x.t("against","number");
x.t("paymentsearchcriteria","check");
x.t("recovery","usersearchcriteria");
x.t("attributeuser","authoritylimitprofile");
x.t("claimsearchcriteria","claim");
x.t("claimsearchcriteria","object");
x.t("matches","attribute");
x.t("occurred","messsage");
x.t("existing","ones");
x.t("configuration","guide");
x.t("configuration","configuring");
x.t("configuration","criteriadef");
x.t("targetentity","type");
x.t("financials","information");
x.t("amount","mapping");
x.t("claiminfocriteria","claiminfo");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","open");
x.t("recoverysearchcriteria","recovery");
x.t("page","error");
x.t("criteriadef","element");
x.t("criteriadef","elements");
x.t("criteriadef","entity=");
x.t("criteriadef","attributes");
x.t("criteriadef","subelements");
x.t("claiminfo","claimrpt");
x.t("claiminfo","claimsearchcriteria");
x.t("information","mapping");
x.t("query","itself");
x.t("defined","search-config.xml");
x.t("values","search");
x.t("join","against");
x.t("usersearchcriteria","attribute");
x.t("itself","warning");
x.t("mapping","claimrpt");
x.t("mapping","table");
x.t("mapping","search");
x.t("mapping","criteria");
x.t("mapping","documentsearchcriteria");
x.t("entity","example");
x.t("entity","possible");
x.t("entity","type");
x.t("entity","objects");
x.t("entity","document");
x.t("entity","search");
x.t("entity","target");
x.t("entity","attribute");
x.t("entity","activitysearchcriteria");
x.t("entity","against");
x.t("entity","targetentity");
x.t("entity","criteriadef");
x.t("entity","following");
x.t("following","table");
x.t("following","entities");
x.t("following","syntax");
x.t("following","definitions");
x.t("following","subelements");
x.t("elements","exist");
x.t("elements","search-config.xml");
x.t("corresponding","entity");
x.t("entity=","entityname");
x.t("warning","add");
x.t("installation","guidewire");
x.t("criteria","definition");
x.t("criteria","entity");
x.t("criteria","object");
x.t("criterion","performs");
x.t("documentsearchcriteria","document");
x.t("documentsearchcriteria","entity");
x.t("definitions","criteriadef");
x.t("associated","following");
x.t("modify","contents");
x.t("var","text_val=eval");
x.t("entityname","targetentity=");
x.t("specify","mapping");
x.t("attributes","arraycriterion");
x.t("attributes","required");
x.t("attributes","following");
x.t("object","criteriadef");
x.t("object","defined");
x.t("object","entity");
x.t("contains","denormalized");
x.t("subelements","description");
x.t("subelements","criteriadef");
}
