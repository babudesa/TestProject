function FileData_Pairs(x)
{
x.t("example","example");
x.t("example","defines");
x.t("extensions","folder");
x.t("defines","inspector");
x.t("within","subtype");
x.t("full","name");
x.t("varchar","desc=");
x.t("create","subtypes");
x.t("create","inspectorext.eti");
x.t("table","includes");
x.t("table","supertype");
x.t("table","subtype");
x.t("description","required");
x.t("description","elements");
x.t("business","license");
x.t("required","optional");
x.t("bases","subtype");
x.t("name=","size");
x.t("name=","inspectorlicenseext");
x.t("version=","1.0");
x.t("uses","column");
x.t("field","inspector\u2019s");
x.t("dialog","xml");
x.t("http://guidewire.com/datamodel","desc=");
x.t("text_val.select","link");
x.t("extension","dialog");
x.t("type","values");
x.t("hierarchy","claimcenter");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("link","directly");
x.t("element","specify");
x.t("certain","attributes");
x.t("objects","within");
x.t("new","file");
x.t("includes","field");
x.t("includes","subtype");
x.t("license","create");
x.t("license","number");
x.t("size","value=");
x.t("30","/column");
x.t("messsage","claimcenter");
x.t("file","navigate");
x.t("file","right-click");
x.t("guide","data");
x.t("navigate","extensions");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("no","limit");
x.t("name","supertype");
x.t("name","including");
x.t("definition","define");
x.t("base","data");
x.t("base","entity");
x.t("limit","depth");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("supertype","table");
x.t("supertype","supertype");
x.t("supertype","additional");
x.t("supertype","subtype");
x.t("supertype","entity");
x.t("professional","inspector");
x.t("modifying","base");
x.t("supertype=","person");
x.t("claimcenter","bases");
x.t("claimcenter","uses");
x.t("claimcenter","configuration");
x.t("claimcenter","associate");
x.t("fields","elements");
x.t("inspectorlicenseext","type=");
x.t("defining","subtype");
x.t("desc=","professional");
x.t("desc=","inspector's");
x.t("ones","create");
x.t("/column","/subtype");
x.t("error","occurred");
x.t("1.0","subtype");
x.t("resolve","subtype");
x.t("select","new");
x.t("guidewire_selectall","var");
x.t("number","columnparam");
x.t("function","guidewire_selectall");
x.t("subtypes","table");
x.t("subtypes","no");
x.t("subtypes","subtypes");
x.t("unique","database");
x.t("define","fields");
x.t("define","subtype");
x.t("person","column");
x.t("person","inspector");
x.t("instead","application");
x.t("stores","type");
x.t("stores","subtypes");
x.t("inspectorext.eti","file");
x.t("inspectorext","supertype=");
x.t("xml","version=");
x.t("folder","select");
x.t("database","table");
x.t("extending","base");
x.t("enter","full");
x.t("occurred","messsage");
x.t("configuration","guide");
x.t("configuration","modifying");
x.t("include","data");
x.t("additional","ones");
x.t("right-click","submenu");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("inspector\u2019s","license");
x.t("type=","varchar");
x.t("columnparam","name=");
x.t("subtype","xmlns=");
x.t("subtype","element");
x.t("subtype","name");
x.t("subtype","definition");
x.t("subtype","fields");
x.t("subtype","claimcenter");
x.t("subtype","defining");
x.t("subtype","function");
x.t("subtype","define");
x.t("subtype","person");
x.t("subtype","instead");
x.t("subtype","subtype");
x.t("subtype","data");
x.t("subtype","column");
x.t("subtype","entity");
x.t("subtype","using");
x.t("page","error");
x.t("depth","hierarchy");
x.t("data","objects");
x.t("data","model");
x.t("data","object");
x.t("optional","attributes");
x.t("examples","defining");
x.t("application","stores");
x.t("values","subtype");
x.t("inspector's","business");
x.t("column","name=");
x.t("column","resolve");
x.t("column","stores");
x.t("column","subtype");
x.t("inspector","entity");
x.t("inspector","entity=");
x.t("inspector","displayname=");
x.t("submenu","enter");
x.t("associate","unique");
x.t("model","extending");
x.t("model","configuration");
x.t("model","examples");
x.t("entity","description");
x.t("entity","includes");
x.t("entity","base");
x.t("entity","supertype");
x.t("entity","claimcenter");
x.t("entity","subtype");
x.t("elements","description");
x.t("elements","supertype");
x.t("elements","include");
x.t("using","subtype");
x.t("entity=","inspectorext");
x.t("displayname=","inspector");
x.t("var","text_val=eval");
x.t("including","extension");
x.t("value=","30");
x.t("specify","certain");
x.t("attributes","subtype");
x.t("object","subelements");
x.t("subelements","example");
}
