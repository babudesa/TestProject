function FileData_Pairs(x)
{
x.t("example","creating");
x.t("extensions","folder");
x.t("properties","entity");
x.t("claim","owner");
x.t("claim","name=");
x.t("claim","test");
x.t("claim","together");
x.t("claim","nullok=");
x.t("claim","used");
x.t("implement","following");
x.t("owner","cascading");
x.t("claimid","desc=");
x.t("create","extension");
x.t("create","new");
x.t("create","assignable");
x.t("create","entity");
x.t("key","back");
x.t("events","assigned");
x.t("foreign","key");
x.t("foreign","keys");
x.t("name=","claim");
x.t("name=","assignable");
x.t("name=","extractable");
x.t("name=","ccassignable");
x.t("testclaimassignable","create");
x.t("testclaimassignable","foreign");
x.t("testclaimassignable","uses");
x.t("testclaimassignable","first");
x.t("testclaimassignable","function");
x.t("testclaimassignable","implements");
x.t("testclaimassignable","step");
x.t("testclaimassignable","exportable=");
x.t("version=","1.0");
x.t("creates","history");
x.t("uses","foreign");
x.t("uses","class");
x.t("http://guidewire.com/datamodel","desc=");
x.t("extension","entity");
x.t("text_val.select","link");
x.t("interface","create");
x.t("interface","define");
x.t("necessary","assignment");
x.t("populate","file");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("entities","creating");
x.t("back","claim");
x.t("cascading","creates");
x.t("link","directly");
x.t("new","extension");
x.t("fkentity=","claim");
x.t("messsage","claimcenter");
x.t("file","extensions");
x.t("file","following");
x.t("assignable","foreign");
x.t("assignable","extension");
x.t("assignable","entities");
x.t("assignable","delegate");
x.t("assignable","implementsentity");
x.t("assignable","ccassignable");
x.t("assignable","entity");
x.t("assignable","exportable=");
x.t("table=","testclaimassign");
x.t("assignment","claim");
x.t("assignment","assignment");
x.t("assignment","methods");
x.t("guide","data");
x.t("testing","entity=");
x.t("platform=","false");
x.t("simple","test");
x.t("false","fkentity=");
x.t("false","table=");
x.t("false","/entity");
x.t("retireable","fulldescription");
x.t("directly","page");
x.t("true","platform=");
x.t("test","assignable");
x.t("text_val.focus","text_val.select");
x.t("creating","assignable");
x.t("name","testclaimassignable.eti");
x.t("manual","assignment");
x.t("testclaimassignable.eti","populate");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","properties");
x.t("allows","participate");
x.t("claimcenter","configuration");
x.t("desc=","claim");
x.t("desc=","ccassignable");
x.t("error","occurred");
x.t("gw.api.assignment.ccassignablemethods","impl=");
x.t("notice","following");
x.t("delegate","testclaimassignablemethodsimpl");
x.t("delegate","class");
x.t("1.0","entity");
x.t("extractable","implementsentity");
x.t("first","step");
x.t("/entity","notice");
x.t("guidewire_selectall","var");
x.t("iface=","gw.api.assignment.ccassignablemethods");
x.t("function","guidewire_selectall");
x.t("implements","assignable");
x.t("implements","ccassignablemethods");
x.t("define","necessary");
x.t("step","create");
x.t("xml","version=");
x.t("participate","manual");
x.t("assigned","/fulldescription");
x.t("code","xml");
x.t("testclaimassign","type=");
x.t("folder","name");
x.t("testclaimassignablemethodsimpl","allows");
x.t("testclaimassignablemethodsimpl","implements");
x.t("together","ccassignablemethods");
x.t("nullok=","false");
x.t("occurred","messsage");
x.t("implementsentity","name=");
x.t("configuration","example");
x.t("configuration","guide");
x.t("keys","step");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("delegates","entity");
x.t("ccassignablemethods","interface");
x.t("ccassignablemethods","delegate");
x.t("type=","retireable");
x.t("page","error");
x.t("data","model");
x.t("ccassignable","extension");
x.t("ccassignable","delegate");
x.t("ccassignable","delegates");
x.t("ccassignable","implementsinterface");
x.t("implementsinterface","iface=");
x.t("foreignkey","columnname=");
x.t("gw.assignment.testclaimassignablemethodsimpl","foreignkey");
x.t("columnname=","claimid");
x.t("history","events");
x.t("entity","implement");
x.t("entity","foreign");
x.t("entity","testclaimassignable");
x.t("entity","uses");
x.t("entity","xmlns=");
x.t("entity","file");
x.t("entity","assignable");
x.t("model","configuration");
x.t("following","assignable");
x.t("following","code");
x.t("following","entity");
x.t("used","testing");
x.t("class","testclaimassignablemethodsimpl");
x.t("class","ccassignablemethods");
x.t("class","ccassignable");
x.t("entity=","testclaimassignable");
x.t("exportable=","false");
x.t("exportable=","true");
x.t("fulldescription","simple");
x.t("impl=","gw.assignment.testclaimassignablemethodsimpl");
x.t("var","text_val=eval");
x.t("/fulldescription","implementsentity");
}
