function FileData_Pairs(x)
{
x.t("complex","example");
x.t("complex","logic");
x.t("example","create");
x.t("example","asbusinesstype");
x.t("example","uses");
x.t("example","add");
x.t("example","illustrates");
x.t("example","suppose");
x.t("example","extended");
x.t("example","running");
x.t("example","generate");
x.t("example","policyperiod");
x.t("example","order");
x.t("example","package");
x.t("example","following");
x.t("extensions","exist");
x.t("extensions","folder");
x.t("userid","fkentity=");
x.t("userid","exportable=");
x.t("passed","values");
x.t("peter","rabbit");
x.t("testusername","assertequals");
x.t("statements","extcredentialbuilder");
x.t("icons","indicating");
x.t("construct","function");
x.t("construct","super");
x.t("method","within");
x.t("method","create");
x.t("method","uses");
x.t("method","populate");
x.t("method","calls");
x.t("method","requires");
x.t("method","test");
x.t("method","define");
x.t("method","important");
x.t("method","code");
x.t("method","instances");
x.t("method","following");
x.t("method","onaccount");
x.t("method","class");
x.t("method","person\u2019s");
x.t("method","instantiates");
x.t("method","including");
x.t("properties","type");
x.t("properties","ascending");
x.t("properties","calling");
x.t("properties","order");
x.t("parameter","description");
x.t("parameter","type");
x.t("parameter","extcredential");
x.t("parameter","return");
x.t("parameter","extcredentialbuilder");
x.t("chaining","methods");
x.t("provide","property");
x.t("provide","order");
x.t("possible","want");
x.t("possible","commit");
x.t("integers","strings");
x.t("exist","create");
x.t("gw.testharness.testbase","static");
x.t("available","methods");
x.t("building","done");
x.t("defines","several");
x.t("implement","create");
x.t("implement","builder");
x.t("myentity","groupbuilder");
x.t("myentity","group");
x.t("myentity","vals");
x.t("files","create");
x.t("within","guidewire");
x.t("within","test");
x.t("within","class");
x.t("create","method");
x.t("create","however");
x.t("create","extcrendentialbuilder");
x.t("create","new");
x.t("create","test");
x.t("create","extcredential");
x.t("create","custom");
x.t("create","extcredentialbuildertest");
x.t("create","gunit");
x.t("create","array");
x.t("create","subobjects");
x.t("create","implements");
x.t("create","builder");
x.t("create","extcredentialbuilder");
x.t("create","class");
x.t("static","field");
x.t("static","modifier");
x.t("static","keyword");
x.t("static","variable");
x.t("static","credential");
x.t("static","var");
x.t("description","static");
x.t("description","builderentity");
x.t("studio","uses");
x.t("studio","navigate");
x.t("studio","tests");
x.t("studio","define");
x.t("studio","modify");
x.t("preserve","variable");
x.t("commits","bundle");
x.t("beans","used");
x.t("beans","pass");
x.t("instance","test");
x.t("instance","constructed");
x.t("having","following");
x.t("key","user");
x.t("green","icons");
x.t("asbusinesstype","agencybill");
x.t("databuilder.addpopulator","guidewire");
x.t("foreign","key");
x.t("few","external");
x.t("name=","userid");
x.t("name=","extcredentialretirable");
x.t("name=","extsystem");
x.t("name=","username");
x.t("name=","password");
x.t("likely","file");
x.t("execute","method");
x.t("execute","myentity");
x.t("execute","accesses");
x.t("builds","execute");
x.t("user","extcredential");
x.t("user","extcredential.eti");
x.t("user","find");
x.t("user","array");
x.t("user","desc=");
x.t("user","/entity");
x.t("user","entity");
x.t("user","names");
x.t("version=","1.0");
x.t("creates","static");
x.t("creates","commits");
x.t("creates","single");
x.t("last","names");
x.t("field","properties");
x.t("field","user");
x.t("field","builder");
x.t("uses","statements");
x.t("uses","create");
x.t("uses","gw.api.databuilder.databuilder");
x.t("uses","test");
x.t("uses","constructor");
x.t("uses","beforeclass");
x.t("uses","databuilder.default_order");
x.t("uses","takes");
x.t("uses","allmyclasses.extcredentialbuilder");
x.t("uses","gw.transaction.transaction");
x.t("uses","extcredentialbuilder");
x.t("uses","gw.api.databuilder.personbuilder");
x.t("uses","anonymous");
x.t("uses","databuilder");
x.t("uses","therefore");
x.t("middlename","testname");
x.t("generating","unique");
x.t("http://guidewire.com/datamodel","entity=");
x.t("text_val.select","link");
x.t("provided","claimcenter");
x.t("look","up");
x.t("buildertype","parameter");
x.t("buildertype","type");
x.t("buildertype","databuilder");
x.t("state","example");
x.t("support","short");
x.t("statement","extends");
x.t("@gw.testharness.servertest","class");
x.t("displays","green");
x.t("type","create");
x.t("type","look");
x.t("type","external");
x.t("type","typekey.extsystemtype");
x.t("type","return");
x.t("type","extsystem");
x.t("type","builder");
x.t("type","entity");
x.t("sample","uses");
x.t("sample","includes");
x.t("populate","field");
x.t("populate","extcredential");
x.t("joe","configuration");
x.t("open","file");
x.t("extcredentialretirable","arrayentity=");
x.t("resets","database");
x.t("calls","beforeclass");
x.t("calls","constructors");
x.t("calls","builder's");
x.t("calls","extcredentialbuilder");
x.t("satisfy","uniqueness");
x.t("satisfy","null");
x.t("public","myentitybuilder");
x.t("e.customgroupset","vals");
x.t("external","credentials");
x.t("external","systems");
x.t("external","system");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("time","thereafter");
x.t("extend","user");
x.t("extend","base");
x.t("extend","databbuilder");
x.t("extend","existing");
x.t("extend","personbuilder");
x.t("extend","databuilder");
x.t("ascending","order");
x.t("execution","test");
x.t("execution","order");
x.t("however","likely");
x.t("however","guidewire");
x.t("however","may");
x.t("however","run");
x.t("variants","generating");
x.t("inside","execute");
x.t("groupbuilder","function");
x.t("groupbuilder","databuilder");
x.t("multiple","withxxx");
x.t("multiple","test");
x.t("property","example");
x.t("property","studio");
x.t("property","name");
x.t("property","target");
x.t("property","claimcenter");
x.t("property","holds");
x.t("property","case");
x.t("property","values");
x.t("property","setters");
x.t("property","withfirstname");
x.t("require","databuilder");
x.t("guidewire","studio");
x.t("guidewire","recommends");
x.t("guidewire","provides");
x.t("guidewire","claimcenter");
x.t("guidewire","generally");
x.t("default","values");
x.t("automatically","converts");
x.t("automatically","gunit");
x.t("extcrendentialbuilder","extending");
x.t("back","user");
x.t("entities","create");
x.t("assertequals","user");
x.t("assertequals","passwords");
x.t("new","file");
x.t("new","array");
x.t("new","preferredname");
x.t("new","extended");
x.t("new","builder");
x.t("new","abstractbeanpopulator");
x.t("new","extcredentialbuilder");
x.t("new","typelist");
x.t("new","builders");
x.t("link","directly");
x.t("link","parent");
x.t("single","method");
x.t("single","instance");
x.t("single","state");
x.t("single","element");
x.t("single","copy");
x.t("want","create");
x.t("want","extend");
x.t("want","test");
x.t("want","claimcenter");
x.t("want","define");
x.t("start","method");
x.t("element","property");
x.t("objects","arrayfield=");
x.t("objects","database");
x.t("objects","following");
x.t("details","public");
x.t("items","create");
x.t("mynewbuilder","extends");
x.t("includes","uses");
x.t("includes","valuegenerator");
x.t("includes","gw.api.databuilder.valuegenerator");
x.t("passes","group");
x.t("fkentity=","user");
x.t("testpassword","assertequals");
x.t("block","creates");
x.t("messsage","claimcenter");
x.t("need","extend");
x.t("need","reference");
x.t("need","additional");
x.t("need","following");
x.t("gw.api.databuilder.databuilder","place");
x.t("gw.api.databuilder.databuilder","class");
x.t("indicates","link");
x.t("determines","claimcenter");
x.t("valuegenerator","class");
x.t("short","anonymous");
x.t("withxxx","methods");
x.t("file","add");
x.t("file","extcredential.eti");
x.t("file","name");
x.t("file","exists");
x.t("add","few");
x.t("add","new");
x.t("add","systemone");
x.t("add","array");
x.t("add","extsystem");
x.t("add","withpreferredname");
x.t("add","following");
x.t("gw.api.databuilder","package");
x.t("recommends","limit");
x.t("recommends","omit");
x.t("group","group");
x.t("group","constructor");
x.t("group","myentitybuilder");
x.t("group","function");
x.t("group","return");
x.t("group","addpopulator");
x.t("table=","extcred");
x.t("platerform=","true");
x.t("guide","uses");
x.t("guide","testing");
x.t("testing","possible");
x.t("testing","gosu");
x.t("testing","extending");
x.t("someexistingbuilder","construct");
x.t("simple","property");
x.t("simple","values");
x.t("credentials","automatic");
x.t("recommended","words");
x.t("navigate","typelists");
x.t("retireable","exportable=");
x.t("false","extending");
x.t("directly","page");
x.t("test","method");
x.t("test","uses");
x.t("test","new");
x.t("test","gunit");
x.t("test","methods");
x.t("test","data");
x.t("test","classes");
x.t("test","class");
x.t("test","accomplish");
x.t("desired","information");
x.t("true","platerform=");
x.t("true","function");
x.t("true","typekey");
x.t("requires","parameter");
x.t("requires","entity");
x.t("declare","static");
x.t("declare","strongly-typed");
x.t("constraints","possible");
x.t("constraints","instance");
x.t("constraints","databuilder");
x.t("built","objects");
x.t("defaults","maximum");
x.t("gw.api.databuilder.sequentialstringgenerator","gw.api.databuildertypekeystringgenerator");
x.t("handle","packaging");
x.t("converts","builders");
x.t("extcredential","construct");
x.t("extcredential","having");
x.t("extcredential","user");
x.t("extcredential","objects");
x.t("extcredential","table=");
x.t("extcredential","test");
x.t("extcredential","custom");
x.t("extcredential","array");
x.t("extcredential","desc=");
x.t("extcredential","select");
x.t("extcredential","builderentity");
x.t("extcredential","extcredentialbuilder");
x.t("extcredential.eti","add");
x.t("extcredential.eti","user.etx");
x.t("extcredential.eti","accessible");
x.t("extcredential.eti","enter");
x.t("extsystemtype","desc=");
x.t("withusername","somename");
x.t("creating","new");
x.t("creating","custom");
x.t("creating","builder");
x.t("creating","entity");
x.t("text_val.focus","text_val.select");
x.t("functionality","provided");
x.t("name","uses");
x.t("name","new");
x.t("name","file");
x.t("name","no");
x.t("no","static");
x.t("strongly-typed","parameters");
x.t("strongly-typed","value");
x.t("strongly-typed","builder");
x.t("account","method");
x.t("account","property");
x.t("account","account");
x.t("definition","include");
x.t("typelists","right-click");
x.t("outside","method");
x.t("gosu","static");
x.t("gosu","code");
x.t("gosu","reference");
x.t("previously","creating");
x.t("agencybill","single");
x.t("constructed","satisfy");
x.t("constructed","databuilder.set");
x.t("enables","callers");
x.t("typekeys","gw.api.databuilder.integerstringgenerator");
x.t("constructor","code");
x.t("constructor","abstractbeanpopulator");
x.t("constructor","super");
x.t("myentitybuilder","addpopulator");
x.t("myentitybuilder","withcustomsetting");
x.t("thereafter","test");
x.t("gunit","creates");
x.t("gunit","resets");
x.t("gunit","calls");
x.t("gunit","test");
x.t("gunit","drop");
x.t("gunit","using");
x.t("gunit","maintains");
x.t("gunit","tester");
x.t("base","configuration");
x.t("base","databuilder");
x.t("custom","extcredential");
x.t("custom","implementation");
x.t("custom","builder");
x.t("custom","entity");
x.t("tests","folder");
x.t("tests","successful");
x.t("argument","determines");
x.t("argument","allows");
x.t("limit","number");
x.t("extcredentialbuildertest","extends");
x.t("extcredentialbuildertest","class");
x.t("systemone",".withusername");
x.t("systemone","systemtwo");
x.t("declares","variable");
x.t("modifier","gosu");
x.t("part","transaction");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","properties");
x.t("methods","within");
x.t("methods","create");
x.t("methods","populate");
x.t("methods","however");
x.t("methods","require");
x.t("methods","declare");
x.t("methods","enables");
x.t("methods","up");
x.t("methods","extcredentialbuilder.gs");
x.t("methods","first");
x.t("methods","suffice");
x.t("methods","choose");
x.t("methods","starts");
x.t("methods","class");
x.t("boolean","means");
x.t("parameters","parameter");
x.t("parameters","uses");
x.t("parameters","buildertype");
x.t("uniqueness","constraints");
x.t("useful","satisfy");
x.t("useful","need");
x.t("ideally","building");
x.t("provides","abstract");
x.t("illustrates","public");
x.t("exists","open");
x.t("arrayfield=","userid");
x.t("up","property");
x.t("up","default");
x.t("place","newly");
x.t("place","class");
x.t("omit","order");
x.t("find","user.etx");
x.t("arrayentity=","extcredential");
x.t("typekey.extsystemtype","extcredentialbuilder");
x.t("somename","string");
x.t("somename","return");
x.t("mytests","uses");
x.t("beforeclass","method");
x.t("beforeclass","transaction.runwithnewbundle");
x.t("credential.username","peter");
x.t("strings","typekeys");
x.t("allows","super-class");
x.t("claimcenter","user");
x.t("claimcenter","uses");
x.t("claimcenter","base");
x.t("claimcenter","processes");
x.t("claimcenter","configuration");
x.t("claimcenter","configures");
x.t("string","creating");
x.t("string","extcredentialbuilder");
x.t("string","mypersonbuilder");
x.t("string","password");
x.t("databbuilder","class");
x.t("sets","firstname");
x.t("target","object");
x.t("array","name=");
x.t("array","field");
x.t("array","external");
x.t("array","extcredential");
x.t("array","entity");
x.t("array","object");
x.t("linked","external");
x.t("extcredentialbuilder.gs","create");
x.t("subobjects","calls");
x.t("subobjects","builders");
x.t("desc=","type");
x.t("desc=","array");
x.t("desc=","fk");
x.t("understand","gunit");
x.t("databuilder.addarrayelement","provide");
x.t("databuilder.addarrayelement","optionally");
x.t("shorttext","foreignkey");
x.t("shorttext","column");
x.t("error","occurred");
x.t("logic","methods");
x.t("notice","following");
x.t("syntax","class");
x.t("databuilder.default_order","order");
x.t("suppose","want");
x.t("automatic","sign-on");
x.t("1.0","entity");
x.t("typelist=","extsystemtype");
x.t("next","need");
x.t("finally","useful");
x.t("first","last");
x.t("first","time");
x.t("means","create");
x.t("builderentity","parameter");
x.t("builderentity","buildertype");
x.t("builderentity","type");
x.t("accept","integer");
x.t("select","extensions");
x.t("select","execution");
x.t("select","new");
x.t("/entity","modify");
x.t(".withtype","systemone");
x.t("guidewire_selectall","var");
x.t("constructors","code");
x.t("constructors","builders");
x.t("number","defaults");
x.t("control","target");
x.t("populators","ideally");
x.t("function","testusername");
x.t("function","execute");
x.t("function","testpassword");
x.t("function","withusername");
x.t("function","beforeclass");
x.t("function","guidewire_selectall");
x.t("function","withpassword");
x.t("function","somenewfunction");
x.t("function","withmiddlename");
x.t("function","withtype");
x.t("parent","example");
x.t("callers","builder");
x.t("maximum","control");
x.t("super-class","handle");
x.t("implements","multiple");
x.t(".withusername","peter");
x.t(".create","bundle");
x.t("indicating","tests");
x.t("person","person\u2019s");
x.t("person","object");
x.t("middle","name");
x.t("define","complex");
x.t("define","new");
x.t("define","extcredential");
x.t("define","custom");
x.t("words","described");
x.t("different","value");
x.t("processes","properties");
x.t("unique","integers");
x.t("may","want");
x.t("editor","guidewire");
x.t("withpassword","password");
x.t("somenewfunction","myextendedbuilder");
x.t("databuilder.addarrayelements","methods");
x.t("achieve","define");
x.t("xml","version=");
x.t("match","credential.username");
x.t("match","credential.password");
x.t("keyword","gosu");
x.t("person.typeinfo.getproperty","middlename");
x.t("added","new");
x.t("initial","word");
x.t("calling","databuilder.set");
x.t("vals","argument");
x.t("vals","[0]");
x.t("vals","object");
x.t("user.etx","extensions");
x.t("user.etx","create");
x.t("user.etx","add");
x.t("accessible","guidewire");
x.t("important","understand");
x.t("code","example");
x.t("code","sample");
x.t("code","inside");
x.t("code","passes");
x.t("code","declares");
x.t("code","using");
x.t("databuilder.set","databuilder.addarrayelement");
x.t("databuilder.set","databuilder.addarrayelements");
x.t("typekey","name=");
x.t("typekey","username");
x.t("task","affected");
x.t("reference","new");
x.t("reference","guide");
x.t("return","strongly-typed");
x.t("return","creating");
x.t("return","notice");
x.t("return","function");
x.t("return","abstractbeanpopulator");
x.t("return","note");
x.t("return","following");
x.t("slightly","complex");
x.t("preferredname","property");
x.t("folder","example");
x.t("folder","start");
x.t("folder","right-click");
x.t("folder","package");
x.t("abstract","implementation");
x.t("beanpopulator","objects");
x.t("typecodes","example");
x.t("credential.password","carrots");
x.t("extended","person");
x.t("extended","class");
x.t("testname","string");
x.t("testname","return");
x.t("database","however");
x.t("database","execution");
x.t("packaging","details");
x.t("fk","back");
x.t("extending","guidewire");
x.t("extending","base");
x.t("extending","existing");
x.t("extending","databuilder");
x.t("gw.api.databuildertypekeystringgenerator","custom");
x.t("accesses","vals");
x.t("bean","builds");
x.t("extsystem","type");
x.t("extsystem","typelist=");
x.t("extsystem","typekey");
x.t("extsystem","typelist");
x.t("enter","following");
x.t("bundle","automatically");
x.t("bundle","function");
x.t("bundle","credential");
x.t("variable","available");
x.t("variable","description");
x.t("variable","outside");
x.t("variable","code");
x.t("variable","value");
x.t("variable","run");
x.t("together","example");
x.t("assertxxx","method");
x.t("occurred","messsage");
x.t("existing","builder");
x.t("existing","personbuilder");
x.t("gw.api.databuilder.valuegenerator","example");
x.t("gw.api.databuilder.valuegenerator","class");
x.t("null","constraints");
x.t("addpopulator","new");
x.t("systemtwo","similar");
x.t("extcredential.typeinfo.getproperty","extsystem");
x.t("extcredential.typeinfo.getproperty","username");
x.t("extcredential.typeinfo.getproperty","password");
x.t("configuration","method");
x.t("configuration","entities");
x.t("configuration","guide");
x.t("configuration","methods");
x.t("configuration","entity");
x.t("configuration","builders");
x.t("instances","gw.api.databuilder.valuegenerator");
x.t("username","somename");
x.t("username","string");
x.t("username","type=");
x.t("include","foreign");
x.t("include","extcredential.eti");
x.t("discussion","two");
x.t("additional","builder");
x.t("value","example");
x.t("value","implement");
x.t("value","instance");
x.t("value","satisfy");
x.t("value","builder");
x.t("value","facilitate");
x.t("value","across");
x.t("builder's","create");
x.t("configures","property");
x.t("similar","items");
x.t("similar","methods");
x.t("suffice","achieve");
x.t("withcustomsetting","method");
x.t("withcustomsetting","groupbuilder");
x.t("withcustomsetting","group");
x.t("right-click","select");
x.t("allmyclasses","uses");
x.t("running","test");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("holds","single");
x.t("implementation","abstractbeanpopulator");
x.t("implementation","gw.api.databuilder.populator.beanpopulator");
x.t("several","test");
x.t("builder","create");
x.t("builder","recommended");
x.t("builder","functionality");
x.t("builder","constructor");
x.t("builder","gosu");
x.t("builder","custom");
x.t("builder","methods");
x.t("builder","select");
x.t("builder","populators");
x.t("builder","initial");
x.t("builder","extending");
x.t("builder","configuration");
x.t("builder","value");
x.t("builder","extcredentialbuildertest.gs");
x.t("builder","itself");
x.t("builder","cases");
x.t("builder","class");
x.t("extends","gw.testharness.testbase");
x.t("extends","someexistingbuilder");
x.t("extends","existing");
x.t("extends","personbuilder");
x.t("extends","databuilder");
x.t("withdefaultofficialid","slightly");
x.t("generate","different");
x.t("gw.api.databuilder.integerstringgenerator","gw.api.databuilder.sequentialstringgenerator");
x.t("perhaps","implement");
x.t("extcredentialbuildertest.gs","create");
x.t("extcred","type=");
x.t("type=","retireable");
x.t("type=","shorttext");
x.t("withmiddlename","testname");
x.t("takes","boolean");
x.t("takes","following");
x.t("withpreferredname","method");
x.t("word","indicates");
x.t("abstractbeanpopulator","myentity");
x.t("abstractbeanpopulator","support");
x.t("abstractbeanpopulator","call");
x.t("abstractbeanpopulator","class");
x.t("abstractbeanpopulator","returns");
x.t("[0]","group");
x.t("systems","perhaps");
x.t("exercise","test");
x.t("page","error");
x.t(".withpassword","carrots");
x.t("drop","database");
x.t("data","method");
x.t("data","creating");
x.t("data","place");
x.t("data","created");
x.t("data","run");
x.t("information","extending");
x.t("information","following");
x.t("facilitate","chaining");
x.t("withtype","type");
x.t("allmyclasses.extcredentialbuilder","uses");
x.t("gw.transaction.transaction","creates");
x.t("gw.transaction.transaction","@gw.testharness.servertest");
x.t("newly","created");
x.t("policyperiod","account");
x.t("sign-on","linked");
x.t("probably","want");
x.t("extcredentialbuilder","construct");
x.t("extcredentialbuilder","part");
x.t("extcredentialbuilder",".withtype");
x.t("extcredentialbuilder","extending");
x.t("extcredentialbuilder","extcredential.typeinfo.getproperty");
x.t("extcredentialbuilder","extends");
x.t("extcredentialbuilder","gw.transaction.transaction");
x.t("extcredentialbuilder","class");
x.t("foreignkey","name=");
x.t("credential","new");
x.t("credential","extcredential");
x.t("credential","variable");
x.t("defined","gunit");
x.t("case","want");
x.t("values","create");
x.t("values","beans");
x.t("values","useful");
x.t("values","following");
x.t("gw.api.databuilder.personbuilder","class");
x.t("choose","extend");
x.t("described","previously");
x.t("firstname","property");
x.t("(extcredential)","function");
x.t("myextendedbuilder","return");
x.t("myextendedbuilder","extends");
x.t("personbuilder","construct");
x.t("personbuilder","class");
x.t("note","personbuilder");
x.t("two","parameters");
x.t("two","constructors");
x.t("integer","order");
x.t("classes","gw.api.databuilder");
x.t("classes","folder");
x.t("classes","together");
x.t("classes","package");
x.t("done","simple");
x.t("setters","using");
x.t("column","name=");
x.t("transaction","block");
x.t("itself","methods");
x.t("optionally","accept");
x.t("cases","guidewire");
x.t("copy","variable");
x.t("created","desired");
x.t("created","beforeclass");
x.t("created","builder");
x.t("mypersonbuilder","person.typeinfo.getproperty");
x.t("mypersonbuilder","extends");
x.t("mypersonbuilder","class");
x.t("package","studio");
x.t("package","includes");
x.t("package","tests");
x.t("package","gunit");
x.t("package","mytests");
x.t("package","allmyclasses");
x.t("package","classes");
x.t("order","provide");
x.t("order","property");
x.t("order","argument");
x.t("order","configuration");
x.t("order","value");
x.t("order","builder");
x.t("order","order");
x.t("call","similar");
x.t("call","withcustomsetting");
x.t("subclass","abstractbeanpopulator");
x.t("rabbit","function");
x.t("rabbit",".withpassword");
x.t("entity","example");
x.t("entity","create");
x.t("entity","type");
x.t("entity","xmlns=");
x.t("entity","extend");
x.t("entity","need");
x.t("entity","testing");
x.t("entity","extcredential.eti");
x.t("entity","definition");
x.t("entity","user.etx");
x.t("entity","include");
x.t("entity","builder");
x.t("entity","information");
x.t("entity","created");
x.t("entity","builders");
x.t("either","following");
x.t("following","example");
x.t("following","extend");
x.t("following","add");
x.t("following","simple");
x.t("following","parameters");
x.t("following","sets");
x.t("following","array");
x.t("following","syntax");
x.t("following","xml");
x.t("following","task");
x.t("following","code");
x.t("following","extending");
x.t("following","mypersonbuilder");
x.t("databuilder","statement");
x.t("databuilder","group");
x.t("databuilder","extcredential");
x.t("databuilder","requires");
x.t("databuilder","builderentity");
x.t("databuilder","classes");
x.t("databuilder","package");
x.t("databuilder","class");
x.t("used","subobjects");
x.t("anonymous","beanpopulator");
x.t("anonymous","subclass");
x.t("system","typecodes");
x.t("system","column");
x.t("transaction.runwithnewbundle","bundle");
x.t("run","multiple");
x.t("run","test");
x.t("run","extcredentialbuildertest");
x.t("starts","test");
x.t("using","gunit");
x.t("using","databuilder.set");
x.t("using","entity");
x.t("class","example");
x.t("class","defines");
x.t("class","create");
x.t("class","uses");
x.t("class","extend");
x.t("class","variants");
x.t("class","however");
x.t("class","automatically");
x.t("class","mynewbuilder");
x.t("class","gw.api.databuilder.databuilder");
x.t("class","add");
x.t("class","gw.api.databuilder");
x.t("class","test");
x.t("class","creating");
x.t("class","custom");
x.t("class","extcredentialbuildertest");
x.t("class","gunit");
x.t("class","place");
x.t("class","next");
x.t("class","finally");
x.t("class","first");
x.t("class","return");
x.t("class","extending");
x.t("class","variable");
x.t("class","existing");
x.t("class","discussion");
x.t("class","builder");
x.t("class","extends");
x.t("class","withdefaultofficialid");
x.t("class","takes");
x.t("class","exercise");
x.t("class","probably");
x.t("class","extcredentialbuilder");
x.t("class","defined");
x.t("class","myextendedbuilder");
x.t("class","two");
x.t("class","mypersonbuilder");
x.t("class","package");
x.t("class","following");
x.t("class","databuilder");
x.t("class","setting");
x.t("class","adding");
x.t("class","contains");
x.t("onaccount","account");
x.t("typelist","within");
x.t("typelist","add");
x.t("typelist","editor");
x.t("typelist","typelist");
x.t("entity=","extcredential");
x.t("setting","buildertype");
x.t("carrots","notice");
x.t("carrots",".create");
x.t("passwords","match");
x.t("person\u2019s","middle");
x.t("gw.api.databuilder.populator.beanpopulator","pass");
x.t("pass","databuilder.addpopulator");
x.t("pass","builder");
x.t("returns","bean");
x.t("password","string");
x.t("password","return");
x.t("password","type=");
x.t("password","password");
x.t("accomplish","need");
x.t("adding","withxxx");
x.t("exportable=","false");
x.t("exportable=","true");
x.t("across","multiple");
x.t("instantiates","test");
x.t("names","person");
x.t("names","match");
x.t("modify","user");
x.t("modify","array");
x.t("maintains","single");
x.t("therefore","preserve");
x.t("var","text_val=eval");
x.t("var","credential");
x.t("withfirstname","joe");
x.t("commit","built");
x.t("including","assertxxx");
x.t("builders","create");
x.t("builders","beans");
x.t("builders","need");
x.t("builders","creating");
x.t("builders","claimcenter");
x.t("builders","function");
x.t("builders","call");
x.t("builders","either");
x.t("affected","files");
x.t("contains","single");
x.t("contains","methods");
x.t("super","true");
x.t("super","(extcredential)");
x.t("super","class");
x.t("object","passed");
x.t("object","e.customgroupset");
x.t("object","claimcenter");
x.t("object","added");
x.t("object","databuilder");
x.t("generally","recommends");
x.t("tester","displays");
}
