function FileData_Pairs(x)
{
x.t("passed-in","owner");
x.t("example","package");
x.t("example","au");
x.t("hidden","fields");
x.t("jurisdictionstate","locationcode");
x.t("localization","localizing");
x.t("parameter","addressinputset");
x.t("countryaddressobject","create");
x.t("construct","super");
x.t("method","object");
x.t("possible","country");
x.t("properties","consult");
x.t("owner","object");
x.t("no_fields","non_address_fields");
x.t("create","new");
x.t("create","gosu");
x.t("create","class");
x.t("studio","gw.address.ccaddressownerfieldid");
x.t("gw.address.ccaddressownerfieldid","address_name");
x.t("addresstype","city");
x.t("description","jurisdictionstate");
x.t("gb","standard");
x.t("gb","subclass");
x.t("gw.api.address.countryaddressfields","class");
x.t("required","hidden");
x.t("arguments","example");
x.t("formatting","country-specific");
x.t("user","input");
x.t("search_hidden_fields","state");
x.t("uses","gw.api.address.countryaddressfields");
x.t("locationcode","no_fields");
x.t("text_val.select","link");
x.t("working","addresses");
x.t("provided","super");
x.t("state","validuntil");
x.t("state","class");
x.t("interface","definition");
x.t("altering","values");
x.t("time","time");
x.t("time","shared");
x.t("calls","method");
x.t("calls","forcountry");
x.t("guidewire","studio");
x.t("guidewire","provides");
x.t("require","user");
x.t("link","directly");
x.t("addressinputset","object");
x.t("single","time");
x.t("single","countryaddressfields");
x.t("new","class");
x.t("details","meaning");
x.t("access","interface");
x.t("forcountry","retrieve");
x.t("messsage","claimcenter");
x.t("xx","country");
x.t("need","instantiate");
x.t("file","guidewire");
x.t("add","country-specific");
x.t("add","alter");
x.t("guide","configuring");
x.t("simple","configuration");
x.t("simple","global");
x.t("configuring","localization");
x.t("country-specific","countryaddressobject");
x.t("country-specific","basis");
x.t("country-specific","countryaddressfields");
x.t("country-specific","changes");
x.t("country-specific","global");
x.t("directly","page");
x.t("defaults","already");
x.t("text_val.focus","text_val.select");
x.t("no","arguments");
x.t("countryaddressfields_gb","extends");
x.t("definition","file");
x.t("addresses","countryaddressfields");
x.t("addresses","ccaddressownerfieldid");
x.t("constructor","takes");
x.t("gosu","expression");
x.t("gosu","class");
x.t("base","configuration");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","single");
x.t("provides","gw.api.address.ccaddressownerfieldid");
x.t("provides","following");
x.t("useful","working");
x.t("methods","provided");
x.t("constants","details");
x.t("constants","ccaddressownerfieldid");
x.t("standard","country");
x.t("address","formatting");
x.t("address","fields");
x.t("basis","using");
x.t("county","description");
x.t("claimcenter","configuration");
x.t("claimcenter","screen");
x.t("fields","require");
x.t("fields","particular");
x.t("fields","following");
x.t("fields","visible");
x.t("gw.api.address.countryfields","uses");
x.t("gw.api.address.countryfields","extends");
x.t("(claim)","code");
x.t("input","ccaddressownerfieldid");
x.t("countryaddressfields","construct");
x.t("countryaddressfields","need");
x.t("countryaddressfields","base");
x.t("countryaddressfields","ccaddressownerfiledid");
x.t("countryaddressfields","classes");
x.t("countryaddressfields","subclass");
x.t("countryaddressfields","following");
x.t("countryaddressfields","class");
x.t("countryaddressfields","object");
x.t("error","occurred");
x.t("addressline_1","addressline_2");
x.t("addressline_2","addressline_3");
x.t("countryaddressfields_xx","case");
x.t("addressline_3","addresstype");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("enough","countries");
x.t("retrieve","required");
x.t("retrieve","countryaddressfields");
x.t("comments","ccaddresownerfieldid");
x.t("particular","context");
x.t("particular","ccaddressowner");
x.t("particular","country");
x.t("ccaddressownerfieldid","guidewire");
x.t("ccaddressownerfieldid","add");
x.t("ccaddressownerfieldid","countryaddressfields");
x.t("ccaddressownerfieldid","class");
x.t("ways","country-specific");
x.t("changes","altering");
x.t("changes","adding");
x.t("address_name","addressline_1");
x.t("non_address_fields","postalcode");
x.t("code","example");
x.t("code","calls");
x.t("code","countryaddressfields");
x.t("override","country-specific");
x.t("override","methods");
x.t("instantiate","subclass");
x.t("return","constant");
x.t("consult","comments");
x.t("(country)",".getclaimfilerequiredfields");
x.t("validuntil_addresstype_hidden","wc_hidden_fields");
x.t("occurred","messsage");
x.t("configuration","guidewire");
x.t("configuration","add");
x.t("configuration","guide");
x.t("alter","particular");
x.t("gw.api.address.ccaddressownerfieldid","class");
x.t("usage","countryaddressfields");
x.t("similar","following");
x.t("ccaddresownerfieldid","gosu");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","class");
x.t("constant","values");
x.t("extends","countryaddressfields");
x.t("convention","subclass");
x.t("localizing","addresses");
x.t("ccaddressownerfiledid","general");
x.t("takes","no");
x.t("expression","similar");
x.t("screen","fields");
x.t("page","error");
x.t("context","country");
x.t("configure","address");
x.t("mutable","state");
x.t("postalcode","postalcode_required");
x.t("shared","create");
x.t("meaning","properties");
x.t("values","constants");
x.t("values","general");
x.t("countries","simple");
x.t("case","xx");
x.t(".getclaimfilerequiredfields","(claim)");
x.t("global","defaults");
x.t("global","changes");
x.t("city","city_state_required");
x.t("classes","base");
x.t("classes","useful");
x.t("classes","function");
x.t("classes","ccaddressownerfieldid");
x.t("countryaddressfields.forcountry","(country)");
x.t("ccaddressowner","object");
x.t("itself","access");
x.t("package","gw.api.address.countryfields");
x.t("subclass","single");
x.t("subclass","constructor");
x.t("subclass","countryaddressfields_xx");
x.t("subclass","override");
x.t("country","calls");
x.t("country","county");
x.t("country","fields");
x.t("country","code");
x.t("country","country");
x.t("country","class");
x.t("validuntil","validuntil_addresstype_hidden");
x.t("following","constants");
x.t("following","ways");
x.t("following","classes");
x.t("following","countryaddressfields.forcountry");
x.t("following","naming");
x.t("city_state_required","country");
x.t("general","enough");
x.t("general","usage");
x.t("general","configure");
x.t("class","possible");
x.t("class","create");
x.t("class","countryaddressfields_gb");
x.t("class","countryaddressfields");
x.t("class","ccaddressownerfieldid");
x.t("class","return");
x.t("class","configure");
x.t("class","itself");
x.t("class","package");
x.t("class","general");
x.t("class","contains");
x.t("au","gb");
x.t("using","class");
x.t("adding","country-specific");
x.t("pass","parameter");
x.t("var","text_val=eval");
x.t("naming","convention");
x.t("visible","claimcenter");
x.t("postalcode_required","search_hidden_fields");
x.t("object","passed-in");
x.t("object","simple");
x.t("object","retrieve");
x.t("object","particular");
x.t("object","override");
x.t("object","pass");
x.t("super","gb");
x.t("super","class");
x.t("contains","mutable");
x.t("contains","following");
}
