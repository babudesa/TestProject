function FileData_Pairs(x)
{
x.t("example","exposure.vehicleincident");
x.t("example","claim.incidents");
x.t("example","vehicleincidentsonly");
x.t("example","exposure.mobilepropertyincident");
x.t("looks","best");
x.t("looks","existing");
x.t("claimcontactrole","getnonexclusiveroles");
x.t("incidents","incidents");
x.t("incidents","claim");
x.t("incidents","usually");
x.t("incidents","typelists");
x.t("incidents","array");
x.t("incidents","exposure");
x.t("incidents","domain");
x.t("incidents","particular");
x.t("incidents","subtypes");
x.t("incidents","injuryincident");
x.t("incidents","previous");
x.t("incidents","advisable");
x.t("incidents","easier");
x.t("incidents","actually");
x.t("incidents","show");
x.t("incidents","data");
x.t("incidents","real");
x.t("incidents","exposure's");
x.t("incidents","filtered");
x.t("properties","access");
x.t("properties","previously");
x.t("properties","caveats");
x.t("properties","deprecated");
x.t("properties","incident");
x.t("properties","work");
x.t("properties","following");
x.t("provide","methods");
x.t("provide","backwards");
x.t("exist","hold");
x.t("@param","contact");
x.t("method","entities");
x.t("method","used");
x.t("library","method");
x.t("claim","incidents");
x.t("claim","claim");
x.t("claim","contact");
x.t("claim","kinds");
x.t("claim","no");
x.t("claim","provides");
x.t("claim","exposure");
x.t("claim","incidenttype");
x.t("claim","@return");
x.t("claim","return");
x.t("claim","incident");
x.t("claim","exposure's");
x.t("claim","@scriptable-all");
x.t("role","objects");
x.t("files","old");
x.t("files","incident");
x.t("intended","user");
x.t("preferred","incident");
x.t("description","field");
x.t("description","string");
x.t("description","actually");
x.t("description","created");
x.t("newincident","looks");
x.t("contact","role");
x.t("contact","contact");
x.t("contact","possibly");
x.t("contact","isusedbyexposure");
x.t("contact","used");
x.t("contact","roles");
x.t("@scriptable-ui","public");
x.t("getsuitablenonexclusiverolesfor","contact");
x.t("getsuitablenonexclusiverolesfor","methods");
x.t("incident-related","method");
x.t("create","new");
x.t("matter","type");
x.t("matter","exposure");
x.t("kinds","incidents");
x.t("exposure.description","aim");
x.t("exposure.description","whatever");
x.t("exposure.description","causes");
x.t("required","port");
x.t("always","override");
x.t("related","incidents");
x.t("related","particular");
x.t("compensabilitydecision","compensabilitydecision");
x.t("compensabilitydecision","compensabilitydecisiondate");
x.t("few","methods");
x.t("contactrole","getsuitablenonexclusiverolesfor");
x.t("user","always");
x.t("user","interface");
x.t("user","suitable");
x.t("vehicledamage","exposure");
x.t("creates","suitable");
x.t("contacts","roles");
x.t("injurytype","detailedinjurytype");
x.t("field","directly");
x.t("field","issue");
x.t("field","read");
x.t("pair","incident");
x.t("handled","simple");
x.t("text_val.select","link");
x.t("working","incidents");
x.t("interface","files");
x.t("interface","code");
x.t("interface","represent");
x.t("type","example");
x.t("type","incidents");
x.t("type","description");
x.t("type","exposure.vehicleincident");
x.t("type","claim.incidents");
x.t("type","arrays");
x.t("type","exposure.exposuretype");
x.t("type","exposures");
x.t("type","allowing");
x.t("type","vehicleincident");
x.t("type","safe");
x.t("type","given");
x.t("type","claim.incidentsonly");
x.t("type","incident");
x.t("type","returns");
x.t("type","injury-related");
x.t("type","without");
x.t("best","match");
x.t("time","exception");
x.t("public","claimcontactrole");
x.t("public","contactrole");
x.t("public","boolean");
x.t("public","incident");
x.t("detailedinjurytype","detailedinjurytype");
x.t("detailedinjurytype","medicaltreatmenttype");
x.t("medicaltreatrmenttype","lostwages");
x.t("erties","methods");
x.t("form","incidenttype");
x.t("mobile","property");
x.t("however","fails");
x.t("however","backwards");
x.t("initializeincident","library");
x.t("guidewire","claimcenter");
x.t("prop","erties");
x.t("entities","working");
x.t("entities","typelists");
x.t("entities","bodypartsdetails");
x.t("typesafe","access");
x.t("property","part");
x.t("property","supertype");
x.t("property","policy");
x.t("property","incident");
x.t("property","associated");
x.t("injury","incidents");
x.t("link","directly");
x.t("access","incidents");
x.t("access","exposure.description");
x.t("access","incident");
x.t("new","contact/role");
x.t("new","exposure");
x.t("new","coverage");
x.t("new","vehicleincident");
x.t("new","incident");
x.t("getting","syntax");
x.t("objects","possibly");
x.t("usually","interested");
x.t("exposure.vehicleincident","returns");
x.t("bodyparttype","detailedbodypart");
x.t("messsage","claimcenter");
x.t("list","claim");
x.t("list","view");
x.t("guide","guidewire");
x.t("normally","write");
x.t("ui","initial");
x.t("ui","restrict");
x.t("remove","incident");
x.t("simple","picker");
x.t("compensabilitycomment","string");
x.t("configuring","incidents");
x.t("throws","exception");
x.t("aim","keeping");
x.t("fails","runtime");
x.t("false","otherwise");
x.t("directly","exposure");
x.t("directly","page");
x.t("propertydamage","exposure");
x.t("pre-filled","new");
x.t("relates","particular");
x.t("relates","vehicle");
x.t("true","incident");
x.t("exclusive","contact");
x.t("exclusive","roles");
x.t("text_val.focus","text_val.select");
x.t("no","matter");
x.t("no","suitable");
x.t("no","incident");
x.t("exposure.incident.description","whatever");
x.t("creating","new");
x.t("creating","selecting");
x.t("suitable","incidents");
x.t("suitable","incident's");
x.t("suitable","choices");
x.t("suitable","incident");
x.t("suitable","roles");
x.t("possibly","empty");
x.t("possibly","null");
x.t("contact/role","pair");
x.t("typelists","related");
x.t("typelists","injury");
x.t("gosu","incidents");
x.t("gosu","prop");
x.t("gosu","work");
x.t("typed","vehicleincidentsonly");
x.t("previously","description");
x.t("incidentsonly","fixedpropertyincidentsonly");
x.t("old","exposure");
x.t("old","reference");
x.t("part","policy");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","creating");
x.t("methods","useful");
x.t("methods","exposed");
x.t("methods","mainly");
x.t("methods","adding");
x.t("provides","special");
x.t("(exposure)","exposure.incident");
x.t("(exposure)","var");
x.t("exists","exposure");
x.t("boolean","isusedbyexposure");
x.t("boolean","impairment");
x.t("none","@scriptable-ui");
x.t("useful","constructing");
x.t("findorcreateincident","method");
x.t("claim.incidents","claim.incidentsonly");
x.t("claim.incidents","implicit");
x.t("claim.incidents","returns");
x.t("up","user");
x.t("supertype","vehicleincident");
x.t("supertype","actual");
x.t("arrays","access");
x.t("arrays","typed");
x.t("arrays","claim.incidents");
x.t("arrays","exposure");
x.t("arrays","dealing");
x.t("arrays","read-only");
x.t("arrays","names");
x.t("exposure.exposuretype","generaldamage");
x.t("fine","exposure.mobilepropertyincident");
x.t("exposures","provide");
x.t("exposures","exposure");
x.t("exposures","particular");
x.t("bodypartsdetails","entities");
x.t("bodypartsdetails","entity");
x.t("claimcenter","configuration");
x.t("exposure","properties");
x.t("exposure","claim");
x.t("exposure","creates");
x.t("exposure","user");
x.t("exposure","type");
x.t("exposure","new");
x.t("exposure","ui");
x.t("exposure","false");
x.t("exposure","relates");
x.t("exposure","methods");
x.t("exposure","exposure");
x.t("exposure","accessor");
x.t("exposure","write");
x.t("exposure","sets");
x.t("exposure","types");
x.t("exposure","level");
x.t("exposure","vehicle");
x.t("exposure","@return");
x.t("exposure","null");
x.t("exposure","specific");
x.t("exposure","mobilepropertyincident");
x.t("exposure","incident");
x.t("exposure","created");
x.t("exposure","without");
x.t("exposure","reading");
x.t("array","suitable");
x.t("array","none");
x.t("array","bodypartsdetails");
x.t("array","contains");
x.t("accessor","incident");
x.t("accessor","returns");
x.t("fields","vehicledamage");
x.t("fields","exposures");
x.t("fields","given");
x.t("fields","primarybodypart");
x.t("write","exposure.description");
x.t("write","exposure.incident.description");
x.t("sets","incident's");
x.t("empty","array");
x.t("empty","null");
x.t("string","generalinjurytype");
x.t("incident's","claim");
x.t("incident's","type");
x.t("coverage","incident-related");
x.t("coverage","related");
x.t("coverage","relates");
x.t("coverage","coverage");
x.t("ones","subtypes");
x.t("allowing","typesafe");
x.t("error","however");
x.t("error","occurred");
x.t("vehicleincident","property");
x.t("vehicleincident","access");
x.t("vehicleincident","new");
x.t("vehicleincident","(exposure)");
x.t("vehicleincident","used");
x.t("vehicleincident","//");
x.t("backwards","compatibility");
x.t("whatever","description");
x.t("whatever","however");
x.t("choices","adding");
x.t("vehicleincidentsonly","type");
x.t("vehicleincidentsonly","incidentsonly");
x.t("hold","data");
x.t("exposure.vehicleincident.driverrelation","self");
x.t("keeping","old");
x.t("syntax","error");
x.t("domain","level");
x.t("exposed","claim");
x.t("incidenttype","sonly");
x.t("button","incident");
x.t("fixed","property");
x.t("guidewire_selectall","var");
x.t("underlying","incident");
x.t("findbestincidentfornewexposure","mainly");
x.t("datetime","compensabilitycomment");
x.t("function","guidewire_selectall");
x.t("casts","return");
x.t("better","match");
x.t("particular","type");
x.t("particular","vehicle");
x.t("subtypes","example");
x.t("subtypes","named");
x.t("subtypes","incident");
x.t("subtypes","visible");
x.t("different","arrays");
x.t("safe","incident");
x.t("lives","exposure's");
x.t("injuryincident","subtype");
x.t("injuryincident","contains");
x.t("reduce","work");
x.t("types","properties");
x.t("types","exposuretype");
x.t("section","claiminjuryincident");
x.t("match","exposure");
x.t("match","already");
x.t("pcf","files");
x.t("self","type");
x.t("initial","guess");
x.t("reference","reduce");
x.t("caveats","backwards");
x.t("guess","incident");
x.t("code","new");
x.t("level","gosu");
x.t("level","exposure.vehicle");
x.t("fixedpropertyincidentsonly","arrays");
x.t("return","incidents");
x.t("return","null");
x.t("return","non-exclusive");
x.t("return","non");
x.t("dealing","incidents");
x.t("vehicle","field");
x.t("vehicle","property");
x.t("vehicle","fixed");
x.t("@return","new");
x.t("@return","list");
x.t("@return","true");
x.t("@return","array");
x.t("@return","incident");
x.t("override","incident");
x.t("restrict","user");
x.t("sonly","example");
x.t("sonly","arrays");
x.t("previous","section");
x.t("exact","type");
x.t("generaldamage","var");
x.t("issue","careful");
x.t("least","exposure");
x.t("given","contact");
x.t("given","type");
x.t("actual","incident");
x.t("occurred","messsage");
x.t("advisable","claim");
x.t("null","@scriptable-ui");
x.t("null","no");
x.t("null","underlying");
x.t("null","@return");
x.t("null","bodilyinjurydamage");
x.t("null","exposure's");
x.t("null","@scriptable-all");
x.t("exposure.incident","vehicleincident");
x.t("rules","user");
x.t("existing","incidents");
x.t("constructing","list");
x.t("compensabilitydecisiondate","datetime");
x.t("configuration","guide");
x.t("configuration","configuring");
x.t("exposure.mobilepropertyincident","vehicleincident");
x.t("exposure.mobilepropertyincident","used");
x.t("easier","claim");
x.t("named","type");
x.t("medicaltreatmenttype","medicaltreatrmenttype");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("compatibility","properties");
x.t("compatibility","incident");
x.t("holds","description");
x.t("selecting","incidents");
x.t("already","exposure");
x.t("specific","coverage");
x.t("claim.incidentsonly","different");
x.t("claim.incidentsonly","returns");
x.t("actually","type");
x.t("actually","exists");
x.t("actually","lives");
x.t("actually","holds");
x.t("mobilepropertyincident","supertype");
x.t("exception","exposures");
x.t("exception","incident");
x.t("isusedbyexposure","method");
x.t("isusedbyexposure","return");
x.t("view","adding");
x.t("represent","incidents");
x.t("read","mobile");
x.t("read","exposure.vehicle");
x.t("subtype","preferred");
x.t("page","error");
x.t("show","up");
x.t("generalinjurytype","injurytype");
x.t("data","exposure");
x.t("data","model");
x.t("attached","claim");
x.t("impairment","percentage");
x.t("read-only","provide");
x.t("removing","incidents");
x.t("interested","incidents");
x.t("appropriate","fields");
x.t("detailedbodyparttype","compensabilitydecision");
x.t("runtime","underlying");
x.t("policy","@return");
x.t("policy","attached");
x.t("non-exclusive","claim");
x.t("disable","remove");
x.t("claiminjuryincident","incidents");
x.t("port","rules");
x.t("deprecated","backwards");
x.t("exposuretype","typelist");
x.t("incident","looks");
x.t("incident","properties");
x.t("incident","@param");
x.t("incident","newincident");
x.t("incident","create");
x.t("incident","few");
x.t("incident","type");
x.t("incident","entities");
x.t("incident","new");
x.t("incident","normally");
x.t("incident","propertydamage");
x.t("incident","pre-filled");
x.t("incident","exclusive");
x.t("incident","no");
x.t("incident","(exposure)");
x.t("incident","findorcreateincident");
x.t("incident","arrays");
x.t("incident","accessor");
x.t("incident","fields");
x.t("incident","exposure");
x.t("incident","ones");
x.t("incident","button");
x.t("incident","findbestincidentfornewexposure");
x.t("incident","better");
x.t("incident","subtypes");
x.t("incident","types");
x.t("incident","vehicle");
x.t("incident","@return");
x.t("incident","exact");
x.t("incident","named");
x.t("incident","actually");
x.t("incident","incident");
x.t("incident","used");
x.t("incident","setting");
x.t("incident","@scriptable-all");
x.t("incident","getnonexclusiveroles");
x.t("otherwise","@scriptable-all");
x.t("percentage","bodyparts");
x.t("work","required");
x.t("work","incident");
x.t("implicit","incidents");
x.t("bodilyinjurydamage","exposure");
x.t("non","exclusive");
x.t("real","world");
x.t("created","incident");
x.t("created","without");
x.t("causes","run");
x.t("model","incidents");
x.t("model","gosu");
x.t("model","function");
x.t("following","gosu");
x.t("following","fields");
x.t("special","arrays");
x.t("used","initializeincident");
x.t("used","ui");
x.t("used","creating");
x.t("used","exposure");
x.t("used","exposure.vehicleincident.driverrelation");
x.t("used","pcf");
x.t("used","least");
x.t("used","read");
x.t("used","disable");
x.t("exposure's","claim");
x.t("exposure's","incident");
x.t("run","time");
x.t("exposure.vehicle","propertydamage");
x.t("exposure.vehicle","no");
x.t("entity","contains");
x.t("detailedbodypart","detailedbodyparttype");
x.t("//","throws");
x.t("//","fine");
x.t("setting","exposure.description");
x.t("setting","appropriate");
x.t("mainly","intended");
x.t("mainly","used");
x.t("typelist","injuryincident");
x.t("returns","incidents");
x.t("returns","vehicleincident");
x.t("returns","null");
x.t("adding","contacts");
x.t("adding","new");
x.t("adding","removing");
x.t("@scriptable-all","public");
x.t("injury-related","exposure");
x.t("names","form");
x.t("without","getting");
x.t("without","casts");
x.t("without","incident");
x.t("world","exist");
x.t("getnonexclusiveroles","getsuitablenonexclusiverolesfor");
x.t("getnonexclusiveroles","return");
x.t("associated","vehicle");
x.t("bodyparts","array");
x.t("var","text_val=eval");
x.t("var","vehicleincident");
x.t("var","incident");
x.t("roles","handled");
x.t("roles","suitable");
x.t("roles","empty");
x.t("roles","incident");
x.t("lostwages","boolean");
x.t("primarybodypart","bodyparttype");
x.t("reading","property");
x.t("visible","exposure");
x.t("careful","setting");
x.t("picker","coverage");
x.t("contains","incidents");
x.t("contains","following");
x.t("filtered","claim");
}
