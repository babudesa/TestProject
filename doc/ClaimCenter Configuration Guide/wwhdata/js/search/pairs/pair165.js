function FileData_Pairs(x)
{
x.t(".eti","within");
x.t(".eti","extension");
x.t(".eti","file");
x.t("extensions","extensions");
x.t("extensions","folder");
x.t("example","xml");
x.t("tag","add");
x.t("referencing","entity");
x.t("possible","xml");
x.t("files","end");
x.t("within","file");
x.t("studio","studio");
x.t("studio","automatically");
x.t("studio","navigate");
x.t("studio","name");
x.t("create","new");
x.t("create","file");
x.t("nonpersistent","entity");
x.t("field","referencing");
x.t("field","simple");
x.t("field","typelist");
x.t("text_val.select","link");
x.t("extension","studio");
x.t("extension","extension");
x.t("extension","guidewire");
x.t("extension","data");
x.t("deploy","changes");
x.t("type","foreignkey");
x.t("change","guidewire");
x.t("guidewire","studio");
x.t("guidewire","claimcenter");
x.t("automatically","manages");
x.t("entities","column");
x.t("new","file");
x.t("new","data");
x.t("new","entity");
x.t("link","directly");
x.t("objects","extension");
x.t("objects","add");
x.t("objects","nonpersistententity");
x.t("objects","delegate");
x.t("objects","viewentity");
x.t("objects","viewentityextension");
x.t("objects","declaration");
x.t("objects","subtype");
x.t("objects","entity");
x.t("messsage","claimcenter");
x.t("file","extension");
x.t("file","name");
x.t("file","right-click");
x.t("file","correct");
x.t("file","entity");
x.t("file","following");
x.t("menu","enter");
x.t("add","new");
x.t("add","fields");
x.t("add","array");
x.t("guide","data");
x.t("simple","data");
x.t("navigate","data");
x.t("deploying","data");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("name","file");
x.t("name","adding");
x.t("definition","deploy");
x.t("base","data");
x.t("component","component");
x.t("component","data");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("modifying","base");
x.t("claimcenter","configuration");
x.t("claimcenter","data");
x.t("fields","new");
x.t("array","entities");
x.t("array","array");
x.t("defining","new");
x.t("nonpersistententity","nonpersistent");
x.t("error","occurred");
x.t("delegate","delegate");
x.t("delegate","data");
x.t("select","new");
x.t("viewentity","view");
x.t("redeploy","application");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("define","new");
x.t("define","entity");
x.t("stores",".eti");
x.t("xml","tag");
x.t("xml","tags");
x.t("xml","elements");
x.t("changes","application");
x.t("end",".eti");
x.t("typekey","field");
x.t("folder","create");
x.t("folder","select");
x.t("viewentityextension","view");
x.t("enter","file");
x.t("occurred","messsage");
x.t("configuration","guide");
x.t("configuration","modifying");
x.t("right-click","menu");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("declaration","files");
x.t("process","stores");
x.t("view","entity");
x.t("manages","process");
x.t("subtype","subtype");
x.t("subtype","data");
x.t("page","error");
x.t("location","application");
x.t("data","type");
x.t("data","objects");
x.t("data","entity");
x.t("data","model");
x.t("data","object");
x.t("correct","location");
x.t("information","possible");
x.t("tags","define");
x.t("foreignkey","field");
x.t("application","change");
x.t("application","data");
x.t("application","server");
x.t("column","field");
x.t("entity",".eti");
x.t("entity","example");
x.t("entity","create");
x.t("entity","studio");
x.t("entity","extension");
x.t("entity","objects");
x.t("entity","definition");
x.t("entity","component");
x.t("entity","defining");
x.t("entity","function");
x.t("entity","define");
x.t("entity","typekey");
x.t("entity","data");
x.t("entity","entity");
x.t("model","extensions");
x.t("model","deploying");
x.t("model","defining");
x.t("model","changes");
x.t("model","configuration");
x.t("following","xml");
x.t("elements","add");
x.t("typelist","data");
x.t("adding",".eti");
x.t("var","text_val=eval");
x.t("object","subelements");
x.t("subelements","information");
x.t("server","details");
x.t("server","redeploy");
}
