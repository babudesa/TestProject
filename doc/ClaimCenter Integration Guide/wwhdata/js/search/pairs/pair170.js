function FileData_Pairs(x)
{
x.t("example","earlier");
x.t("example","auto");
x.t("example","include");
x.t("example","burglaryreport.gs");
x.t("tag","names");
x.t("template\u2019s","header");
x.t("looks","mrb:insured");
x.t("clock","format");
x.t("particularly","useful");
x.t("properties","certain");
x.t("properties","new");
x.t("properties","xml");
x.t("latest","version");
x.t("notes","claims");
x.t("available","add");
x.t("available","runtime");
x.t("formatted","correct");
x.t("version","metropolitan");
x.t("formatcustdate","format");
x.t("claim","insured");
x.t("claim","worker\u2019s");
x.t("claim","adding");
x.t("files","available");
x.t("files","customize");
x.t("files","report");
x.t("files","described");
x.t("files","mapping");
x.t("within","report");
x.t("within","directory");
x.t("integration","create");
x.t("integration","guide");
x.t("integration","libraries");
x.t("integration","metropolitan");
x.t("coroner","report");
x.t("business","(lob)");
x.t("create","report");
x.t("required","properties");
x.t("required","time");
x.t("required","data");
x.t("required","metropolitan");
x.t("translators","format");
x.t("10","digits");
x.t("/mrb:last","mrb:first");
x.t("user","interface");
x.t("line","business");
x.t("later","date");
x.t("last","name");
x.t("text_val.select","link");
x.t("necessary","xml-formatted");
x.t("support","changes");
x.t("/type","template");
x.t("interface","automatically");
x.t("type","coroner");
x.t("type","/type");
x.t("type","add");
x.t("type","specified");
x.t("type","claimcenter");
x.t("type","report");
x.t("type","regenerate");
x.t("type","generate");
x.t("type","save");
x.t("type","correctly");
x.t("type","mapping");
x.t("change","template\u2019s");
x.t("change","header");
x.t("change","mapping");
x.t("sample","report");
x.t("mrb:zip","=translator.formatnulltoemptystring");
x.t("time","auto");
x.t("time","hhmm");
x.t("time","format");
x.t("/report","specific");
x.t("mappings","files");
x.t("auto-configured","correspond");
x.t("editing","gosu");
x.t("inside","worker\u2019s");
x.t("text","file");
x.t("text","metroreporttypes");
x.t("assumes","time");
x.t("property","no");
x.t("automatically","removes");
x.t("removes","unsupported");
x.t("link","directly");
x.t("(lob)","change");
x.t("certain","report");
x.t("translate","null");
x.t("metroreporttemplatemapping.xml","add");
x.t("metroreporttemplatemapping.xml","gosu");
x.t("element","maps");
x.t("new","type");
x.t("new","mappings");
x.t("new","report");
x.t("new","metropolitan");
x.t("includes","templates");
x.t("footer","sample");
x.t("footer","warning");
x.t("document","consequently");
x.t("rebuild","redeploy");
x.t("messsage","claimcenter");
x.t("file","metroreporttemplatemapping.xml");
x.t("file","new");
x.t("file","report");
x.t("file","embedded");
x.t("file","metroreporttype.xml");
x.t("file","names");
x.t("need","customize");
x.t("burglary","report");
x.t("/mrb:phone","/mrb:insured");
x.t("https://metroweb.metroreporting.com/schema/index.php","metropolitan");
x.t("/mrb:address1","mrb:address2");
x.t("unsupported","report");
x.t("add","new");
x.t("add","mapping");
x.t("guide","metropolitan");
x.t("/mrb:address2","mrb:city");
x.t("check","required");
x.t("api","files");
x.t("api","soap");
x.t("url","https://metroweb.metroreporting.com/schema/index.php");
x.t("=claim.insured.person.firstname","/mrb:first");
x.t("spaces","characters");
x.t("soap","api");
x.t("directly","page");
x.t("requirements","constraints");
x.t("requirements","gosu");
x.t("constraints","report");
x.t("specified","xml");
x.t("specified","adjuster");
x.t("specified","driver");
x.t("mrb:state","=translator.formatnulltoemptystring");
x.t(".gs","following");
x.t("puts","claimant\u2019s");
x.t("puts","company's");
x.t("puts","parked");
x.t("requires","reports");
x.t("claimcenter/modules/configuration/config/web/templates/metroreport/","modify");
x.t("text_val.focus","text_val.select");
x.t("stored","within");
x.t("hours","clock");
x.t("name","within");
x.t("name","last");
x.t("no","direct");
x.t("no","driver");
x.t("claimant\u2019s","information");
x.t("libraries","rebuild");
x.t("gosu","templates");
x.t("gosu","code");
x.t("gosu","template");
x.t("/mrb:first","mrb:middle");
x.t("war","file");
x.t("base","loss");
x.t("pre-update","rules");
x.t("formatcusttime","format");
x.t("metroautoaccidentreport.gs","/template");
x.t("direct","mapping");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","formatcustdate");
x.t("useful","optional");
x.t("standard","loss");
x.t("determine","required");
x.t("company's","information");
x.t("makes","new");
x.t("map","auto");
x.t("(claim.insured.primaryaddress.city)","/mrb:city");
x.t("allows","report");
x.t("strings","report");
x.t("phone","number");
x.t("insured","auto");
x.t("insured","company");
x.t("insured","companies");
x.t("claimcenter","integration");
x.t("claimcenter","line");
x.t("claimcenter","assumes");
x.t("claimcenter","includes");
x.t("claimcenter","puts");
x.t("claimcenter","pre-update");
x.t("claimcenter","report");
x.t("claimcenter","reference");
x.t("claimcenter","runs");
x.t("claimcenter","data");
x.t("claimcenter","metropolitan");
x.t("empty","string");
x.t("string","particularly");
x.t("parked","no");
x.t("parked","driver\u2019s");
x.t("earlier","templates");
x.t("formatphonenumber","format");
x.t("characters","formatnulltoemptystring");
x.t("request","claimcenter");
x.t("request","modify");
x.t("auto","loss");
x.t("auto","accident");
x.t("selected","report");
x.t("(claim.insured.primaryaddress.addressline2)","/mrb:address2");
x.t("error","occurred");
x.t("review","latest");
x.t("(claim.insured.primaryaddress.state)","/mrb:state");
x.t("hhmm","24");
x.t("drivers","auto");
x.t("xml-formatted","text");
x.t("/mrb:insured","example");
x.t("first","name");
x.t("options","claim");
x.t("redeploy","application");
x.t("guidewire_selectall","var");
x.t("number","10");
x.t("function","guidewire_selectall");
x.t("reporting","bureau");
x.t("car","parked");
x.t("templates","translators");
x.t("templates","support");
x.t("templates","change");
x.t("templates","pre-update");
x.t("templates","report");
x.t("templates","template");
x.t("templates","metropolitan");
x.t("templates","mapping");
x.t("templates","following");
x.t("specifies","different");
x.t("specifies","mapping");
x.t("different","report");
x.t("different","data");
x.t("customize","report");
x.t("customize","reports");
x.t("may","need");
x.t("=claim.insured.person.lastname","/mrb:last");
x.t("cannot","generate");
x.t("report","integration");
x.t("report","type");
x.t("report","element");
x.t("report","stored");
x.t("report","gosu");
x.t("report","request");
x.t("report","auto");
x.t("report","options");
x.t("report","templates");
x.t("report","different");
x.t("report","requests");
x.t("report","types");
x.t("report","specific");
x.t("report","template");
x.t("report","maps");
x.t("requests","metropolitan");
x.t("aware","metropolitan");
x.t("mrb:city","=translator.formatnulltoemptystring");
x.t("types","available");
x.t("types","auto-configured");
x.t("types","add");
x.t("types","specified");
x.t("types","gosu");
x.t("types","claimcenter");
x.t("types","review");
x.t("types","function");
x.t("types","different");
x.t("types","report");
x.t("types","metropolitan");
x.t("types","typelist");
x.t("xml","templates");
x.t("xml","format");
x.t("xml","configuration");
x.t("xml","data");
x.t("format","required");
x.t("format","time");
x.t("format","formatcusttime");
x.t("format","phone");
x.t("format","formatphonenumber");
x.t("format","report");
x.t("format","changing");
x.t("format","data");
x.t("format","date");
x.t("loss","type");
x.t("loss","types");
x.t("changes","claimcenter");
x.t("changes","xml");
x.t("directory","claimcenter/modules/configuration/config/web/templates/metroreport/");
x.t("directory","claimcenter/cc/modules/configuration/config/web/templates/metroreport/");
x.t("mrb:phone","=translator.formatphonenumber");
x.t("code","template");
x.t("correspond","standard");
x.t("reference","empty");
x.t("reference","configuration");
x.t("reference","implementation");
x.t("reports","user");
x.t("reports","later");
x.t("reports","map");
x.t("reports","claimcenter");
x.t("reports","worker\u2019s");
x.t("reports","null");
x.t("end",".gs");
x.t("header","footer");
x.t("=translator.formatphonenumber","(claim.insured.primaryphonevalue)");
x.t("embedded","gosu");
x.t("=translator.formatnulltoemptystring","(claim.insured.primaryaddress.city)");
x.t("=translator.formatnulltoemptystring","(claim.insured.primaryaddress.addressline2)");
x.t("=translator.formatnulltoemptystring","(claim.insured.primaryaddress.state)");
x.t("=translator.formatnulltoemptystring","(claim.insured.person.middlename)");
x.t("=translator.formatnulltoemptystring","(claim.insured.primaryaddress.postalcode)");
x.t("=translator.formatnulltoemptystring","(claim.insured.primaryaddress.addressline1)");
x.t("(claim.insured.person.middlename)","/mrb:middle");
x.t("translator","utility");
x.t("worker\u2019s","compensation");
x.t("java","api");
x.t("occurred","messsage");
x.t("accident","report");
x.t("accident","reports");
x.t("accident","happened");
x.t("rules","check");
x.t("rules","determine");
x.t("changing","tag");
x.t("mrb:first","=claim.insured.person.firstname");
x.t("(claim.insured.primaryaddress.postalcode)","/mrb:zip");
x.t("null","claimcenter");
x.t("null","drivers");
x.t("null","object");
x.t("configuration","example");
x.t("configuration","file");
x.t("metroreporttype.xml","specifies");
x.t("metroreporttype.xml","update");
x.t("(claim.insured.primaryphonevalue)","/mrb:phone");
x.t("include","report");
x.t("include","requisite");
x.t("driver\u2019s","first");
x.t("mrb:insured","mrb:last");
x.t("/mrb:zip","mrb:phone");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","gosu");
x.t("specific","report");
x.t("adjuster","editing");
x.t("24","hours");
x.t("implementation","worker\u2019s");
x.t("consequently","worker\u2019s");
x.t("regenerate","java");
x.t("generate","request");
x.t("generate","reports");
x.t("requisite","data");
x.t("regenerating","integration");
x.t("bureau","integration");
x.t("runs","specific");
x.t("template","looks");
x.t("template","notes");
x.t("template","files");
x.t("template","text");
x.t("template","new");
x.t("template","file");
x.t("template","metroautoaccidentreport.gs");
x.t("template","directory");
x.t("template","per");
x.t("template","generates");
x.t("digits","without");
x.t("page","error");
x.t("/mrb:middle","mrb:address1");
x.t("metropolitan","formatted");
x.t("metropolitan","burglary");
x.t("metropolitan","requires");
x.t("metropolitan","makes");
x.t("metropolitan","reporting");
x.t("metropolitan","specifies");
x.t("metropolitan","report");
x.t("metropolitan","changes");
x.t("metropolitan","xml");
x.t("metropolitan","utility");
x.t("metropolitan","specification");
x.t("metropolitan","date");
x.t("correct","xml");
x.t("data","document");
x.t("data","requirements");
x.t("data","selected");
x.t("data","metropolitan");
x.t("data","model");
x.t("data","using");
x.t("mrb:address1","=translator.formatnulltoemptystring");
x.t("mmddyyyy","format");
x.t("optional","properties");
x.t("information","new");
x.t("information","insured");
x.t("information","driver");
x.t("mrb:address2","=translator.formatnulltoemptystring");
x.t("/mrb:city","mrb:state");
x.t("save","template");
x.t("utility","class");
x.t("application","war");
x.t("maps","base");
x.t("maps","metropolitan");
x.t("specification","url");
x.t("formatnulltoemptystring","translate");
x.t("described","regenerating");
x.t("date","format");
x.t("date","metropolitan");
x.t("date","mmddyyyy");
x.t("correctly","specified");
x.t("mrb:last","=claim.insured.person.lastname");
x.t("metroreporttypes","loss");
x.t("mapping","file");
x.t("mapping","claimcenter");
x.t("mapping","aware");
x.t("mapping","report");
x.t("mapping","template");
x.t("mapping","metropolitan");
x.t("mapping","information");
x.t("burglaryreport.gs","template");
x.t("(claim.insured.primaryaddress.addressline1)","/mrb:address1");
x.t("model","may");
x.t("model","metropolitan");
x.t("translates","strings");
x.t("following","example");
x.t("following","methods");
x.t("typelist","metroreporttype.xml");
x.t("warning","modify");
x.t("mrb:middle","=translator.formatnulltoemptystring");
x.t("using","object");
x.t("symbol","translator");
x.t("class","allows");
x.t("class","translates");
x.t("adding","required");
x.t("adding","new");
x.t("per","report");
x.t("company","claimcenter");
x.t("names","end");
x.t("names","adding");
x.t("modify","file");
x.t("modify","templates");
x.t("modify","metropolitan");
x.t("without","spaces");
x.t("driver","inside");
x.t("driver","property");
x.t("driver","null");
x.t("compensation","claim");
x.t("compensation","claimcenter");
x.t("compensation","reports");
x.t("compensation","claims");
x.t("var","text_val=eval");
x.t("claims","insured");
x.t("claims","cannot");
x.t("claims","include");
x.t("happened","car");
x.t("generates","necessary");
x.t("generates","metropolitan");
x.t("claimcenter/cc/modules/configuration/config/web/templates/metroreport/","example");
x.t("/mrb:state","mrb:zip");
x.t("object","reference");
x.t("object","symbol");
x.t("/template","/report");
x.t("companies","claim");
x.t("update","claimcenter");
}
