function FileData_Pairs(x)
{
x.t("tells","claimcenter");
x.t("tells","application");
x.t("example","plugin");
x.t("example","basic");
x.t("example","public");
x.t("example","includes");
x.t("example","demonstrates");
x.t("example","textual");
x.t("example","suppose");
x.t("example","report");
x.t("example","message");
x.t("example","java");
x.t("example","depending");
x.t("example","mark");
x.t("example","call");
x.t("example","following");
x.t("looks","up");
x.t("looks","class");
x.t("root","object");
x.t("complex","proprietary");
x.t("interfaces","called");
x.t("safely","consistently");
x.t("safely","executes");
x.t("supports","entityfactory");
x.t("registers","listener");
x.t("registers","incoming");
x.t("throwable.printstacktrace","//");
x.t("particularly","error-handling");
x.t("rolls","back");
x.t("differently","destination");
x.t("resumes","again");
x.t("method","example");
x.t("method","rather");
x.t("method","visualize");
x.t("method","instance");
x.t("method","ensures");
x.t("method","related");
x.t("method","current");
x.t("method","uses");
x.t("method","change");
x.t("method","aftersend");
x.t("method","however");
x.t("method","passes");
x.t("method","synchronously");
x.t("method","argument");
x.t("method","parameters");
x.t("method","allows");
x.t("method","claimcenter");
x.t("method","acknowledges");
x.t("method","respectively");
x.t("method","beforesend");
x.t("method","may");
x.t("method","stores");
x.t("method","implementing");
x.t("method","messagereply");
x.t("method","completes");
x.t("method","message");
x.t("method","depending");
x.t("method","threw");
x.t("method","generate");
x.t("method","takes");
x.t("method","messaging");
x.t("method","called");
x.t("method","choose");
x.t("method","work");
x.t("method","optionally");
x.t("method","mark");
x.t("method","immediately");
x.t("method","package");
x.t("method","relies");
x.t("method","entity");
x.t("method","even");
x.t("method","generally");
x.t("method","gets");
x.t("properties","within");
x.t("properties","claimcenter");
x.t("properties","_plugincallbackhandler");
x.t("properties","message");
x.t("parameter","transformed");
x.t("parameter","claimcenter");
x.t("parameter","separate");
x.t("parameter","read-only");
x.t("parameter","modify");
x.t("provide","empty");
x.t("construct","function");
x.t("inittools","method");
x.t("transactions","gosu");
x.t("message.reporterror","error");
x.t("message.reporterror","message");
x.t("@param","messageid");
x.t("else","example");
x.t("claim","desire");
x.t("claim","object");
x.t("just","logging");
x.t("just","return");
x.t("rather","modifying");
x.t("receives","reply");
x.t("defines","messagereply");
x.t("defines","messagerequest");
x.t("implement","complex");
x.t("implement","inittools");
x.t("implement","interface");
x.t("implement","initializableplugin");
x.t("implement","trigger");
x.t("implement","methods");
x.t("implement","message");
x.t("implement","send");
x.t("implement","messagerequest");
x.t("implement","asynchronous");
x.t("implement","suspend");
x.t("within","plugin");
x.t("within","message\u2019s");
x.t("within","messagetransport.send");
x.t("within","code");
x.t("within","message");
x.t("setdestinationid","method");
x.t("setdestinationid","(id:int)");
x.t("setdestinationid","int");
x.t("needs","later");
x.t("files","queuesimulator.java");
x.t("nothing","else");
x.t("integration","guide");
x.t("integration","code");
x.t("studio","//");
x.t("studio","var");
x.t("sending","resumes");
x.t("sending","implement");
x.t("sending","destination");
x.t("sending","message");
x.t("visualize","elements");
x.t("refer","directories");
x.t("built-in","object");
x.t("entityreference","call");
x.t("create","find");
x.t("inserts","queue");
x.t("commits","transformed");
x.t("commits","changes");
x.t("replies","implemented");
x.t("replies","changes");
x.t("business","logic");
x.t("myemailhelperclass.sendemail","during");
x.t("events","objects");
x.t("events","implementing");
x.t("name/value","pairs");
x.t("callback","block");
x.t("callback","throws");
x.t("callback","handler");
x.t("callback","code");
x.t("required","plugin");
x.t("required","main");
x.t("instance","plugin");
x.t("instance","supplied");
x.t("instance","recreate");
x.t("instance","messagefinder");
x.t("instance","described");
x.t("instance","plugincallbackhandler.block");
x.t("findbyid","findbysendrefid");
x.t("doing","creates");
x.t("doing","using");
x.t("variables","_messagefinder");
x.t("variables","_plugincallbackhandler");
x.t("bundles","transactions");
x.t("bundles","bundles");
x.t("ensures","changes");
x.t("com.guidewire.pl.plugin.plugincallbackhandler","import");
x.t("always","resend");
x.t("related","beforesend");
x.t("layer","external");
x.t("action","implement");
x.t("action","send");
x.t("message.reportduplicate","skip");
x.t("message.reportduplicate","information");
x.t("void","setdestinationid");
x.t("void","resume");
x.t("void","shutdown");
x.t("void","responsereceived");
x.t("void","setparameters");
x.t("void","run");
x.t("void","suspend");
x.t("listens","acknowledgement");
x.t("listens","messages");
x.t("apply","committing");
x.t("plugin","example");
x.t("plugin","registers");
x.t("plugin","@param");
x.t("plugin","implement");
x.t("plugin","myemailhelperclass.sendemail");
x.t("plugin","required");
x.t("plugin","instance");
x.t("plugin","callback");
x.t("plugin","layer");
x.t("plugin","listens");
x.t("plugin","plugin");
x.t("plugin","uses");
x.t("plugin","interface");
x.t("plugin","explicitly");
x.t("plugin","implementation\u2019s");
x.t("plugin","details");
x.t("plugin","passes");
x.t("plugin","initialization");
x.t("plugin","sure");
x.t("plugin","handle");
x.t("plugin","detects");
x.t("plugin","perform");
x.t("plugin","implementations");
x.t("plugin","find");
x.t("plugin","destination");
x.t("plugin","claimcenter");
x.t("plugin","store");
x.t("plugin","implementing");
x.t("plugin","handling");
x.t("plugin","calling");
x.t("plugin","submitting");
x.t("plugin","prepare");
x.t("plugin","code");
x.t("plugin","completes");
x.t("plugin","message");
x.t("plugin","asynchronously");
x.t("plugin","saving");
x.t("plugin","send");
x.t("plugin","implementation");
x.t("plugin","registry");
x.t("plugin","optional");
x.t("plugin","messagetransport");
x.t("plugin","information");
x.t("plugin","call");
x.t("plugin","following");
x.t("plugin","warning");
x.t("plugin","suspend");
x.t("plugin","gets");
x.t("mytransport","implements");
x.t("reportduplicate","method");
x.t("current","message");
x.t("java.plugin","class");
x.t("senderrefid","using");
x.t("execute","method");
x.t("execute","execute");
x.t("execute","strict");
x.t("posted","queue");
x.t("try","_plugincallbackhandler.execute");
x.t("ephemeral","destination");
x.t("integrations","sending");
x.t("user","interface");
x.t("creates","circular");
x.t("reply","registers");
x.t("reply","callback");
x.t("reply","plugin");
x.t("reply","messages");
x.t("reply","implementing");
x.t("reply","messagereply");
x.t("reply","callbacks");
x.t("reply","either");
x.t("reply","plugin\u2019s");
x.t("line","looks");
x.t("remote","api");
x.t("remote","web");
x.t("remote","destination");
x.t("remote","system");
x.t("implemented","messagereply");
x.t("implemented","message");
x.t("uses","java.plugin");
x.t("uses","text");
x.t("uses","property");
x.t("uses","transformed");
x.t("uses","java.util.map");
x.t("uses","reference");
x.t("later","messagerequest.beforesend");
x.t("later","message\u2019s");
x.t("later","no");
x.t("later","two");
x.t("later","using");
x.t("shows","acknowledge");
x.t("error-handling","code");
x.t("text_val.select","link");
x.t("interface","tells");
x.t("interface","implement");
x.t("interface","shows");
x.t("interface","add");
x.t("interface","destination");
x.t("interface","implementing");
x.t("interface","messagereplybase");
x.t("interface","called");
x.t("interface","encapsulate");
x.t("interface","even");
x.t("interface","suspend");
x.t("support","setparameters");
x.t("necessary","callback");
x.t("necessary","step");
x.t("necessary","handling");
x.t("extension","properties");
x.t("extension","property");
x.t("modified","payload");
x.t("modified","entities");
x.t("modified","commit");
x.t("physical","abstract");
x.t("errors","example");
x.t("errors","later");
x.t("errors","however");
x.t("errors","acknowledging");
x.t("errors","exists");
x.t("errors","non-retryable");
x.t("errors","error");
x.t("errors","instead");
x.t("errors","submitting");
x.t("errors","duplicates");
x.t("errors","messaging");
x.t("errors","occur");
x.t("resume","method");
x.t("resume","shutdown");
x.t("resume","methods");
x.t("resume","destination");
x.t("resume","function");
x.t("resume","messaging");
x.t("resume","result");
x.t("resume","destinations");
x.t("resume","//");
x.t("provided","message");
x.t("potentially","modified");
x.t("look","up");
x.t("messagerequest.beforesend","method");
x.t("messagerequest.beforesend","made");
x.t("roll","back");
x.t("administrator","need");
x.t("administrator","using");
x.t("circular","application");
x.t("fired","rules");
x.t("change","message");
x.t("change","entity");
x.t("change","class");
x.t("payload","parameter");
x.t("payload","just");
x.t("payload","later");
x.t("payload","directly");
x.t("payload","destination");
x.t("payload","return");
x.t("payload","message.payload");
x.t("payload","message");
x.t("payload","database");
x.t("payload","contains");
x.t("type","action");
x.t("type","sets");
x.t("basic","message");
x.t("responses","remote");
x.t("sample","code");
x.t("sample","implementation");
x.t("listener","message");
x.t("listener","called");
x.t("batch","server");
x.t("retry","later");
x.t("retry","times");
x.t("retry","destination");
x.t("retry","aware");
x.t("retry","un-retryable");
x.t("times","call");
x.t("explicitly","implement");
x.t("explicitly","commits");
x.t("calls","method");
x.t("calls","messagerequest.beforesend");
x.t("calls","aftersend");
x.t("calls","messagerequest.aftersend");
x.t("calls","constructor");
x.t("calls","messagetransport.send");
x.t("calls","beforesend");
x.t("calls","message");
x.t("calls","making");
x.t("messagehistory","entity");
x.t("external","systems");
x.t("external","system");
x.t("public","void");
x.t("public","class");
x.t("response","queue");
x.t("pooled","going");
x.t("time","require");
x.t("time","imply");
x.t("sections","details");
x.t("initializableplugin","conform");
x.t("initializableplugin","application");
x.t("initializableplugin","class");
x.t("initializableplugin","//");
x.t("however","distinction");
x.t("however","separate");
x.t("however","mentioned");
x.t("aftersend","method");
x.t("aftersend","methods");
x.t("aftersend","claimcenter");
x.t("aftersend","thread");
x.t("aftersend","assuming");
x.t("trigger","external");
x.t("trigger","during");
x.t("form","method");
x.t("acknowledgement","errors");
x.t("acknowledgement","recent");
x.t("acknowledgement","message");
x.t("ship","claimcenter");
x.t("fied","objects");
x.t("pulls","future");
x.t("whenever","message");
x.t("multiple","pooled");
x.t("shut","down");
x.t("down","occurs");
x.t("limitations","data");
x.t("needed","however");
x.t("queue","looks");
x.t("queue","extension");
x.t("queue","listener");
x.t("queue","batch");
x.t("queue","time");
x.t("queue","pulls");
x.t("queue","simulator");
x.t("queue","acks");
x.t("queue","name");
x.t("queue","acknowledges");
x.t("queue","calling");
x.t("queue","queuesimulator.getinstance");
x.t("queue","exceptions");
x.t("original","message");
x.t("property","queue");
x.t("property","updates");
x.t("property","message");
x.t("property","send");
x.t("property","themessage");
x.t("entities","claimcenter");
x.t("entities","persist");
x.t("entities","application");
x.t("entities","commit");
x.t("product","refer");
x.t("product","path");
x.t("claimcenter/java-api/examples/src/com/guidewire/cc/plugin/messaging","example");
x.t("claimcenter/java-api/examples/src/com/guidewire/cc/plugin/messaging","exception");
x.t("guidewire","provides");
x.t("callback\u2019s","server");
x.t("automatically","implements");
x.t("modi","fied");
x.t("text","payload");
x.t("require","approach");
x.t("back","changes");
x.t("apis","important");
x.t("apis","suspend");
x.t("acknowledging","messages");
x.t("forbidden","warning");
x.t("link","directly");
x.t("details","handle");
x.t("details","implementing");
x.t("details","exceptions");
x.t("implementation\u2019s","first");
x.t("new","interface");
x.t("new","plugincallbackhandler.block");
x.t("new","myqueuelistener");
x.t("access","values");
x.t("speaking","modify");
x.t("single","remote");
x.t("message.reportack","method");
x.t("message.reportack","try");
x.t("message.reportack","errors");
x.t("message.reportack","_plugincallbackhandler.execute");
x.t("message.reportack","examples");
x.t("objects","claim");
x.t("objects","needs");
x.t("objects","modi");
x.t("objects","parameters");
x.t("objects","originally");
x.t("objects","properly");
x.t("getting","property");
x.t("updates","triggering");
x.t("com.guidewire.cc.plugin.messaging.messagefinder","import");
x.t("start","listening");
x.t("supplied","creating");
x.t("among","multiple");
x.t("jms","message");
x.t("myvar","map");
x.t("passes","specially-prepared");
x.t("passes","messaging");
x.t("transformedpayload","parameter");
x.t("transformedpayload","message");
x.t(".messageroot","changes");
x.t("usually","receiving");
x.t("block","create");
x.t("block","callback");
x.t("block","instance");
x.t("block","new");
x.t("block","simple");
x.t("block","code");
x.t("block","java");
x.t("block","plugincallbackhandler.block");
x.t("block","call");
x.t("includes","files");
x.t("messagereplyimpl.java","messagerequestimpl.java");
x.t("messsage","claimcenter");
x.t("need","resume");
x.t("need","parameters");
x.t("need","throw");
x.t("need","data");
x.t("status","message");
x.t("appropriately","entity");
x.t("initialization","during");
x.t("initialization","message");
x.t("initialization","phase");
x.t("simulated","asynchronous");
x.t("simulator","product");
x.t("messagerequestimpl.java","queuelistener.java");
x.t("messagetransportimpl.java","exception");
x.t("list","design");
x.t("distinction","retryable");
x.t("again","claimcenter");
x.t("add","method");
x.t("add","setparameters");
x.t("add","data");
x.t("message\u2019s","root");
x.t("message\u2019s","life");
x.t("during","calls");
x.t("during","initialization");
x.t("during","message");
x.t("during","send");
x.t("during","suspend");
x.t("during","server");
x.t("id","within");
x.t("id","external");
x.t("id","logging");
x.t("id","store");
x.t("id","exception-handling");
x.t("id","returns");
x.t("entityfactory","necessary");
x.t("entityfactory","java");
x.t("entityfactory","information");
x.t("complete","sample");
x.t("strict","order");
x.t("actions","implement");
x.t("actions","forbidden");
x.t("actions","administrative");
x.t("guide","example");
x.t("guide","code");
x.t("guide","messaging");
x.t("simple","name/value");
x.t("simple","private");
x.t("simple","messagereply");
x.t("simple","abstract");
x.t("api","implement");
x.t("api","call");
x.t("reporterror","reportnonretryableerror");
x.t("testing","uses");
x.t("plugincallbackhandler","method");
x.t("plugincallbackhandler","instance");
x.t("plugincallbackhandler","plugin");
x.t("plugincallbackhandler","objects");
x.t("plugincallbackhandler","inner");
x.t("plugincallbackhandler","messagefinder");
x.t("plugincallbackhandler","object");
x.t("(messagefinder)","object");
x.t("messageid","senderrefid");
x.t("messageid","public");
x.t("messageid","//");
x.t("specially-prepared","block");
x.t("acks","errors");
x.t("acks","private");
x.t("acks","using");
x.t("sure","understand");
x.t("duplicate","message.reportduplicate");
x.t("duplicate","skip");
x.t("duplicate","messages");
x.t("duplicate","message");
x.t("overview","gosu");
x.t("overview","message");
x.t("possibility","receiving");
x.t("throws","no");
x.t("throws","throwable");
x.t("selects","message");
x.t("directly","message");
x.t("directly","page");
x.t("synchronously","send");
x.t("synchronously","entirely");
x.t("synchronously","acknowledge");
x.t("handle","possibility");
x.t("handle","asynchronous");
x.t("detects","response");
x.t("detects","duplicate");
x.t("requires","special");
x.t("queues","errors");
x.t("messagerequest.aftersend","method");
x.t("desired","changes");
x.t("cycle","example");
x.t("suspending","jms");
x.t("text_val.focus","text_val.select");
x.t("definition","interface");
x.t("definition","add");
x.t("no","special");
x.t("no","exceptions");
x.t("simplest","form");
x.t("demonstrates","basic");
x.t("demonstrates","creating");
x.t("creating","initializing");
x.t("creating","plugincallbackhandler.block");
x.t("libraries","overview");
x.t("path","several");
x.t("name","beforesend");
x.t("name","main");
x.t("initialize","messaging");
x.t("codes","translated");
x.t("returning","destination");
x.t("notifications","external");
x.t("notifications","appropriate");
x.t("constructor","application");
x.t("constructor","//");
x.t("handler","safely");
x.t("handler","block");
x.t("handler","plugincallbackhandler");
x.t("handler","sets");
x.t("handler","code");
x.t("gosu","reference");
x.t("gosu","java");
x.t("messagetransport.send","method");
x.t("messagetransport.send","message");
x.t("changed","transformed");
x.t("suspend/resume","destination");
x.t("part","initializableplugin");
x.t("part","shutdown");
x.t("part","database");
x.t("textual","message");
x.t("perform","type");
x.t("perform","post-sending");
x.t("perform","following");
x.t("perform","special");
x.t("argument","transformed");
x.t("skip","further");
x.t("skip","message");
x.t("(id:int)","function");
x.t("message:entity.message","transformedpayload:string");
x.t("base","implementation");
x.t("custom","events");
x.t("initializing","plugin");
x.t("avoid","duplicates");
x.t("logging","errors");
x.t("logging","code");
x.t("logging","notification");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","provide");
x.t("parameters","implement");
x.t("parameters","plugin");
x.t("parameters","defined");
x.t("methods","just");
x.t("methods","required");
x.t("methods","plugin");
x.t("methods","reporterror");
x.t("methods","perform");
x.t("methods","step");
x.t("methods","message");
x.t("methods","messaging");
x.t("methods","exceptions");
x.t("methods","log");
x.t("methods","plugin\u2019s");
x.t("further","processing");
x.t("shutdown","resume");
x.t("shutdown","public");
x.t("shutdown","methods");
x.t("shutdown","standard");
x.t("shutdown","function");
x.t("shutdown","configuration");
x.t("shutdown","typically");
x.t("shutdown","trap");
x.t("provides","classes");
x.t("inner","interface");
x.t("_messagefinder","superclass");
x.t("_messagefinder","message");
x.t("_messagefinder","using");
x.t("_messagefinder","//");
x.t("alternatively","base");
x.t("alternatively","suspend");
x.t("post-processing","property");
x.t("illustrates","simple");
x.t("params","public");
x.t("going","messaging");
x.t("exists","submitting");
x.t("implementations","limitations");
x.t("implementations","messaging");
x.t("transformed","payload");
x.t("transformed","message");
x.t("directories","claimcenter/java-api/examples/src/examples/plugins/messaging");
x.t("up","callback\u2019s");
x.t("up","thread");
x.t("up","message");
x.t("up","acknowledge");
x.t("find","entities");
x.t("find","complete");
x.t("find","destination");
x.t("standard","messaging");
x.t("map","parameters");
x.t("map","params");
x.t("map","java.util.map");
x.t("map","mykeyname");
x.t("destination","defines");
x.t("destination","implement");
x.t("destination","integrations");
x.t("destination","implemented");
x.t("destination","later");
x.t("destination","necessary");
x.t("destination","resume");
x.t("destination","id");
x.t("destination","overview");
x.t("destination","alternatively");
x.t("destination","destination");
x.t("destination","define");
x.t("destination","send");
x.t("destination","optionally");
x.t("destination","system");
x.t("destination","suspend");
x.t("strings","codes");
x.t("modifying","message");
x.t("web","services");
x.t("web","service");
x.t("originally","attached");
x.t("_plugincallbackhandler.execute","(block)");
x.t("final","int");
x.t("non-retryable","errors");
x.t("allows","plugin");
x.t("destroy","existing");
x.t("claimcenter","integration");
x.t("claimcenter","commits");
x.t("claimcenter","support");
x.t("claimcenter","calls");
x.t("claimcenter","product");
x.t("claimcenter","objects");
x.t("claimcenter","selects");
x.t("claimcenter","requires");
x.t("claimcenter","destroy");
x.t("claimcenter","message");
x.t("claimcenter","database");
x.t("claimcenter","imessagetoolsapi");
x.t("claimcenter","reuses");
x.t("claimcenter","entity");
x.t("pairs","translated");
x.t("string","value");
x.t("empty","constructor");
x.t("sets","up");
x.t("sets","message");
x.t("write","plugincallbackhandler");
x.t("int","messageid");
x.t("int","destinationid");
x.t("destinationid","implementation");
x.t("record","destination");
x.t("recreate","part");
x.t("three","types");
x.t("understand","server");
x.t("thread","executing");
x.t("thread","database");
x.t("thread","context");
x.t("thread","asynchronous");
x.t("outgoing","web");
x.t("receiving","duplicate");
x.t("receiving","system");
x.t("earlier","section");
x.t("problems","message");
x.t("request","example");
x.t("request","plugin");
x.t("request","legacy");
x.t("request","messagerequest");
x.t("legacy","computer");
x.t(".reportduplicate","method");
x.t("failed","claimcenter");
x.t("store","queue");
x.t("store","private");
x.t("store","reference");
x.t("store","values");
x.t("_plugincallbackhandler","_messagefinder");
x.t("recent","message");
x.t("queuesimulator.java","messagereplyimpl.java");
x.t("resend","queue");
x.t("exception-handling","code");
x.t("error","aware");
x.t("error","handling");
x.t("error","message");
x.t("error","occurred");
x.t("error","cases");
x.t("java.util.map","uses");
x.t("java.util.map","sample");
x.t("java.util.map","//");
x.t("responsereceived","final");
x.t("separately","handle");
x.t("logic","actions");
x.t("logic","application");
x.t("commands","destination");
x.t("suppose","plugin");
x.t("acknowledges","message");
x.t("involve","submitting");
x.t("next","define");
x.t("respectively","during");
x.t("consistently","save");
x.t("finders","submit");
x.t("transforms","returns");
x.t("committing","entity");
x.t("occurs","during");
x.t("reread","message");
x.t("setparameters","method");
x.t("setparameters","construct");
x.t("setparameters","map");
x.t("first","line");
x.t("executing","callback");
x.t("executing","plugin\u2019s");
x.t("messages","posted");
x.t("messages","plugin");
x.t("messages","web");
x.t("messages","report");
x.t("messages","call");
x.t("messages","either");
x.t("messages","tracking");
x.t("throw","exception");
x.t("life","cycle");
x.t("guidewire_selectall","var");
x.t("beforesend","method");
x.t("beforesend","aftersend");
x.t("beforesend","claimcenter");
x.t("beforesend","send");
x.t("processing","acknowledgement");
x.t("processing","message");
x.t("processing","depending");
x.t("notify","administrator");
x.t("notify","claimcenter");
x.t("setup","claimcenter");
x.t("function","setdestinationid");
x.t("function","resume");
x.t("function","shutdown");
x.t("function","setparameters");
x.t("function","guidewire_selectall");
x.t("function","send");
x.t("function","suspend");
x.t("implements","inittools");
x.t("implements","messagereply");
x.t("implements","messagetransport");
x.t("implements","queuelistener");
x.t("signal","acknowledgement");
x.t("design","messaging");
x.t("approach","add");
x.t("define","methods");
x.t("define","message");
x.t("may","necessary");
x.t("may","optionally");
x.t("whether","application");
x.t("reportnonretryableerror","message.reportduplicate");
x.t("reportnonretryableerror","report");
x.t("reportnonretryableerror","submitting");
x.t("represents","original");
x.t("private","properties");
x.t("private","variables");
x.t("private","interface");
x.t("private","variable");
x.t("private","class");
x.t("step","example");
x.t("step","step");
x.t("step","process");
x.t("step","commit");
x.t("aware","no");
x.t("aware","ack");
x.t("instead","message");
x.t("report","duplicate");
x.t("report","success");
x.t("claimcenter/java-api/examples/src/examples/plugins/messaging","claimcenter/java-api/examples/src/com/guidewire/cc/plugin/messaging");
x.t("ways","doing");
x.t("stores","values");
x.t("implementing","function");
x.t("implementing","message");
x.t("implementing","messaging");
x.t("types","implementations");
x.t("types","messaging");
x.t("transport","example");
x.t("transport","method");
x.t("transport","plugin");
x.t("transport","testing");
x.t("transport","involve");
x.t("transport","may");
x.t("transport","perhaps");
x.t("transport","messagetransport");
x.t("transport","plugins");
x.t("transport","plugin\u2019s");
x.t("xml","sending");
x.t("changes","safely");
x.t("changes","objects");
x.t("changes","persist");
x.t("changes","important");
x.t("changes","message");
x.t("changes","database");
x.t("changes","send");
x.t("changes","entity");
x.t("changes","commit");
x.t("handling","details");
x.t("handling","messaging");
x.t("handling","duplicates");
x.t("handling","suspect/shutdown");
x.t("messagereply","plugin");
x.t("messagereply","interface");
x.t("messagereply","simple");
x.t("succeeded","failed");
x.t("properly","guidewire");
x.t("properly","sets");
x.t("properly","commit");
x.t("section","call");
x.t("superclass","messagereplybase");
x.t("submitting","errors");
x.t("submitting","acks");
x.t("submitting","message");
x.t("calling","remote");
x.t("calling","setparameters");
x.t("persist","database");
x.t("persist","messagerequest");
x.t("important","method");
x.t("important","integration");
x.t("important","gosu");
x.t("important","information");
x.t("necessarily","need");
x.t("works","differently");
x.t("prepare","message");
x.t("task","method");
x.t("post-sending","processing");
x.t("code","particularly");
x.t("code","receives");
x.t("code","message.reportack");
x.t("code","block");
x.t("code","plugincallbackhandler");
x.t("code","detects");
x.t("code","handle");
x.t("code","logging");
x.t("code","illustrates");
x.t("code","write");
x.t("code","claimcenter");
x.t("code","record");
x.t("code","works");
x.t("code","completes");
x.t("code","send");
x.t("code","choose");
x.t("code","executes");
x.t("code","plugincallbackhandler.block");
x.t("code","including");
x.t("reference","plugincallbackhandler");
x.t("reference","guide");
x.t("reference","message");
x.t("steps","message");
x.t("notification","nothing");
x.t("return","method");
x.t("return","string");
x.t("completes","implement");
x.t("completes","changes");
x.t("completes","assuming");
x.t("completes","work");
x.t("abstract","transport");
x.t("abstract","message");
x.t("transformedpayload:string","print");
x.t("adds","entity");
x.t("consult","following");
x.t("message","root");
x.t("message","within");
x.t("message","implement");
x.t("message","sending");
x.t("message","inserts");
x.t("message","instance");
x.t("message","callback");
x.t("message","always");
x.t("message","reportduplicate");
x.t("message","plugin");
x.t("message","reply");
x.t("message","modified");
x.t("message","payload");
x.t("message","retry");
x.t("message","messagehistory");
x.t("message","public");
x.t("message","queue");
x.t("message","message.reportack");
x.t("message","transformedpayload");
x.t("message","id");
x.t("message","plugincallbackhandler");
x.t("message","acks");
x.t("message","synchronously");
x.t("message","desired");
x.t("message","returning");
x.t("message","notifications");
x.t("message","perform");
x.t("message","methods");
x.t("message","implementations");
x.t("message","destination");
x.t("message","request");
x.t("message",".reportduplicate");
x.t("message","finders");
x.t("message","notify");
x.t("message","signal");
x.t("message","reportnonretryableerror");
x.t("message","transport");
x.t("message","necessarily");
x.t("message","prepare");
x.t("message","code");
x.t("message","consult");
x.t("message","message");
x.t("message","asynchronously");
x.t("message","_messagefinder.findbyid");
x.t("message","main");
x.t("message","send");
x.t("message","retrying");
x.t("message","messagerequest");
x.t("message","correct");
x.t("message","result");
x.t("message","asynchronous");
x.t("message","posts");
x.t("message","entity");
x.t("message","retryable");
x.t("message","acknowledge");
x.t("message","finder");
x.t("message","sent");
x.t("message","object");
x.t("affect","whether");
x.t("database","part");
x.t("database","sets");
x.t("database","claimcenter");
x.t("database","properly");
x.t("database","code");
x.t("database","message");
x.t("database","send");
x.t("database","implementation");
x.t("database","correct");
x.t("database","ack");
x.t("database","assuming");
x.t("database","transaction");
x.t("asynchronously","message");
x.t("asynchronously","acknowledge");
x.t("com.guidewire.cc.plugin.messaging.messagereplybase","import");
x.t("listening","queue");
x.t("least","find");
x.t("message.payload","transforms");
x.t("imessagetoolsapi","web");
x.t("event","fired");
x.t("translated","xml");
x.t("translated","specific");
x.t("java","demonstrates");
x.t("java","code");
x.t("java","entity");
x.t("java","exceptions");
x.t("======================================================","print");
x.t("variable","within");
x.t("variable","destination");
x.t("ensure","changes");
x.t("bundle","bundles");
x.t("triggering","custom");
x.t("effectively","ephemeral");
x.t("occurred","messsage");
x.t("occurred","exceptions");
x.t("rules","apply");
x.t("rules","messaging");
x.t("longer","calls");
x.t("_messagefinder.findbyid","(messageid)");
x.t("(messageid)","message.reportack");
x.t("made","changes");
x.t("existing","messaging");
x.t("callbacks","message");
x.t("callbacks","acknowledge");
x.t("messagereplybase","public");
x.t("messagereplybase","automatically");
x.t("messagereplybase","alternatively");
x.t("messagereplybase","implements");
x.t("messagereplybase","plugincallbackhandler.block");
x.t("instances","look");
x.t("saving","destination");
x.t("configuration","reread");
x.t("_logger.debug","suspending");
x.t("main","interface");
x.t("main","task");
x.t("main","messaging");
x.t("value","method");
x.t("proprietary","protocol");
x.t("messagefinder","callback");
x.t("messagefinder","instance");
x.t("messagefinder","plugincallbackhandler");
x.t("messagefinder","private");
x.t("messagefinder","instances");
x.t("messagefinder","save");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","defined");
x.t("specific","remote");
x.t("send","method");
x.t("send","aftersend");
x.t("send","queue");
x.t("send","transformedpayload");
x.t("send","notifications");
x.t("send","message:entity.message");
x.t("send","claimcenter");
x.t("send","request");
x.t("send","succeeded");
x.t("send","message");
x.t("depending","business");
x.t("depending","implementation");
x.t("implementation","implement");
x.t("implementation","setdestinationid");
x.t("implementation","plugin");
x.t("implementation","messagereply");
x.t("implementation","code");
x.t("implementation","messagereplybase");
x.t("implementation","plugins");
x.t("implementation","queuelistener");
x.t("several","example");
x.t("several","methods");
x.t("threw","no");
x.t("perhaps","need");
x.t("perhaps","textual");
x.t("generate","modified");
x.t("computer","send");
x.t("making","instance");
x.t("exception","type");
x.t("exception","handling");
x.t("exception","cases");
x.t("exception","class");
x.t("process","setup");
x.t("acknowledgements","errors");
x.t("acknowledgements","submitting");
x.t("import","com.guidewire.pl.plugin.plugincallbackhandler");
x.t("import","com.guidewire.cc.plugin.messaging.messagefinder");
x.t("import","java.util.map");
x.t("import","com.guidewire.cc.plugin.messaging.messagereplybase");
x.t("import","com.guidewire.cc.external.entity.message");
x.t("import","com.guidewire.cc.plugin.messaging.messagereply");
x.t("extends","messagereplybase");
x.t("conform","new");
x.t("desire","message");
x.t("systems","usually");
x.t("systems","suspend/resume");
x.t("takes","message");
x.t("throwable","throwable.printstacktrace");
x.t("throwable","message");
x.t("throwable","throwable");
x.t("services","apis");
x.t("services","asynchronous");
x.t("retrying","help");
x.t("administrative","commands");
x.t("page","error");
x.t("registry","studio");
x.t("registry","function");
x.t("registry","important");
x.t("registry","already");
x.t("registry","following");
x.t("registry","even");
x.t("separate","thread");
x.t("separate","message");
x.t("diagram","message");
x.t("context","supports");
x.t("com.guidewire.cc.external.entity.message","import");
x.t("help","call");
x.t("messaging","events");
x.t("messaging","plugin");
x.t("messaging","shut");
x.t("messaging","queues");
x.t("messaging","destination");
x.t("messaging","web");
x.t("messaging","transport");
x.t("messaging","code");
x.t("messaging","rules");
x.t("messaging","destinations");
x.t("messaging","plugins");
x.t("messaging","system");
x.t("data","change");
x.t("data","model");
x.t("data","restrictions");
x.t("messagetransport","plugin");
x.t("messagetransport","uses");
x.t("messagetransport","change");
x.t("messagetransport","initializableplugin");
x.t("messagerequest","method");
x.t("messagerequest","plugin");
x.t("interact","diagram");
x.t("information","appropriately");
x.t("information","entityfactory");
x.t("information","acknowledgements");
x.t("information","entity");
x.t("information","using");
x.t("duplicates","message.reporterror");
x.t("duplicates","error");
x.t("duplicates","code");
x.t("duplicates","message");
x.t("duplicates","messaging");
x.t("correct","queue");
x.t("correct","database");
x.t("correct","bundle");
x.t("optional","post-processing");
x.t("attached","message");
x.t("com.guidewire.cc.plugin.messaging.messagereply","import");
x.t("defined","plugin");
x.t("defined","explicitly");
x.t("result","method");
x.t("result","administrator");
x.t("result","web");
x.t("result","successful");
x.t("ack","error");
x.t("ack","affect");
x.t("ack","call");
x.t("assuming","method");
x.t("assuming","callback");
x.t("assuming","no");
x.t("appropriate","example");
x.t("appropriate","status");
x.t("appropriate","skip");
x.t("examples","several");
x.t("save","instance");
x.t("save","database");
x.t("future","responses");
x.t("read-only","effectively");
x.t("application","rolls");
x.t("application","support");
x.t("application","calls");
x.t("application","explicitly");
x.t("application","initialize");
x.t("application","logic");
x.t("application","properly");
x.t("application","longer");
x.t("application","appropriate");
x.t("application","//");
x.t("values","map");
x.t("values","private");
x.t("asynchronous","replies");
x.t("asynchronous","callback");
x.t("asynchronous","reply");
x.t("asynchronous","queue");
x.t("asynchronous","callbacks");
x.t("successful","ack");
x.t("findbysendrefid","method");
x.t("submit","errors");
x.t("print","======================================================");
x.t("print","(message)");
x.t("called","execute");
x.t("called","whenever");
x.t("called","message");
x.t("called","messagefinder");
x.t("called","plugincallbackhandler.block");
x.t("phase","claimcenter");
x.t("encapsulate","block");
x.t("described","earlier");
x.t("posts","simulated");
x.t(".listen","new");
x.t("choose","queue");
x.t("choose","among");
x.t("destinations","doing");
x.t("destinations","messaging");
x.t("plugins","execute");
x.t("plugins","explicitly");
x.t("plugins","ship");
x.t("plugins","methods");
x.t("plugins","three");
x.t("plugins","error");
x.t("plugins","function");
x.t("plugins","implementing");
x.t("plugins","message");
x.t("plugins","several");
x.t("plugins","following");
x.t("protocol","specific");
x.t("themessage",".messageroot");
x.t("note","empty");
x.t("transaction","example");
x.t("transaction","adds");
x.t("transaction","information");
x.t("classes","interfaces");
x.t("executes","separately");
x.t("executes","message");
x.t("two","ways");
x.t("administration","tab");
x.t("optionally","define");
x.t("optionally","immediately");
x.t("optionally","update");
x.t("mentioned","transform");
x.t("work","aftersend");
x.t("work","synchronously");
x.t("plugincallbackhandler.block","public");
x.t("plugincallbackhandler.block","block");
x.t("plugincallbackhandler.block","perform");
x.t("plugincallbackhandler.block","message");
x.t("plugincallbackhandler.block","object");
x.t("mark","non-retryable");
x.t("mark","claimcenter");
x.t("mark","message");
x.t("queuelistener","listens");
x.t("queuelistener","called");
x.t("cases","example");
x.t("cases","application");
x.t("imply","retryable");
x.t("typically","receiving");
x.t("typically","suspend");
x.t("reuses","instance");
x.t("immediately","transport");
x.t("immediately","acknowledge");
x.t("entirely","send");
x.t("call","message.reporterror");
x.t("call","single");
x.t("call","add");
x.t("call","entityfactory");
x.t("call","methods");
x.t("call","claimcenter");
x.t("call","outgoing");
x.t("call","message");
x.t("call","plugincallbackhandler.add");
x.t("call","suspend");
x.t("incoming","message");
x.t("package","examples.plugins.messaging");
x.t("queuesimulator.getinstance",".listen");
x.t("relies","private");
x.t("real","world");
x.t("order","message");
x.t("following","example");
x.t("following","sections");
x.t("following","list");
x.t("following","steps");
x.t("following","code");
x.t("following","special");
x.t("entity","potentially");
x.t("entity","entities");
x.t("entity","libraries");
x.t("entity","changed");
x.t("entity","store");
x.t("entity","represents");
x.t("entity","changes");
x.t("entity","message");
x.t("entity","ensure");
x.t("entity","data");
x.t("entity","correct");
x.t("entity","result");
x.t("entity","commit");
x.t("system","plugin");
x.t("system","detects");
x.t("system","shutdown");
x.t("system","notify");
x.t("system","message");
x.t("system","perhaps");
x.t("system","typically");
x.t("model","extension");
x.t("service","apis");
x.t("service","api");
x.t("service","request");
x.t("elements","interact");
x.t("either","within");
x.t("either","message");
x.t("special","actions");
x.t("special","step");
x.t("special","rules");
x.t("special","exception");
x.t("plugincallbackhandler.add","entityreference");
x.t("run","throws");
x.t("myqueuelistener","public");
x.t("myqueuelistener","implements");
x.t("warning","event");
x.t("warning","messaging");
x.t("class","mytransport");
x.t("class","definition");
x.t("class","sets");
x.t("class","myqueuelistener");
x.t("class","messagereplyimpl");
x.t("//","calls");
x.t("//","access");
x.t("//","start");
x.t("//","part");
x.t("//","_messagefinder");
x.t("//","map");
x.t("//","next");
x.t("//","important");
x.t("//","note");
x.t("//","real");
x.t("suspect/shutdown","messaging");
x.t("using","findbyid");
x.t("using","plugincallbackhandler");
x.t("using","web");
x.t("using","messagereply");
x.t("using","message");
x.t("using","messagereplybase");
x.t("using","administration");
x.t("un-retryable","error");
x.t("retryable","errors");
x.t("retryable","during");
x.t("tracking","message");
x.t("returns","transformed");
x.t("returns","message");
x.t("returns","appropriate");
x.t("messagereplyimpl","extends");
x.t("catch","throwable");
x.t("queuelistener.java","messagetransportimpl.java");
x.t("tab","user");
x.t("trap","actions");
x.t("_logger.isdebugenabled","_logger.debug");
x.t("mykeyname","implementing");
x.t("modify","properties");
x.t("modify","payload");
x.t("transform","payload");
x.t("acknowledge","message");
x.t("finder","(messagefinder)");
x.t("finder","messagefinder");
x.t("(block)","call");
x.t("(block)","catch");
x.t("world","log");
x.t("occur","avoid");
x.t("occur","application");
x.t("var","myvar");
x.t("var","text_val=eval");
x.t("restrictions","messaging");
x.t("commit","no");
x.t("commit","claimcenter");
x.t("commit","database");
x.t("success","message.reportack");
x.t("including","queue");
x.t("even","need");
x.t("sent","message");
x.t("exceptions","roll");
x.t("exceptions","time");
x.t("exceptions","trigger");
x.t("exceptions","problems");
x.t("exceptions","handling");
x.t("exceptions","occurred");
x.t("exceptions","mark");
x.t("exceptions","following");
x.t("exceptions","occur");
x.t("suspend","resume");
x.t("suspend","public");
x.t("suspend","shutdown");
x.t("suspend","destination");
x.t("suspend","function");
x.t("suspend","_logger.isdebugenabled");
x.t("(message)","message.reportack");
x.t("log","action");
x.t("log","least");
x.t("object","parameter");
x.t("object","method");
x.t("object","claim");
x.t("object","built-in");
x.t("object","physical");
x.t("object","provided");
x.t("object","needed");
x.t("object","getting");
x.t("object","add");
x.t("object","messageid");
x.t("object","methods");
x.t("object","executing");
x.t("object","message");
x.t("object","returns");
x.t("contains","simple");
x.t("contains","strings");
x.t("generally","speaking");
x.t("gets","parameter");
x.t("gets","objects");
x.t("plugin\u2019s","inittools");
x.t("plugin\u2019s","simplest");
x.t("plugin\u2019s","messagefinder");
x.t("plugin\u2019s","send");
x.t("plugin\u2019s","suspend");
x.t("server","calls");
x.t("server","shutdown");
x.t("server","destination");
x.t("server","thread");
x.t("update","properties");
x.t("examples.plugins.messaging","import");
}
