function FileData_Pairs(x)
{
x.t("example","shows");
x.t("example","register");
x.t("example","demonstrates");
x.t("example","creating");
x.t("example","claimcenter");
x.t("example","store");
x.t("example","java");
x.t("example","several");
x.t("example","cases");
x.t("supports","large");
x.t("passed","parameters");
x.t("synchronized","statements");
x.t("synchronized","method");
x.t("synchronized","void");
x.t("synchronized","constructor");
x.t("synchronized","methods");
x.t("synchronized","blocks");
x.t("synchronized","(mypluginclass.class)");
x.t("synchronized","keyword");
x.t("synchronized","using");
x.t("tag","methods");
x.t("safely","access");
x.t("safely","methods");
x.t("safely","even");
x.t("statements","synchronized");
x.t("statements","allows");
x.t("statements","separate");
x.t("statements","run");
x.t(".class","class");
x.t("particularly","case");
x.t("complex","guidewire");
x.t("deploys","claimcenter");
x.t("method","locking");
x.t("method","calls");
x.t("method","time");
x.t("method","original");
x.t("method","automatically");
x.t("method","initialization");
x.t("method","definition");
x.t("method","claimcenter");
x.t("method","thread");
x.t("method","setparameters");
x.t("method","different");
x.t("method","takes");
x.t("method","special");
x.t("method","object");
x.t("exist","once");
x.t("exist","single");
x.t("possible","invocations");
x.t("possible","claimcenter");
x.t("possible","appropriate");
x.t("properties","relevant");
x.t("blocking","suspending");
x.t("blocking","affect");
x.t("construct","object");
x.t("transactions","interactions");
x.t("simultaneously","plugin");
x.t("simultaneously","running");
x.t("taking","great");
x.t("diagnose","debug");
x.t("claim","relevant");
x.t("shares","data");
x.t("just","static");
x.t("just","java");
x.t("hashmap","object");
x.t("locked","object");
x.t("locked","threads");
x.t("singletons","synchronization");
x.t("singletons","due");
x.t("singletons","java");
x.t("singletons","classes");
x.t("restriction","important");
x.t("enforce","single");
x.t("anything","database");
x.t("implement","synchronization");
x.t("implement","approach");
x.t("every","server");
x.t("static","variables");
x.t("static","mysingleton");
x.t("static","byte");
x.t("static","int");
x.t("static","variable");
x.t("static","class");
x.t("static","var");
x.t("integration","guide");
x.t("integration","code");
x.t("studio","however");
x.t("studio","information");
x.t("timing","multi-user");
x.t("create","gosu");
x.t("describes","section");
x.t("business","logic");
x.t("_instance","new");
x.t("_instance","information");
x.t("variables","example");
x.t("variables","exist");
x.t("variables","just");
x.t("variables","static");
x.t("variables","always");
x.t("variables","synchronization");
x.t("variables","plugin");
x.t("variables","discussed");
x.t("variables","insufficient");
x.t("variables","register");
x.t("variables","necessary");
x.t("variables","access");
x.t("variables","lets");
x.t("variables","dangerous");
x.t("variables","stored");
x.t("variables","gosu");
x.t("variables","thread");
x.t("variables","present");
x.t("variables","feature");
x.t("variables","function");
x.t("variables","extremely");
x.t("variables","mechanisms");
x.t("variables","described");
x.t("variables","plugins");
x.t("variables","class");
x.t("variables","warning");
x.t("variables","synchronizing");
x.t("instance","variables");
x.t("instance","plugin");
x.t("instance","referred");
x.t("instance","java");
x.t("instance","class");
x.t("once","hence");
x.t("once","add");
x.t("once","contrast");
x.t("once","per");
x.t("related","apis");
x.t("related","note");
x.t("related","multi-server");
x.t("keep","access");
x.t("always","test");
x.t("always","pass");
x.t("mysingleton","_instance");
x.t("mysingleton","getinstance");
x.t("mysingleton","private");
x.t("mysingleton","//");
x.t("storing","data");
x.t("synchronization","refers");
x.t("synchronization","protects");
x.t("synchronization","techniques");
x.t("synchronization","data");
x.t("synchronization","class");
x.t("void","mymethod");
x.t("void","put1");
x.t("void","put2");
x.t("action","design");
x.t("action","depending");
x.t("action","several");
x.t("action","perhaps");
x.t("improve","performance");
x.t("apply","java");
x.t("plugin","safely");
x.t("plugin","deploys");
x.t("plugin","method");
x.t("plugin","business");
x.t("plugin","support");
x.t("plugin","access");
x.t("plugin","initialization");
x.t("plugin","overview");
x.t("plugin","gosu");
x.t("plugin","exactly");
x.t("plugin","exists");
x.t("plugin","methods");
x.t("plugin","parameters");
x.t("plugin","implementations");
x.t("plugin","thread");
x.t("plugin","deployed");
x.t("plugin","cause");
x.t("plugin","design");
x.t("plugin","aware");
x.t("plugin","code");
x.t("plugin","ensure");
x.t("plugin","implementation");
x.t("plugin","registry");
x.t("plugin","experienced");
x.t("plugin","service");
x.t("plugin","general");
x.t("plugin","instantiates");
x.t("user","request");
x.t("user","collectively");
x.t("user","sessions");
x.t("multi-user","multi-thread");
x.t("multi-user","multi-threaded");
x.t("refers","feature");
x.t("situations","claimcenter");
x.t("situations","warning");
x.t("creates","object");
x.t("locking","approach");
x.t("locking","reduces");
x.t("locking","synchronize");
x.t("protecting","access");
x.t("discussed","plugin");
x.t("discussed","beginning");
x.t("discussed","previous");
x.t("insufficient","synchronize");
x.t("reply","plugins");
x.t("until","lock");
x.t("until","original");
x.t("until","first");
x.t("shows","simple");
x.t("implemented","using");
x.t("text_val.select","link");
x.t("register","document");
x.t("register","java");
x.t("support","multiple");
x.t("support","concurrent");
x.t("support","server");
x.t("deployment","without");
x.t("state","information");
x.t("extension","property");
x.t("necessary","keep");
x.t("necessary","ensure");
x.t("errors","fully");
x.t("modified","atomic");
x.t("batch","server");
x.t("type","code");
x.t("type","problem");
x.t("thing","know");
x.t("calls","plugin");
x.t("calls","during");
x.t("calls","java");
x.t("time","second");
x.t("time","ensure");
x.t("time","java");
x.t("time","prevents");
x.t("time","object");
x.t("public","synchronized");
x.t("public","static");
x.t("public","void");
x.t("public","int");
x.t("public","class");
x.t("hence","thread");
x.t("imyplugininterface","private");
x.t("mymethod","address");
x.t("external","systems");
x.t("however","able");
x.t("however","ensure");
x.t("however","plan");
x.t("however","server");
x.t("multiple","method");
x.t("multiple","user");
x.t("multiple","calls");
x.t("multiple","servers");
x.t("multiple","instances");
x.t("multiple","process");
x.t("multiple","simultaneous");
x.t("multiple","threads");
x.t("sections","list");
x.t("thread-safe","example");
x.t("releases","second");
x.t("execution","until");
x.t("protect","access");
x.t("protect","integrity");
x.t("property","claim");
x.t("entities","store");
x.t("apis","blocking");
x.t("apis","wisely");
x.t("apis","carefully");
x.t("apis","java");
x.t("automatically","implement");
x.t("automatically","safe");
x.t("lock","releases");
x.t("lock","finer");
x.t("original","thread");
x.t("convert","blocks");
x.t("guidewire","strongly");
x.t("really","singletons");
x.t("link","directly");
x.t("speaking","example");
x.t("speaking","plugin");
x.t("speaking","assume");
x.t("servers","implement");
x.t("servers","zero");
x.t("servers","claimcenter");
x.t("servers","cluster");
x.t("servers","important");
x.t("access","simultaneously");
x.t("access","static");
x.t("access","during");
x.t("access","thread");
x.t("access","data");
x.t("access","shared");
x.t("access","multi-threaded");
x.t("access","warning");
x.t("access","threads");
x.t("single","instance");
x.t("single","user");
x.t("single","server");
x.t("certain","static");
x.t("objects","package");
x.t("contents","public");
x.t("contents","value");
x.t("contents","//");
x.t("new","mysingleton");
x.t("new","byte");
x.t("refactor","code");
x.t("updates","database");
x.t("updates","class");
x.t("among","across");
x.t("document","production");
x.t("care","avoid");
x.t("java.util.concurrent","objects");
x.t("interleave","earlier");
x.t("block","statements");
x.t("block","code");
x.t("messsage","claimcenter");
x.t("http","request");
x.t("http://java.sun.com/docs/books/tutorial/essential/concurrency/index.html","following");
x.t("list","common");
x.t("lets","tag");
x.t("status","applying");
x.t("initialization","method");
x.t("initialization","parameters");
x.t("able","refactor");
x.t("ously","multiple");
x.t("machine","data");
x.t("machine","following");
x.t("machine","server");
x.t("add","code");
x.t("during","plugin");
x.t("during","time");
x.t("complete","action");
x.t("beginning","plugin");
x.t("treated","action");
x.t("guide","plugin");
x.t("assume","shared");
x.t("initialized","once");
x.t("testing","environment");
x.t("challenges","static");
x.t("challenges","ensure");
x.t("applies","gosu");
x.t("simple","class");
x.t("put1","time");
x.t("put1","int");
x.t("put1","running");
x.t("due","thread-safety");
x.t("network","connections");
x.t("overview","plugin");
x.t("large","number");
x.t("referred","static");
x.t("referred","singleton");
x.t("unreliable","additionally");
x.t("put2","int");
x.t("put2","running");
x.t("deploying","java");
x.t("http://java.sun.com/developer/technicalarticles/programming/singletons","absolutely");
x.t("directly","page");
x.t("requirements","describe");
x.t("dangerous","instance");
x.t("dangerous","unreliable");
x.t("dangerous","multi-threaded");
x.t("locks","access");
x.t("test","business");
x.t("test","logic");
x.t("test","code");
x.t("test","concurrency");
x.t("high","performance");
x.t("protects","invocations");
x.t("protects","integrity");
x.t("protects","shared");
x.t("suspending","execution");
x.t("byte","mylock");
x.t("byte","[0]");
x.t("handle","errors");
x.t("handle","multiple");
x.t("text_val.focus","text_val.select");
x.t("stored","once");
x.t("no","methods");
x.t("no","obvious");
x.t("no","additional");
x.t("common","approaches");
x.t("wisely","test");
x.t("simplest","synchronizing");
x.t("definition","example");
x.t("demonstrates","statement-level");
x.t("discourages","using");
x.t("creating","singletons");
x.t("creating","singleton");
x.t("gosu","static");
x.t("gosu","plugin");
x.t("gosu","locks");
x.t("gosu","simplest");
x.t("gosu","gosu");
x.t("gosu","thread");
x.t("gosu","language");
x.t("gosu","code");
x.t("gosu","java");
x.t("gosu","classes");
x.t("gosu","using");
x.t("gosu","class");
x.t("exactly","instance");
x.t("exactly","once");
x.t("performance","apis");
x.t("performance","greatly");
x.t("performance","negatively");
x.t("constructor","generates");
x.t("virtual","machine");
x.t("avoid","singletons");
x.t("avoid","static");
x.t("avoid","variables");
x.t("avoid","creating");
x.t("avoid","thread");
x.t("avoid","problems");
x.t("custom","entities");
x.t("accordingly","thread");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","java");
x.t("zero","instances");
x.t("alternatively","protect");
x.t("methods","particularly");
x.t("methods","static");
x.t("methods","time");
x.t("methods","no");
x.t("methods","java");
x.t("methods","information");
x.t("methods","object\u2019s");
x.t("methods","run");
x.t("methods","special");
x.t("methods","object");
x.t("parameters","example");
x.t("parameters","deploying");
x.t("parameters","specify");
x.t("provides","feature");
x.t("rule","messaging");
x.t("implementations","avoid");
x.t("place","store");
x.t("standard","instance");
x.t("standard","java");
x.t("heavy","loads");
x.t("invocations","synchronized");
x.t("invocations","two");
x.t("map","however");
x.t("map","initialization");
x.t("allows","smaller");
x.t("address","//");
x.t("claimcenter","integration");
x.t("claimcenter","calls");
x.t("claimcenter","cluster");
x.t("claimcenter","may");
x.t("claimcenter","runs");
x.t("claimcenter","call");
x.t("claimcenter","server");
x.t("impossible","control");
x.t("concurrent","instances");
x.t("concurrent","connections");
x.t("concurrent","data");
x.t("sets","important");
x.t("string","careful");
x.t("integrity","access");
x.t("integrity","keys");
x.t("int","contents");
x.t("int","return");
x.t("int","value");
x.t("write","plugins");
x.t("accessed","simultane");
x.t("thread","method");
x.t("thread","creates");
x.t("thread","time");
x.t("thread","problems");
x.t("thread","thread");
x.t("thread","safe");
x.t("thread","safety");
x.t("thread","running");
x.t("thread","waiting");
x.t("thread","done");
x.t("thread","starts");
x.t("thread","finishes");
x.t("thread","run");
x.t("thread","waits");
x.t("flow","may");
x.t("flow","messaging");
x.t("problems","plugin");
x.t("problems","discussed");
x.t("problems","aware");
x.t("problems","production");
x.t("problems","occur");
x.t("multi-thread","situations");
x.t("second","thread");
x.t("earlier","example");
x.t("earlier","section");
x.t("defining","block");
x.t("realistic","heavy");
x.t("absolutely","singleton");
x.t("nated","batch");
x.t("logically","database");
x.t("rely","anything");
x.t("clusters","gosu");
x.t("clusters","messaging");
x.t("clusters","additionally");
x.t("clusters","generally");
x.t("request","single");
x.t("request","http");
x.t("request","message");
x.t("store","state-specific");
x.t("store","value");
x.t("store","temporary");
x.t("store","data");
x.t("store","mapping");
x.t("present","special");
x.t("techniques","discussed");
x.t("techniques","plugin");
x.t("error","occurred");
x.t("error","synchronizing");
x.t("configured","studio");
x.t("contrast","object");
x.t("sometimes","no");
x.t("approaches","protects");
x.t("approaches","thread");
x.t("blocks","synchronized");
x.t("blocks","code");
x.t("logic","multi-user");
x.t("logic","realistic");
x.t("logic","something");
x.t("something","appropriate");
x.t("frequency","thread");
x.t("strongly","discourages");
x.t("deployed","every");
x.t("especially","careful");
x.t("collectively","requirements");
x.t("obvious","place");
x.t("know","static");
x.t("know","server\u2019s");
x.t("loads","multi-user");
x.t("loads","test");
x.t("syntax","necessary");
x.t("syntax","error");
x.t("mypluginclass","implements");
x.t("feature","java");
x.t("feature","called");
x.t("issues","related");
x.t("issues","gosu");
x.t("issues","thread");
x.t("affects","gosu");
x.t("first","thread");
x.t("setparameters","method");
x.t("setparameters","exactly");
x.t("smaller","granularity");
x.t("block-level","synchronization");
x.t("space","write");
x.t("guidewire_selectall","var");
x.t("number","simultaneous");
x.t("cause","serious");
x.t("control","testing");
x.t("constructors","cannot");
x.t("constructors","sense");
x.t("getinstance","return");
x.t("communicate","among");
x.t("function","guidewire_selectall");
x.t("cluster","rule");
x.t("cluster","design");
x.t("cluster","instances");
x.t("cluster","consequently");
x.t("cluster","server");
x.t("design","plugin");
x.t("design","design");
x.t("design","code");
x.t("design","plugins");
x.t("approach","protects");
x.t("approach","ensure");
x.t("approach","described");
x.t("continuing","compared");
x.t("implements","imyplugininterface");
x.t("different","synchronized");
x.t("different","plugin");
x.t("different","messaging");
x.t("different","threads");
x.t("unique","user");
x.t("safe","access");
x.t("safe","handle");
x.t("safe","setparameters");
x.t("safe","important");
x.t("safe","java");
x.t("safe","typical");
x.t("safe","object");
x.t("may","multiple");
x.t("may","call");
x.t("carefully","test");
x.t("carefully","code");
x.t("cannot","synchronized");
x.t("cannot","run");
x.t("private","static");
x.t("private","mysingleton");
x.t("define","synchronized");
x.t("singleton","implemented");
x.t("singleton","java");
x.t("singleton","instances");
x.t("singleton","synchronize");
x.t("singleton","using");
x.t("language","static");
x.t("language","gosu");
x.t("aware","storing");
x.t("aware","problems");
x.t("stores","state");
x.t("replace","static");
x.t("instead","using");
x.t("instead","java.util.concurrent.concurrenthashmap");
x.t("(mypluginclass.class)","//");
x.t("desig","nated");
x.t("transport","message");
x.t("types","describes");
x.t("types","even");
x.t("section","restriction");
x.t("section","apply");
x.t("section","ensure");
x.t("section","synchronizing");
x.t("keyword","synchronized");
x.t("keyword","method");
x.t("keyword","pass");
x.t("syncced","method");
x.t("real-world","cases");
x.t("important","thing");
x.t("important","gosu");
x.t("important","avoid");
x.t("important","important");
x.t("important","information");
x.t("follow","rules");
x.t("code","safely");
x.t("code","complex");
x.t("code","support");
x.t("code","calls");
x.t("code","lock");
x.t("code","convert");
x.t("code","gosu");
x.t("code","accordingly");
x.t("code","heavy");
x.t("code","thread");
x.t("code","something");
x.t("code","syntax");
x.t("code","carefully");
x.t("code","real-world");
x.t("code","java");
x.t("code","synchronize");
x.t("code","class");
x.t("code","waits");
x.t("code","associated");
x.t("identifier","classname");
x.t("identifier","context");
x.t("mylock","new");
x.t("reduces","frequency");
x.t("interactions","external");
x.t("safety","static");
x.t("safety","synchronization");
x.t("safety","apis");
x.t("safety","challenges");
x.t("safety","applies");
x.t("safety","problems");
x.t("safety","issues");
x.t("safety","ensure");
x.t("safety","messaging");
x.t("safety","additionally");
x.t("instantiate","batch");
x.t("state-specific","data");
x.t("return","_instance");
x.t("return","contents");
x.t("fully","operate");
x.t("message","reply");
x.t("message","request");
x.t("message","transport");
x.t("environment","plugins");
x.t("environment","using");
x.t("environment","difficult");
x.t("triggered","rules");
x.t("affect","performance");
x.t("known","blocking");
x.t("thread-safety","issues");
x.t("previous","section");
x.t("database","transactions");
x.t("database","treated");
x.t("database","communicate");
x.t("database","java");
x.t("java","synchronized");
x.t("java","hashmap");
x.t("java","plugin");
x.t("java","http://java.sun.com/docs/books/tutorial/essential/concurrency/index.html");
x.t("java","network");
x.t("java","http://java.sun.com/developer/technicalarticles/programming/singletons");
x.t("java","virtual");
x.t("java","provides");
x.t("java","concurrent");
x.t("java","claimcenter");
x.t("java","thread");
x.t("java","store");
x.t("java","approaches");
x.t("java","affects");
x.t("java","language");
x.t("java","keyword");
x.t("java","code");
x.t("java","java");
x.t("java","constructing");
x.t("java","natively");
x.t("java","classes");
x.t("java","plugins");
x.t("java","using");
x.t("java","class");
x.t("java","object");
x.t("non-batch","servers");
x.t("event","messaging");
x.t("ensure","multiple");
x.t("ensure","access");
x.t("ensure","safe");
x.t("ensure","code");
x.t("ensure","synchronize");
x.t("ensure","implementation");
x.t("ensure","update");
x.t("variable","public");
x.t("variable","access");
x.t("variable","code");
x.t("variable","java");
x.t("statement-level","block-level");
x.t("simultane","ously");
x.t("occurred","messsage");
x.t("rules","avoid");
x.t("rules","sets");
x.t("rules","different");
x.t("sessions","plugin");
x.t("sessions","multiple");
x.t("sessions","generally");
x.t("concurrency","related");
x.t("concurrency","avoid");
x.t("concurrency","design");
x.t("concurrency","important");
x.t("concurrency","concurrency");
x.t("concurrency","using");
x.t("extremely","dangerous");
x.t("extremely","difficult");
x.t("constructing","important");
x.t("compared","method");
x.t("instances","just");
x.t("instances","plugin");
x.t("instances","gosu");
x.t("instances","message");
x.t("mechanisms","setting");
x.t("synchronize","access");
x.t("synchronize","updates");
x.t("synchronize","block");
x.t("synchronize","data");
x.t("natively","gosu");
x.t("keys","values");
x.t("value","once");
x.t("value","contents");
x.t("value","//");
x.t("similar","issues");
x.t("_property1","string");
x.t("additional","code");
x.t("tools","protect");
x.t("running","synchronized");
x.t("running","put1");
x.t("running","put2");
x.t("running","approach");
x.t("running","prevents");
x.t("syncexample","private");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","support");
x.t("implementation","thread");
x.t("depending","type");
x.t("consequently","design");
x.t("several","updates");
x.t("several","pieces");
x.t("process","threads");
x.t("temporary","data");
x.t("temporary","storage");
x.t("perhaps","synchronization");
x.t("perhaps","data");
x.t("perhaps","//");
x.t("programming","certain");
x.t("classname",".class");
x.t("waiting","complete");
x.t("plan","handle");
x.t("connections","code");
x.t("connections","note");
x.t("exception","cluster");
x.t("takes","map");
x.t("[0]","public");
x.t("runs","example");
x.t("systems","example");
x.t("page","error");
x.t("registry","studio");
x.t("context","protecting");
x.t("separate","synchronized");
x.t("pieces","data");
x.t("atomic","action");
x.t("messaging","supports");
x.t("messaging","flow");
x.t("messaging","plugins");
x.t("information","possible");
x.t("information","singletons");
x.t("information","plugin");
x.t("information","event");
x.t("information","concurrency");
x.t("information","using");
x.t("data","passed");
x.t("data","synchronized");
x.t("data","instance");
x.t("data","always");
x.t("data","plugin");
x.t("data","modified");
x.t("data","thread-safe");
x.t("data","however");
x.t("data","test");
x.t("data","no");
x.t("data","alternatively");
x.t("data","thread");
x.t("data","space");
x.t("data","singleton");
x.t("data","stores");
x.t("data","types");
x.t("data","temporary");
x.t("data","shared");
x.t("data","model");
x.t("data","entity");
x.t("data","across");
x.t("typical","create");
x.t("granularity","improve");
x.t("granularity","locking");
x.t("production","plugin");
x.t("production","deployment");
x.t("shared","access");
x.t("shared","data");
x.t("shared","across");
x.t("shared","resources");
x.t("appropriate","replace");
x.t("appropriate","shared");
x.t("defined","package");
x.t("highest","performance");
x.t("values","map");
x.t("values","instead");
x.t("finer","granularity");
x.t("greatly","using");
x.t("case","threads");
x.t("simultaneous","calls");
x.t("simultaneous","threads");
x.t("called","synchronization");
x.t("called","multiple");
x.t("problem","extremely");
x.t("described","earlier");
x.t("note","java");
x.t("note","rules");
x.t("note","similar");
x.t("note","exception");
x.t("plugins","possible");
x.t("plugins","exist");
x.t("plugins","related");
x.t("plugins","support");
x.t("plugins","multiple");
x.t("plugins","claimcenter");
x.t("plugins","rely");
x.t("plugins","especially");
x.t("plugins","know");
x.t("plugins","instantiate");
x.t("plugins","information");
x.t("plugins","called");
x.t("two","synchronized");
x.t("two","different");
x.t("two","threads");
x.t("classes","just");
x.t("classes","enforce");
x.t("classes","triggered");
x.t("classes","synchronize");
x.t("classes","defined");
x.t("done","continuing");
x.t("done","object");
x.t("sense","thread");
x.t("great","care");
x.t("debug","timing");
x.t("debug","information");
x.t("cases","dangerous");
x.t("cases","perhaps");
x.t("cases","finer");
x.t("object\u2019s","static");
x.t("mark","methods");
x.t("prevents","put1");
x.t("prevents","put2");
x.t("prevents","two");
x.t("server\u2019s","plugins");
x.t("call","two");
x.t("call","plugins");
x.t("experienced","multi-threaded");
x.t("package","automatically");
x.t("package","java.util.concurrent");
x.t("mapping","keys");
x.t("hosting","static");
x.t("operate","logically");
x.t("service","multiple");
x.t("storage","unique");
x.t("multi-threaded","code");
x.t("multi-threaded","environment");
x.t("multi-threaded","programming");
x.t("relevant","data");
x.t("relevant","entity");
x.t("model","extension");
x.t("entity","shares");
x.t("entity","including");
x.t("following","sections");
x.t("following","prevents");
x.t("special","method");
x.t("special","status");
x.t("special","challenges");
x.t("run","synchronized");
x.t("run","once");
x.t("run","thread");
x.t("run","syncced");
x.t("starts","synchronized");
x.t("starts","block");
x.t("finishes","known");
x.t("finishes","running");
x.t("general","example");
x.t("class","static");
x.t("class","variables");
x.t("class","mysingleton");
x.t("class","really");
x.t("class","initialized");
x.t("class","referred");
x.t("class","store");
x.t("class","mypluginclass");
x.t("class","constructors");
x.t("class","identifier");
x.t("class","variable");
x.t("class","syncexample");
x.t("class","two");
x.t("class","hosting");
x.t("class","myclass");
x.t("using","synchronized");
x.t("using","static");
x.t("using","standard");
x.t("using","singleton");
x.t("using","java");
x.t("using","class");
x.t("difficult","diagnose");
x.t("difficult","impossible");
x.t("setting","properties");
x.t("additionally","type");
x.t("additionally","note");
x.t("additionally","even");
x.t("warning","avoid");
x.t("warning","thread");
x.t("//","construct");
x.t("//","action");
x.t("//","define");
x.t("//","code");
x.t("//","synchronize");
x.t("instantiates","server");
x.t("per","instance");
x.t("per","class");
x.t("across","multiple");
x.t("across","servers");
x.t("(cluster)","plugin");
x.t("pass","java");
x.t("pass","class");
x.t("without","taking");
x.t("occur","extremely");
x.t("myclass","static");
x.t("negatively","high");
x.t("negatively","highest");
x.t("waits","until");
x.t("applying","synchronized");
x.t("associated","integration");
x.t("var","text_val=eval");
x.t("var","_property1");
x.t("describe","thread");
x.t("including","custom");
x.t("synchronizing","access");
x.t("synchronizing","block");
x.t("synchronizing","constructors");
x.t("synchronizing","data");
x.t("careful","gosu");
x.t("careful","thread");
x.t("serious","problems");
x.t("even","gosu");
x.t("even","standard");
x.t("even","accessed");
x.t("java.util.concurrent.concurrenthashmap","tools");
x.t("visible","thread");
x.t("generates","syntax");
x.t("server","instance");
x.t("server","clusters");
x.t("server","cluster");
x.t("server","desig");
x.t("server","non-batch");
x.t("server","java");
x.t("server","information");
x.t("server","note");
x.t("server","generally");
x.t("generally","speaking");
x.t("threads","simultaneously");
x.t("threads","user");
x.t("threads","however");
x.t("threads","multiple");
x.t("threads","access");
x.t("threads","configured");
x.t("threads","sometimes");
x.t("threads","cannot");
x.t("threads","follow");
x.t("threads","ensure");
x.t("threads","shared");
x.t("threads","cases");
x.t("resources","safely");
x.t("resources","static");
x.t("resources","defining");
x.t("resources","two");
x.t("object","possible");
x.t("object","locked");
x.t("object","instance");
x.t("object","until");
x.t("object","public");
x.t("object","access");
x.t("object","single");
x.t("object","interleave");
x.t("object","second");
x.t("object","instead");
x.t("object","mark");
x.t("object","class");
x.t("object","visible");
x.t("multi-server","(cluster)");
x.t("specify","plugin");
x.t("update","database");
}
