function FileData_Pairs(x)
{
x.t("interfaces","exported");
x.t("interfaces","java-specific");
x.t("interfaces","want");
x.t("interfaces","//");
x.t("iloginapi","interface");
x.t("iloginapi","log");
x.t("apihandler","handles");
x.t("leaks","client");
x.t("example","shows");
x.t("example","claimcenter");
x.t("example","java");
x.t("system.out.println","proxy");
x.t("system.out.println","last");
x.t("system.out.println","public");
x.t("system.out.println","details");
x.t("system.out.println","first");
x.t("system.out.println","exception");
x.t("supports","soap");
x.t("supports","plugins");
x.t("modes","java");
x.t("method","program");
x.t("method","results");
x.t("method","getauthenticatedproxy");
x.t("method","call");
x.t("method","obtains");
x.t("proxy","however");
x.t("proxy","--");
x.t("proxy","call");
x.t("proxy","object");
x.t("iuserapi.class","url");
x.t("version","entity");
x.t("detected","details");
x.t("rather","actual");
x.t("defines","several");
x.t("claim","user");
x.t("claim","publicid");
x.t("claim","java");
x.t("claim","note");
x.t("every","time");
x.t("exported","package");
x.t("within","studio");
x.t("files","required");
x.t("integration","guide");
x.t("create","new");
x.t("create","custom");
x.t("create","special");
x.t("studio","call");
x.t("static","void");
x.t("sufficient","roles");
x.t("non-conversational","mode");
x.t("non-conversational","soap");
x.t("aapplegate","//");
x.t("refer","entities");
x.t("instructions","code");
x.t("always","release");
x.t("always","package");
x.t("always","following");
x.t("related","classes");
x.t("related","note");
x.t("source","data");
x.t("instance","integrate");
x.t("required","compile");
x.t("avoids","incurring");
x.t("snippets","section");
x.t("void","main");
x.t("user","create");
x.t("user","user");
x.t("user","oneuser");
x.t("user","sample");
x.t("user","identity");
x.t("user","name");
x.t("user","claimcenter");
x.t("user","permissions");
x.t("user","programmatically");
x.t("user","ids");
x.t("user","authentication");
x.t("user","sign-on");
x.t("user","userapi.getuser");
x.t("try","//");
x.t("secure","sockets");
x.t("plugin","deploying");
x.t("plugin","handles");
x.t("topic","//");
x.t("program","calls");
x.t("program","exits");
x.t("uses","apilocator");
x.t("uses","apache");
x.t("last","name");
x.t("helps","track");
x.t("shows","basic");
x.t("shows","apis");
x.t("ples","using");
x.t("text_val.select","link");
x.t("interface","methods");
x.t("interface","calling");
x.t("interface","java");
x.t("interface","proxies");
x.t("interface","application");
x.t("interface","demonstrate");
x.t("oneuser","==");
x.t("oneuser","string");
x.t("oneuser","userapi.getuser");
x.t("people","helps");
x.t("register","user");
x.t("support","authentication");
x.t("mode","non-conversational");
x.t("mode","conversational");
x.t("235-53-365870","//");
x.t("claimcenter/java-api/lib/log4j-1.2.15.jar","claimcenter/java-api/lib/mailapi.jar");
x.t("basic","web");
x.t("basic","usage");
x.t("change","data");
x.t("change","server");
x.t("vary","soap");
x.t("sample","data");
x.t("sample","note");
x.t("external","tookit");
x.t("external","systems");
x.t("time","client");
x.t("time","resources");
x.t("public","static");
x.t("public","id");
x.t("public","class");
x.t("e2","system.out.println");
x.t("calls","api");
x.t("calls","claimcenter");
x.t("calls","except");
x.t("authenticate","claimcenter");
x.t("however","program");
x.t("however","application");
x.t("serviceexception","iuserapi");
x.t("http://localhost:8080/cc","//");
x.t("sockets","(ssl/https)");
x.t("connection","url");
x.t("sections","topic");
x.t("sections","//");
x.t("note.setsubject","sample");
x.t("guidewire","recommends");
x.t("guidewire","provides");
x.t("apis","example");
x.t("apis","create");
x.t("apis","soap");
x.t("apis","using");
x.t("apis","specify");
x.t("high-level","steps");
x.t("original","source");
x.t("original","package");
x.t("java-specific","apilocator");
x.t("oneuserpublicid","userapi.findpublicidbyname");
x.t("(username)","//");
x.t("require","soapadmin");
x.t("automatically","no");
x.t("handing","authentication");
x.t("text","note.settopic");
x.t("entities","reference");
x.t("default","axis");
x.t("default","600000");
x.t("default","message");
x.t("link","directly");
x.t("new","boolean");
x.t("new","proxies");
x.t("new","exception");
x.t("new","timeout");
x.t("new","note");
x.t("new","integer");
x.t("want","typical");
x.t("ated","libraries");
x.t("==","null");
x.t("details","user");
x.t("details","soap");
x.t("details","e2.getmessage");
x.t("certain","users");
x.t("thrown","claimcenter\u00f6");
x.t("closely","follow");
x.t("oneuser.getpublicid","system.out.println");
x.t(".getfirstname","system.out.println");
x.t("messsage","claimcenter");
x.t("doesn't","call");
x.t("found","system.out.println");
x.t("(false)","try");
x.t("need","refer");
x.t("recommends","java");
x.t("improves","performance");
x.t("id","oneuser.getpublicid");
x.t("id","soap");
x.t("id","based");
x.t("id","setting");
x.t("track","original");
x.t("track","code");
x.t("add","note");
x.t("jar","files");
x.t("guide","web");
x.t("api","interfaces");
x.t("api","proxy");
x.t("api","user");
x.t("api","interface");
x.t("api","calls");
x.t("api","name");
x.t("api","userapi");
x.t("api","client");
x.t("api","locator");
x.t("api","proxies");
x.t("api","generated");
x.t("api","gener");
x.t("api","called");
x.t("api","classes");
x.t("api","connectivity");
x.t("api","special");
x.t("api","class");
x.t("apilocator","method");
x.t("apilocator","proxy");
x.t("apilocator","getauthenticatedproxy");
x.t("apilocator","class");
x.t("apilocator","//");
x.t("apilocator","specify");
x.t("results","lingering");
x.t("identity","sufficient");
x.t("soap","modes");
x.t("soap","version");
x.t("soap","apis");
x.t("soap","api");
x.t("soap","clients");
x.t("soap","conversational");
x.t("soap","client");
x.t("soap","protocol");
x.t("url","user");
x.t("url","http://localhost:8080/cc");
x.t("url","su");
x.t("url","getauthenticatedproxy");
x.t("throws","serviceexception");
x.t("oneuser.getcontact",".getfirstname");
x.t("oneuser.getcontact",".getlastname");
x.t("remember","give");
x.t("deploying","user");
x.t("sure","//");
x.t("directly","page");
x.t("true","independent");
x.t("potential","memory");
x.t("su","gw");
x.t("userapi.findpublicidbyname","aapplegate");
x.t("userapi.findpublicidbyname","(username)");
x.t("imported","data");
x.t("desired","api");
x.t("writing","user");
x.t("handle","exceptions");
x.t("com.guidewire.util.webservices.soapoutboundhandler.read_timeout.set","new");
x.t("text_val.focus","text_val.select");
x.t("libraries","closely");
x.t("libraries","api");
x.t("libraries","specifically");
x.t("iclaimapi","api");
x.t("iclaimapi","may");
x.t("com.guidewire.cc.webservices.api.myserviceapi","important");
x.t("getauthenticatedproxy","method");
x.t("getauthenticatedproxy","code");
x.t("getauthenticatedproxy","pass");
x.t("name","found");
x.t("name","oneuser.getcontact");
x.t("name","string");
x.t("name","username");
x.t("name","port");
x.t("name","server");
x.t("name","user\u2019s");
x.t("no","call");
x.t("no","difference");
x.t("axis","default");
x.t("axis","configuration");
x.t("performance","java");
x.t("clients","transparently");
x.t("clients","eclipse");
x.t("references","api");
x.t("references","iuserapi");
x.t("gosu","class");
x.t("wsdl","thus");
x.t("communication","claimcenter");
x.t("transparently","caching");
x.t("custom","handing");
x.t("custom","soap");
x.t("custom","web");
x.t("handles","user");
x.t("handles","authentication");
x.t("logging","require");
x.t("note.setauthor","user.getpublicid");
x.t("dependent","jars");
x.t("claimcenter/java-api/lib/commons-logging-1.1.1.jar","claimcenter/java-api/lib/gw-axis.jar");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","java");
x.t("methods","interface");
x.t("methods","query");
x.t("methods","call");
x.t("boolean","(false)");
x.t("developers","standard");
x.t("standard","claimcenter");
x.t("releaseandlogoutallproxies","method");
x.t("namespace","always");
x.t("com.example","import");
x.t("find","claim");
x.t("claimapi.addnote","claimpublicid");
x.t("web","services");
x.t("web","application");
x.t("web","service");
x.t("javax.xml.rpc.serviceexception","import");
x.t("gw","try");
x.t("notepublicid","claimapi.addnote");
x.t("notepublicid","notepublicid");
x.t("claimcenter","iloginapi");
x.t("claimcenter","supports");
x.t("claimcenter","integration");
x.t("claimcenter","user");
x.t("claimcenter","change");
x.t("claimcenter","external");
x.t("claimcenter","authenticate");
x.t("claimcenter","apis");
x.t("claimcenter","web");
x.t("claimcenter","internal");
x.t("claimcenter","calling");
x.t("claimcenter","java");
x.t("claimcenter","users");
x.t("claimcenter","generates");
x.t("claimcenter","server");
x.t("string","oneuserpublicid");
x.t("string","url");
x.t("string","notepublicid");
x.t("string","string");
x.t("string","claimpublicid");
x.t("string","username");
x.t("string","args");
x.t("e2.printstacktrace","//");
x.t("exam","ples");
x.t("examine","exceptions");
x.t("understand","approach");
x.t("problems","track");
x.t("permissions","user");
x.t("permissions","desired");
x.t("permissions","special-casing");
x.t("userapi","null");
x.t("userapi","(iuserapi)");
x.t("claimapi.findpublicidbyclaimnumber","235-53-365870");
x.t("claimcenter\u00f6","//");
x.t("error","occurred");
x.t("independent","original");
x.t("contrast","claimcenter");
x.t("approaches","server-client");
x.t("600000","milliseconds");
x.t("lingering","server");
x.t("next","public");
x.t("finally","exits");
x.t("give","user");
x.t("automatic","apilocator");
x.t("org.apache.axis.constants.default_message_timeout","dependent");
x.t("connecting","soap");
x.t("connecting","language");
x.t("first","name");
x.t("first","user\u2019s");
x.t("throw","new");
x.t("guidewire_selectall","var");
x.t("apilocator.releaseandlogoutallproxies","need");
x.t("apilocator.releaseandlogoutallproxies","different");
x.t("apilocator.releaseandlogoutallproxies","important");
x.t("apilocator.releaseandlogoutallproxies","code");
x.t("function","guidewire_selectall");
x.t("implements","web");
x.t("approach","no");
x.t("design","custom");
x.t("may","custom");
x.t("different","user");
x.t("different","connection");
x.t("different","systems");
x.t("different","server");
x.t("corporate","ldap");
x.t("author","note.setauthor");
x.t("language","interface");
x.t("language","java");
x.t("language","following");
x.t("language","log");
x.t("language","integrate");
x.t("requests","developers");
x.t("almost","soap");
x.t("soaptest1","public");
x.t("conversational","non-conversational");
x.t("conversational","mode");
x.t("programmatically","add");
x.t("publicid","claim");
x.t("section","shows");
x.t("section","basic");
x.t("section","contains");
x.t("exits","always");
x.t("exits","log");
x.t("release","proxies");
x.t("directory","register");
x.t("internal","authentication");
x.t("compile","java");
x.t("calling","apilocator");
x.t("calling","methods");
x.t("calling","web");
x.t("calling","apilocator.releaseandlogoutallproxies");
x.t("important","understand");
x.t("important","perspective");
x.t("claimpublicid","claimapi.findpublicidbyclaimnumber");
x.t("claimpublicid","note");
x.t("client","language");
x.t("client","code");
x.t("client","examples");
x.t("client","following");
x.t("code","snippets");
x.t("code","support");
x.t("code","handle");
x.t("code","connecting");
x.t("code","requests");
x.t("code","completes");
x.t("code","effectively");
x.t("code","similar");
x.t("code","module");
x.t("code","timeout");
x.t("code","following");
x.t("code","catch");
x.t("follow","instructions");
x.t("follow","high-level");
x.t("steps","apilocator");
x.t("steps","references");
x.t("reference","service");
x.t("reference","entity");
x.t("reference","referring");
x.t("claimcenter/java-api/lib/gw-axis.jar","claimcenter/java-api/lib/gw-util.jar");
x.t("thus","vary");
x.t("completes","failure");
x.t("slightly","different");
x.t("ids","different");
x.t("locator","override");
x.t("override","default");
x.t("override","timeout");
x.t("jars","java");
x.t("logs","server");
x.t("memory","leaks");
x.t("database","different");
x.t("login","logout");
x.t("previous","sections");
x.t("previous","section");
x.t("message","timeout");
x.t("java","apihandler");
x.t("java","uses");
x.t("java","guidewire");
x.t("java","api");
x.t("java","sure");
x.t("java","soap");
x.t("java","libraries");
x.t("java","references");
x.t("java","web");
x.t("java","contrast");
x.t("java","function");
x.t("java","language");
x.t("java","calling");
x.t("java","follow");
x.t("java","code");
x.t("java","class");
x.t("finished","log");
x.t("effectively","logs");
x.t("tookit","namespace");
x.t("actual","people");
x.t("(notetopictype.tc_general)","note.setconfidential");
x.t("occurred","messsage");
x.t("sessions","potential");
x.t("null","user");
x.t("null","throw");
x.t("sys","string");
x.t("(iuserapi)","apilocator.getauthenticatedproxy");
x.t("existing","claim");
x.t("note.settopic","(notetopictype.tc_general)");
x.t("claimcenter/java-api/lib/jaxrpc-noqname.jar","claimcenter/java-api/lib/log4j-1.2.15.jar");
x.t("include","iclaimapi");
x.t("specifically","java");
x.t("failure","call");
x.t("username","system.out.println");
x.t("username","sys");
x.t("(12345)","override");
x.t("configuration","constant");
x.t("main","string");
x.t("additional","permissions");
x.t("usage","claimcenter");
x.t("similar","following");
x.t("user.getpublicid","//");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("proxies","system.out.println");
x.t("proxies","every");
x.t("proxies","avoids");
x.t("proxies","apilocator.releaseandlogoutallproxies");
x.t("proxies","//");
x.t("--","doesn't");
x.t("several","approaches");
x.t("constant","org.apache.axis.constants.default_message_timeout");
x.t("generated","libraries");
x.t("import","web");
x.t("import","javax.xml.rpc.serviceexception");
x.t("import","com.guidewire.cc.webservices.entity");
x.t("import","com.guidewire.util.webservices.apilocator");
x.t("import","com.guidewire.cc.webservices.api");
x.t("exception","detected");
x.t("exception","user");
x.t("exception","e2");
x.t("exception","examine");
x.t(".getlastname","catch");
x.t("server-client","communication");
x.t("services","(soap)");
x.t("(soap)","calling");
x.t("systems","rather");
x.t("systems","guidewire");
x.t("systems","help");
x.t("authentication","instance");
x.t("authentication","plugin");
x.t("authentication","automatically");
x.t("authentication","certain");
x.t("authentication","api");
x.t("authentication","soap");
x.t("authentication","directory");
x.t("authentication","section");
x.t("authentication","plugins");
x.t("authentication","users");
x.t("authentication","connect");
x.t("represent","systems");
x.t("claimcenter/java-api/lib/commons-discovery.jar","claimcenter/java-api/lib/commons-logging-1.1.1.jar");
x.t("claimcenter/java-api/lib/gw-util.jar","claimcenter/java-api/lib/jaxrpc-noqname.jar");
x.t("page","error");
x.t("myserviceapi","reference");
x.t("gener","ated");
x.t("interface\u2019s","methods");
x.t("help","debug");
x.t("eclipse","claimcenter/java-api/lib/commons-discovery.jar");
x.t("eclipse","following");
x.t("typical","applications");
x.t("query","claimcenter");
x.t("data","remember");
x.t("data","database");
x.t("data","finished");
x.t("data","note");
x.t("iuserapi","iclaimapi");
x.t("iuserapi","userapi");
x.t("(oneuserpublicid)","oneuser");
x.t("e2.getmessage","e2.printstacktrace");
x.t("module","imported");
x.t("information","writing");
x.t("note.setbody","sample");
x.t("defined","within");
x.t("appropriate","//");
x.t("sign-on","corporate");
x.t("examples","previous");
x.t("timeout","apilocator");
x.t("timeout","java");
x.t("timeout","milliseconds");
x.t("timeout","using");
x.t("timeout","12345");
x.t("application","secure");
x.t("application","finally");
x.t("application","exits");
x.t("soapadmin","permission");
x.t("note.setconfidential","new");
x.t("claimcenter/java-api/lib/mailapi.jar","claimcenter/java-api/lib/wsdl4j.jar");
x.t("called","myserviceapi");
x.t("com.guidewire.cc.webservices.entity","import");
x.t("args","throws");
x.t("port","web");
x.t("port","appropriate");
x.t("(ssl/https)","pass");
x.t("permission","apis");
x.t("ldap","authentication");
x.t("perspective","java");
x.t("classes","wsdl");
x.t("classes","special");
x.t("note","change");
x.t("note","note.setsubject");
x.t("note","text");
x.t("note","new");
x.t("note","find");
x.t("note","design");
x.t("note","existing");
x.t("note","note.setbody");
x.t("note","note");
x.t("note","real");
x.t("note","catch");
x.t("note","object");
x.t("userapi.getuser","userapi.findpublicidbyname");
x.t("userapi.getuser","(oneuserpublicid)");
x.t("users","example");
x.t("users","details");
x.t("users","soap");
x.t("users","represent");
x.t("users","ldap");
x.t("plugins","related");
x.t("plugins","information");
x.t("plugins","optionally");
x.t("protocol","defines");
x.t("done","previous");
x.t("milliseconds","default");
x.t("milliseconds","com.guidewire.util.webservices.soapoutboundhandler.read_timeout.set");
x.t("milliseconds","web");
x.t("integer","(12345)");
x.t("connectivity","authentication");
x.t("applications","include");
x.t("based","user");
x.t("debug","problems");
x.t("optionally","manage");
x.t("package","gosu");
x.t("package","com.example");
x.t("package","package");
x.t("package","com.guidewire.cc.webservices.api");
x.t("call","iloginapi");
x.t("call","add");
x.t("call","api");
x.t("call","apilocator");
x.t("call","releaseandlogoutallproxies");
x.t("call","interface\u2019s");
x.t("real","code");
x.t("service","interfaces");
x.t("service","external");
x.t("service","apis");
x.t("service","api");
x.t("service","com.guidewire.cc.webservices.api.myserviceapi");
x.t("service","clients");
x.t("service","client");
x.t("service","java");
x.t("service","defined");
x.t("service","connectivity");
x.t("caching","authenticated");
x.t("special","soap");
x.t("special","claimcenter");
x.t("special","users");
x.t("following","example");
x.t("following","jar");
x.t("following","steps");
x.t("following","code");
x.t("following","package");
x.t("following","//");
x.t("entity","oneuser");
x.t("entity","public");
x.t("except","logging");
x.t("manage","user");
x.t("class","always");
x.t("class","related");
x.t("class","uses");
x.t("class","improves");
x.t("class","apilocator");
x.t("class","implements");
x.t("class","soaptest1");
x.t("connect","claimcenter");
x.t("using","apilocator");
x.t("using","java");
x.t("//","method");
x.t("//","user");
x.t("//","however");
x.t("//","new");
x.t("//","api");
x.t("//","find");
x.t("//","next");
x.t("//","first");
x.t("//","connecting");
x.t("//","apilocator.releaseandlogoutallproxies");
x.t("//","previous");
x.t("//","java");
x.t("//","import");
x.t("//","application");
x.t("//","note");
x.t("//","note\u00eds");
x.t("//","log");
x.t("com.guidewire.util.webservices.apilocator","public");
x.t("logout","code");
x.t("demonstrate","basic");
x.t("note\u00eds","author");
x.t("setting","timeout");
x.t("apache","axis");
x.t("authenticated","proxies");
x.t("pass","api");
x.t("pass","slightly");
x.t("password","method");
x.t("returns","soap");
x.t("catch","exception");
x.t("catch","exceptions");
x.t("unnecessary","time");
x.t("obtains","returns");
x.t("referring","reference");
x.t("var","text_val=eval");
x.t("incurring","unnecessary");
x.t("apilocator.getauthenticatedproxy","iuserapi.class");
x.t("roles","permissions");
x.t("com.guidewire.cc.webservices.api","create");
x.t("com.guidewire.cc.webservices.api","true");
x.t("com.guidewire.cc.webservices.api","import");
x.t("log","references");
x.t("log","claimcenter");
x.t("log","automatic");
x.t("log","calling");
x.t("log","java");
x.t("log","server");
x.t("generates","almost");
x.t("exceptions","user");
x.t("exceptions","thrown");
x.t("exceptions","string");
x.t("integrate","claimcenter");
x.t("resources","new");
x.t("server","proxy");
x.t("server","url");
x.t("server","name");
x.t("server","calling");
x.t("server","sessions");
x.t("server","port");
x.t("server","done");
x.t("server","log");
x.t("user\u2019s","public");
x.t("user\u2019s","password");
x.t("object","claimcenter");
x.t("object","note");
x.t("specify","new");
x.t("specify","additional");
x.t("difference","login");
x.t("special-casing","users");
x.t("contains","exam");
x.t("12345","milliseconds");
}
