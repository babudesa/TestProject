function FileData_Pairs(x)
{
x.t("unlike","types");
x.t("metaphor","apply");
x.t("example","anything");
x.t("example","creates");
x.t("example","uses");
x.t("example","assumes");
x.t("example","start");
x.t("example","queries");
x.t("example","customize");
x.t("example","gwrunnable");
x.t("example","following");
x.t("example","setting");
x.t("coding","startable");
x.t("complex","example");
x.t("jmsmessagetransport","sending");
x.t("system.out.println","startable");
x.t("publishing","claimcenter");
x.t("provide","detailed");
x.t("method","example");
x.t("method","method");
x.t("method","parameter");
x.t("method","commits");
x.t("method","create");
x.t("method","callback");
x.t("method","execute");
x.t("method","creates");
x.t("method","start");
x.t("method","signature");
x.t("method","includes");
x.t("method","appropriately");
x.t("method","demonstrates");
x.t("method","stop");
x.t("method","constructor");
x.t("method","perform");
x.t("method","argument");
x.t("method","internal");
x.t("method","variant");
x.t("method","adds");
x.t("method","startableplugincallbackhandler");
x.t("method","takes");
x.t("method","called");
x.t("method","destroys");
x.t("method","package");
x.t("method","signatures");
x.t("method","analogous");
x.t("method","returns");
x.t("combined","single");
x.t("parameter","table");
x.t("parameter","callback");
x.t("parameter","stop");
x.t("transactions","information");
x.t("properties","new");
x.t("properties","desired");
x.t("properties","correct");
x.t("construct","override");
x.t("goodbye","_callback");
x.t("receiver","@param");
x.t("receiver","protected");
x.t("receiver","_queuereceiver");
x.t("receiver","e.getmessage");
x.t("receiver","@return");
x.t("receiver","_queuesession.createreceiver");
x.t("receiver","catch");
x.t("super.shutdown","override");
x.t("jms-specific","logic");
x.t("queuesession","null");
x.t("@param","payload");
x.t("@param","listener");
x.t("@param","queuereceivername");
x.t("@param","queuesendername");
x.t("gw.testharness.testbase","uses");
x.t("notes","java");
x.t("library","files");
x.t("just","plugin");
x.t("just","start");
x.t("version","callback");
x.t("version","however");
x.t("version","runwithnewbundle");
x.t("anything","useful");
x.t("createqueuereceiver","queuereceivername");
x.t("createqueuereceiver","send_queue_name");
x.t("javax.jms.queuesender","uses");
x.t("protected","static");
x.t("protected","function");
x.t("protected","abstract");
x.t("exceptionlister","public");
x.t("pattern","creating");
x.t("within","claimcenter");
x.t("within","code");
x.t("needs","maintain");
x.t("needs","java");
x.t("needs","consider");
x.t("files","user");
x.t("files","places");
x.t("files","persistence");
x.t("files","startable");
x.t("implement","plugin");
x.t("implement","following");
x.t("javax.naming.initialcontext","uses");
x.t("createjmsmessage","payload");
x.t("createjmsmessage","(message)");
x.t("_queueconnection.setexceptionlistener","(this)");
x.t("java.lang.runnable","example");
x.t("integration","guide");
x.t("studio","just");
x.t("studio","plugins");
x.t("background","processes");
x.t("background","process");
x.t("create","reply");
x.t("create","connection");
x.t("create","queue");
x.t("create","new");
x.t("create","jms");
x.t("create","non-transaction");
x.t("create","custom");
x.t("create","bundle");
x.t("create","send");
x.t("create","separate");
x.t("refer","returning");
x.t("_callback","startableplugincallbackhandler");
x.t("_callback","null");
x.t("_callback","cbh");
x.t("isstarting","boolean");
x.t("commits","block");
x.t("alternate","method");
x.t("alternate","version");
x.t("built-in","user");
x.t("init","connection");
x.t("init","queues");
x.t("init","_callback.log");
x.t("init","//");
x.t("static","final");
x.t("static","class");
x.t("jms_url","string");
x.t("jms_url","//");
x.t("sending","jms");
x.t("sending","message");
x.t("table","persistence");
x.t("mechanism","information");
x.t("variables","var");
x.t("callback","handler");
x.t("callback","thread");
x.t("callback","important");
x.t("callback","handler\u2019s");
x.t("bundles","transactions");
x.t("bundles","simple");
x.t("bundles","important");
x.t("related","note");
x.t("gw.api.system.server.runlevel","uses");
x.t("client.init","client.send");
x.t("instructions","slightly");
x.t("apply","integrations");
x.t("action","within");
x.t("customer-defined","background");
x.t("likely","case");
x.t("arguments","note");
x.t("void","_callback");
x.t("void","try");
x.t("void","_queuereceiver");
x.t("void","_callback.log");
x.t("void","run");
x.t("void","//");
x.t("preupdate","rules");
x.t("parts","tasks");
x.t("gw.api.startable.istartableplugin","uses");
x.t("listens","package");
x.t("messagereceived.getstringproperty","body_property_name");
x.t("loggercategory.messaging","examples");
x.t("(myblock)","information");
x.t("plugin","example");
x.t("plugin","method");
x.t("plugin","needs");
x.t("plugin","studio");
x.t("plugin","interface");
x.t("plugin","listener");
x.t("plugin","change");
x.t("plugin","start");
x.t("plugin","relatively");
x.t("plugin","overview");
x.t("plugin","tasks");
x.t("plugin","modifies");
x.t("plugin","find");
x.t("plugin","place");
x.t("plugin","manipulate");
x.t("plugin","underlying");
x.t("plugin","imple");
x.t("plugin","internal");
x.t("plugin","basics");
x.t("plugin","types");
x.t("plugin","important");
x.t("plugin","code");
x.t("plugin","java");
x.t("plugin","include");
x.t("plugin","implementation");
x.t("plugin","page");
x.t("plugin","information");
x.t("plugin","sense");
x.t("plugin","note");
x.t("plugin","call");
x.t("plugin","run");
x.t("plugin","following");
x.t("plugin","class");
x.t("plugin","including");
x.t("integrations","require");
x.t("integrations","need");
x.t("user","version");
x.t("user","user");
x.t("user","contexts");
x.t("user","interface");
x.t("user","entities");
x.t("user","name");
x.t("user","second");
x.t("user","define");
x.t("user","code");
x.t("user","null");
x.t("user","depending");
x.t("user","context");
x.t("user","entity");
x.t("user","associated");
x.t("current","user");
x.t("current","state");
x.t("current","(writable)");
x.t("current","claimcenter");
x.t("current","bundle");
x.t("execute","method");
x.t("execute","execute");
x.t("execute","methods");
x.t("execute","whose");
x.t("creates","new");
x.t("creates","jms");
x.t("prepared","current");
x.t("try","_queueconnection.close");
x.t("try","factory");
x.t("try","//");
x.t("try","initqueueconnectionandsession");
x.t("try","var");
x.t("dateutil.currentdate","private");
x.t("discussed","previous");
x.t("reply","plugin");
x.t("reply","queue");
x.t("reply","acknowledgment");
x.t("uses","gw.testharness.testbase");
x.t("uses","javax.jms.queuesender");
x.t("uses","javax.naming.initialcontext");
x.t("uses","gw.api.system.server.runlevel");
x.t("uses","gw.api.startable.istartableplugin");
x.t("uses","javax.jms.jmsexception");
x.t("uses","com.guidewire.logging.loggercategory");
x.t("uses","property");
x.t("uses","java.util.hashtable");
x.t("uses","javax.jms.queuereceiver");
x.t("uses","javax.jms.queuesession");
x.t("uses","javax.jms.messagelistener");
x.t("uses","base");
x.t("uses","javax.naming.namingexception");
x.t("uses","javax.jms.session");
x.t("uses","javax.jms.queueconnectionfactory");
x.t("uses","gw.api.startable.startableplugincallbackhandler");
x.t("uses","javax.naming.context");
x.t("uses","java.lang.runtimeexception");
x.t("uses","gw.testharness.runlevel");
x.t("uses","javax.jms.message");
x.t("uses","gw.api.util.dateutil");
x.t("uses","gw.testharness.donotruninharness");
x.t("uses","javax.jms.queueconnection");
x.t("uses","gw.testharness.productundertest");
x.t("uses","javax.jms.exceptionlistener");
x.t("uses","gw.api.startable.startablepluginstate");
x.t("contexts","no");
x.t("contexts","startable");
x.t("shows","simple");
x.t("remote","system");
x.t("connectionfactory","protected");
x.t("(connection_factory_name)","queueconnectionfactory");
x.t("text_val.select","link");
x.t("register","custom");
x.t("register","startable");
x.t("selectively","start");
x.t("interface","unlike");
x.t("interface","example");
x.t("interface","implement");
x.t("interface","studio");
x.t("interface","user");
x.t("interface","uses");
x.t("interface","name");
x.t("interface","gosu");
x.t("interface","implementation");
x.t("interface","following");
x.t("interface","contains");
x.t("state","user");
x.t("state","plugin");
x.t("state","property");
x.t("state","started");
x.t("state","startablepluginstate");
x.t("state","code");
x.t("state","variable");
x.t("state","information");
x.t("state","itself");
x.t("look","simple");
x.t("working","bundles");
x.t("support","blocks");
x.t("javax.jms.jmsexception","uses");
x.t("sender","@param");
x.t("sender","try");
x.t("sender","@throws");
x.t("sender","@return");
x.t("sender","closejmsconnection");
x.t("errors","unrecoverable");
x.t("type","customer-defined");
x.t("type","plugin");
x.t("type","in-line");
x.t("type","startableplugincallbackhandler");
x.t("listener","listener");
x.t("listener","queue");
x.t("listener","start");
x.t("listener","messagelistener");
x.t("listener","stop");
x.t("listener","code");
x.t("listener","listening");
x.t("listener","similar");
x.t("listener","defined");
x.t("batch","processes");
x.t("batch","server");
x.t("change","find");
x.t("change","pcf");
x.t("thing","define");
x.t("basic","structure");
x.t("isshuttingdown","boolean");
x.t("please","ensure");
x.t("payload","payload");
x.t("payload","string");
x.t("payload","@return");
x.t("payload","return");
x.t("close","jms");
x.t("initially","runs");
x.t("external","code");
x.t("external","system");
x.t("non-null","values");
x.t("com.guidewire.logging.loggercategory","uses");
x.t("public","void");
x.t("public","function");
x.t("public","override");
x.t("reset","queues");
x.t("_queuesession.createsender","(sendqueue)");
x.t("explicitly","//");
x.t("(send_queue_name)","important");
x.t("form","startable");
x.t("sort","listener");
x.t("however","metaphor");
x.t("however","alternate");
x.t("however","start");
x.t("however","need");
x.t("however","instead");
x.t("however","java");
x.t("trigger","action");
x.t("down","false");
x.t("down","true");
x.t("connection","create");
x.t("connection","jms");
x.t("connection","start");
x.t("connection","session");
x.t("connection","factory");
x.t("connection","takes");
x.t("onexception","jmsexception");
x.t("(runlevel.none)","class");
x.t("multiple","variants");
x.t("variants","gwrunnable");
x.t("queue","receiver");
x.t("queue","create");
x.t("queue","listens");
x.t("queue","selectively");
x.t("queue","sender");
x.t("queue","listener");
x.t("queue","connection");
x.t("queue","_queuereceiver.setmessagelistener");
x.t("queue","up");
x.t("queue","private");
x.t("queue","package");
x.t("queue","startable");
x.t("require","external");
x.t("property","state");
x.t("property","results");
x.t("property","definition");
x.t("property","accessor");
x.t("property","writable");
x.t("property","startable");
x.t("entities","current");
x.t("entities","track");
x.t("entities","sets");
x.t("entities","database");
x.t("entities","startable");
x.t("assumes","listener");
x.t("original","entity");
x.t("gw.api.startableplugin","uses");
x.t("(this)","//");
x.t("(this)","catch");
x.t("unrecoverable","throw");
x.t("put","java");
x.t("guidewire","entities");
x.t("link","directly");
x.t("jms","init");
x.t("jms","errors");
x.t("jms","connection");
x.t("jms","queue");
x.t("jms","url");
x.t("jms","_state");
x.t("jms","shutdown");
x.t("jms","override");
x.t("jms","message");
x.t("jms","exception");
x.t("jms","startable");
x.t("jms","server");
x.t("start","method");
x.t("start","listener");
x.t("start","stop");
x.t("start","up");
x.t("start","request");
x.t("start","_queueconnection");
x.t("start","method\u2019s");
x.t("start","service");
x.t("start","cbh");
x.t("new","entities");
x.t("new","jms");
x.t("new","loggercategory");
x.t("new","initialcontext");
x.t("new","jmsclient");
x.t("new","hashtable");
x.t("new","runtimeexception");
x.t("new","class");
x.t("single","method");
x.t("single","variable");
x.t("signature","execute");
x.t("signature","gw.transaction.transaction.runwithnewbundle");
x.t("_queuereceiver.setmessagelistener","(this)");
x.t("_queuereceiver.setmessagelistener","(null)");
x.t("onmessage","messagereceived");
x.t("body_property_name","payload");
x.t("body_property_name","string");
x.t("body_property_name","_callback.log");
x.t("want","_callback.execute");
x.t("relationship","jms");
x.t("block","however");
x.t("block","argument");
x.t("block","shortcut");
x.t("block","define");
x.t("block","changes");
x.t("block","runs");
x.t("block","special");
x.t("block","run");
x.t("block","anonymous");
x.t("block","pass");
x.t("transaction.getcurrent","current");
x.t("includes","boolean");
x.t("gw.transaction.transaction.current","//");
x.t("indirectly","runs");
x.t("care","session");
x.t("messsage","claimcenter");
x.t("ment","sort");
x.t("need","create");
x.t("need","user");
x.t("need","listener");
x.t("need","custom");
x.t("need","different");
x.t("need","reference");
x.t("need","send");
x.t("need","commit");
x.t("status","go");
x.t("status","startable");
x.t("appropriately","state");
x.t("indicates","whether");
x.t("//note","need");
x.t("java.util.hashtable","uses");
x.t("_queuesession","queuesession");
x.t("_queuesession","_queueconnection.createqueuesession");
x.t("(sendqueue)","catch");
x.t("context.initial_context_factory","org.exolab.jms.jndi.initialcontextfactory");
x.t("places","plugin");
x.t("add","method");
x.t("add","current");
x.t("add","code");
x.t("add","implementation");
x.t("add","entity");
x.t("relatively","straightforward");
x.t("typecode","typelist");
x.t("bundle.add","(e)");
x.t("complete","simple");
x.t("track","internal");
x.t("guide","plugin");
x.t("guide","put");
x.t("guide","information");
x.t("go","server");
x.t("api","startable");
x.t("simple","example");
x.t("simple","interface");
x.t("simple","gosu");
x.t("simple","//");
x.t("simple","startable");
x.t("results","add");
x.t("results","gosu");
x.t("results","query");
x.t("due","plugin");
x.t("javax.jms.queuereceiver","uses");
x.t("jms/examplequeue","protected");
x.t("ie","null");
x.t("assume","jms");
x.t("jmse.getmessage","jmse");
x.t("overview","startable");
x.t("false","start");
x.t("false","stop");
x.t("false","session.client_acknowledge");
x.t("remember","add");
x.t("messagelistener","queuereceiver");
x.t("messagelistener","var");
x.t("_logger.error","jms");
x.t("@throws","jmsexception");
x.t("@throws","initializationexception");
x.t("sendqueue","_queuesession.createqueue");
x.t("url","factory");
x.t("deploying","java");
x.t("directly","support");
x.t("directly","indirectly");
x.t("directly","page");
x.t("writing","startable");
x.t("_state","started");
x.t("_state","startablepluginstate");
x.t("_state","startablepluginstate.stopped");
x.t("_state","override");
x.t("_state","stopped");
x.t("_state","//");
x.t("true","server");
x.t("desired","result");
x.t("queues","protected");
x.t("queues","ie");
x.t("queues","initqueues");
x.t("requires","client");
x.t("_queueconnection.close","catch");
x.t("test","jms");
x.t("text_val.focus","text_val.select");
x.t("name","queue");
x.t("name","simple");
x.t("name","@return");
x.t("name","actual");
x.t("name","choose");
x.t("definition","combined");
x.t("definition","property");
x.t("definition","shortcut");
x.t("definition","earlier");
x.t("definition","var");
x.t("no","built-in");
x.t("no","arguments");
x.t("simplest","method");
x.t("simplest","version");
x.t("demonstrates","basic");
x.t("creating","block");
x.t("creating","anonymous");
x.t("javax.jms.queuesession","uses");
x.t("@runlevel","(runlevel.none)");
x.t("libraries","files");
x.t("maintain","state");
x.t("stop","method");
x.t("stop","isshuttingdown");
x.t("stop","request");
x.t("stop","whatever");
x.t("stop","view");
x.t("stop","service");
x.t("stop","startable");
x.t("initialize","queue");
x.t("initialize","queues");
x.t("initialize","receive");
x.t("initialize","factory");
x.t("initialize","send");
x.t("initialize","server");
x.t("constructor","start");
x.t("constructor","called");
x.t("handler","method");
x.t("handler","type");
x.t("handler","object");
x.t("gosu","plugin");
x.t("gosu","block");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","main");
x.t("gosu","class");
x.t("gosu","startable");
x.t("returning","query");
x.t("readonly","bundle");
x.t("tasks","method");
x.t("tasks","specific");
x.t("notifications","callback");
x.t("follows","package");
x.t("receiver.setmessagelistener","(listener)");
x.t("(properties)","//");
x.t("non-transaction","session");
x.t("custom","listener");
x.t("custom","batch");
x.t("custom","entities");
x.t("custom","code");
x.t("listen","reply");
x.t("argument","gosu");
x.t("argument","gwrunnable");
x.t("argument","runwithnewbundle");
x.t("(writable)","bundle");
x.t("perform","startable");
x.t("javax.jms.messagelistener","uses");
x.t("base","class");
x.t("initializing","queue");
x.t("_queueconnection.createqueuesession","false");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","create");
x.t("methods","multiple");
x.t("methods","start");
x.t("alternatively","combine");
x.t("shortcut","keyword");
x.t("shortcut","anonymous");
x.t("modifies","entity");
x.t("boolean","void");
x.t("boolean","variable");
x.t("useful","start");
x.t("shutdown","void");
x.t("shutdown","jmse.tostring");
x.t("shutdown","_callback.log");
x.t("shutdown","closejmsconnection");
x.t("further","message");
x.t("session","try");
x.t("session","queue");
x.t("session","requires");
x.t("session","private");
x.t("session","//");
x.t("_queueconnection.start","_queueconnection.setexceptionlistener");
x.t("inner","classes");
x.t("inner","class");
x.t("up","receiver");
x.t("up","sender");
x.t("up","false");
x.t("up","code");
x.t("up","messaging");
x.t("find","plugin");
x.t("find","whatever");
x.t("find","query");
x.t("combine","variable");
x.t("_queuereceiver","createqueuereceiver");
x.t("_queuereceiver","null");
x.t("_queuereceiver","queuereceiver");
x.t("trying","shutdown");
x.t("javax.naming.namingexception","uses");
x.t("exceptionlistener","protected");
x.t("standard","java");
x.t("standard","class");
x.t("place","java");
x.t("web","services");
x.t("web","service");
x.t("gw","plugin");
x.t("gw","api");
x.t("final","var");
x.t("(replyqueue)","receiver.setmessagelistener");
x.t("claimcenter","integration");
x.t("claimcenter","user");
x.t("claimcenter","need");
x.t("claimcenter","web");
x.t("claimcenter","users");
x.t("write","new");
x.t("accessor","(get)");
x.t("accessor","function");
x.t("accessor","show");
x.t("started","start");
x.t("started","jms");
x.t("started","stop");
x.t("started","stopped");
x.t("started","administration");
x.t("started","_callback.log");
x.t("started","additionally");
x.t("sets","state");
x.t("sets","property");
x.t("sets","up");
x.t("string","user");
x.t("string","connectionfactory");
x.t("string","listener");
x.t("string","jms/examplequeue");
x.t("string","string");
x.t("string","body");
x.t("string","_logger.info");
x.t("string","javax.jms.message");
x.t("string","properties.put");
x.t("string","tcp://localhost:3035/");
x.t("string","queuesender");
x.t("testclient","var");
x.t("outgoing","messages");
x.t("in-line","function");
x.t("in-line","anonymous");
x.t("earlier","class");
x.t("rely","non-null");
x.t("second","method");
x.t("thread","_queuereceiver");
x.t("javax.jms.session","uses");
x.t("manipulate","guidewire");
x.t("(get)","function");
x.t("simplify","code");
x.t("request","comes");
x.t("failed","listener");
x.t("failed","initialize");
x.t("javax.jms.queueconnectionfactory","uses");
x.t("jmsexception.tostring","initialize");
x.t("jndi","server");
x.t("error","sending");
x.t("error","initializing");
x.t("error","trying");
x.t("error","occurred");
x.t("menting","custom");
x.t("blocks","implement");
x.t("blocks","gosu");
x.t("blocks","inner");
x.t("queries","user");
x.t("whatever","background");
x.t("whatever","data");
x.t("body","protected");
x.t("body","messagebody");
x.t("logic","follows");
x.t("loggercategory","loggercategory.messaging");
x.t("loggercategory","new");
x.t("config","properties");
x.t("hold","current");
x.t("jmsmessage","createjmsmessage");
x.t("jmsmessage","create");
x.t("jmsmessage","_queuesession.createmessage");
x.t("occurs","protected");
x.t("initialcontext","(properties)");
x.t("finally","_queueconnection");
x.t("messages","queue");
x.t("messages","data");
x.t("messages","received");
x.t("minimum","start");
x.t("affects","entity");
x.t("throw","new");
x.t("(queuereceivername)","var");
x.t("guidewire_selectall","var");
x.t("underlying","transport");
x.t("_callback.execute","//");
x.t("_callback.execute","var");
x.t("setup","relationship");
x.t("_queuesender","null");
x.t("_queuesender","createqueuesender");
x.t("_queuesender","queuesender");
x.t("_logger.info","jmsmessagetransport");
x.t("function","createqueuereceiver");
x.t("function","createjmsmessage");
x.t("function","init");
x.t("function","state");
x.t("function","look");
x.t("function","onexception");
x.t("function","start");
x.t("function","onmessage");
x.t("function","gosu");
x.t("function","stop");
x.t("function","shutdown");
x.t("function","testclient");
x.t("function","guidewire_selectall");
x.t("function","getqueueconnectionfactory");
x.t("function","override");
x.t("function","send");
x.t("function","createqueuesender");
x.t("function","resetqueues");
x.t("function","initqueues");
x.t("function","initqueueconnectionandsession");
x.t("function","closejmsconnection");
x.t("cluster","startable");
x.t("implements","jms-specific");
x.t("implements","exceptionlistener");
x.t("implements","istartableplugin");
x.t("implements","run");
x.t("startablepluginstate","state");
x.t("startablepluginstate","return");
x.t("startablepluginstate","value");
x.t("design","pattern");
x.t("imple","ment");
x.t("imple","menting");
x.t("customize","view");
x.t("editor","following");
x.t("different","parts");
x.t("different","depending");
x.t("different","plugins");
x.t("different","users");
x.t("processes","writing");
x.t("processes","listeners");
x.t("straightforward","coding");
x.t("define","plugin");
x.t("define","in-line");
x.t("define","minimum");
x.t("define","private");
x.t("define","startable");
x.t("private","static");
x.t("private","variables");
x.t("private","methods");
x.t("private","function");
x.t("private","variable");
x.t("private","var");
x.t("startablepluginstate.stopped","//");
x.t("startablepluginstate.stopped","additionally");
x.t("startablepluginstate.stopped","var");
x.t("cannot","gosu");
x.t("whether","define");
x.t("whether","server");
x.t("queuereceivername","name");
x.t("queuereceivername","string");
x.t("(listener)","return");
x.t("receive","queue");
x.t("instead","anonymous");
x.t("instead","using");
x.t("instead","startable");
x.t("detailed","information");
x.t("language","directly");
x.t("starting","jms");
x.t("starting","true");
x.t("starting","up");
x.t("//variable","definition");
x.t("gw.api.startable.startableplugincallbackhandler","uses");
x.t("e.getmessage","override");
x.t("_queueconnection","null");
x.t("_queueconnection","queueconnection");
x.t("_queueconnection","factory.createqueueconnection");
x.t("internal","state");
x.t("internal","variable");
x.t("internal","tools");
x.t("types","instructions");
x.t("types","plugins");
x.t("changes","entity");
x.t("changes","using");
x.t("pcf","files");
x.t("transport","mechanism");
x.t("basics","startable");
x.t("keyword","simplify");
x.t("real-world","startable");
x.t("e_in_new_bundle","bundle.add");
x.t("listeners","started");
x.t("variant","pass");
x.t("gw.transaction.transaction.runwithnewbundle","bundle");
x.t("javax.naming.context","uses");
x.t("getqueueconnectionfactory","queueconnectionfactory");
x.t("getqueueconnectionfactory","catch");
x.t("namingexception","throw");
x.t("jmsclient","client.init");
x.t("jmsclient","extends");
x.t("gwrunnable","public");
x.t("gwrunnable","block");
x.t("gwrunnable","simple");
x.t("gwrunnable","myblock=new");
x.t("implementing","interface");
x.t("important","notes");
x.t("important","type");
x.t("important","change");
x.t("important","java");
x.t("important","startable");
x.t("code","prepared");
x.t("code","initially");
x.t("code","trigger");
x.t("code","start");
x.t("code","block");
x.t("code","transaction.getcurrent");
x.t("code","_state");
x.t("code","directly");
x.t("code","initialize");
x.t("code","combine");
x.t("code","affects");
x.t("code","_callbackhandler.execute");
x.t("code","running");
x.t("code","depending");
x.t("code","specific");
x.t("code","runs");
x.t("code","special");
x.t("code","run");
x.t("code","threads");
x.t("task","send");
x.t("reference","current");
x.t("reference","guide");
x.t("_queuesession.createqueue","(queuereceivername)");
x.t("_queuesession.createqueue","(queuesendername)");
x.t("client","explicitly");
x.t("client","new");
x.t("_callbackhandler.execute","(myblock)");
x.t("slightly","different");
x.t("override","protected");
x.t("override","property");
x.t("override","function");
x.t("return","receiver");
x.t("return","_queuesession.createsender");
x.t("return","_state");
x.t("return","jmsmessage");
x.t("return","private");
x.t("return","jndicontext.lookup");
x.t("tracks","started");
x.t("startableplugincallbackhandler","construct");
x.t("startableplugincallbackhandler","isstarting");
x.t("startableplugincallbackhandler","callback");
x.t("startableplugincallbackhandler","code");
x.t("startableplugincallbackhandler","override");
x.t("startableplugincallbackhandler","var");
x.t("adds","writable");
x.t("(null)","catch");
x.t("(jmse)","finally");
x.t("(jmse)","_callback.log");
x.t("abstract","function");
x.t("abstract","class");
x.t("@return","queue");
x.t("@return","jms");
x.t("listening","jms");
x.t("message","try");
x.t("message","listener");
x.t("message","external");
x.t("message","jmse.getmessage");
x.t("message","@throws");
x.t("message","notifications");
x.t("message","string");
x.t("message","body");
x.t("message","message");
x.t("message","var");
x.t("database","query");
x.t("database","transaction");
x.t("method\u2019s","isstartingup");
x.t("queueconnectionfactory","try");
x.t("queueconnectionfactory","initialize");
x.t("queueconnectionfactory","//");
x.t("given","jms");
x.t("jmsclienttest","extends");
x.t("previous","topics");
x.t("persistence","startable");
x.t("event","messaging");
x.t("istartableplugin","interface");
x.t("istartableplugin","messagelistener");
x.t("istartableplugin","right-click");
x.t("istartableplugin","var");
x.t("variable","indicates");
x.t("variable","definition");
x.t("variable","alternatively");
x.t("variable","sets");
x.t("variable","hold");
x.t("variable","define");
x.t("variable","startablepluginstate.stopped");
x.t("variable","tracks");
x.t("variable","messagebody");
x.t("whose","argument");
x.t("bundle","create");
x.t("bundle","refer");
x.t("bundle","bundles");
x.t("bundle","execute");
x.t("bundle","need");
x.t("bundle","specific");
x.t("bundle","correct");
x.t("bundle","save");
x.t("bundle","//");
x.t("bundle","your_block_body");
x.t("bundle","q.select");
x.t("bundle","modify");
x.t("java","method");
x.t("java","files");
x.t("java","gosu");
x.t("java","design");
x.t("java","cannot");
x.t("java","language");
x.t("java","plugins");
x.t("java","classes");
x.t("java","class");
x.t("java","startable");
x.t("java","plugin\u2019s");
x.t("(e)","throw");
x.t("(e)","//");
x.t("(e)","e_in_new_bundle.department");
x.t("actual","user");
x.t("ensure","config");
x.t("jndicontext","new");
x.t("occurred","messsage");
x.t("acknowledgment","however");
x.t("consider","publishing");
x.t("stopped","state");
x.t("stopped","jms");
x.t("stopped","started");
x.t("stopped","override");
x.t("stopped","using");
x.t("rules","code");
x.t("null","construct");
x.t("null","protected");
x.t("null","try");
x.t("null","public");
x.t("null","_queuereceiver.setmessagelistener");
x.t("null","_state");
x.t("null","test");
x.t("null","rely");
x.t("null","private");
x.t("null","override");
x.t("java.lang.runtimeexception","uses");
x.t("java.lang.runtimeexception","abstract");
x.t("jmsstartableplugin","extends");
x.t("jmse.tostring","super.shutdown");
x.t("connection_factory_name","string");
x.t("jmse","override");
x.t("jmse","jmsexception");
x.t("gw.testharness.runlevel","uses");
x.t("testbase","public");
x.t("configuration","plugins");
x.t("include","constructor");
x.t("factory","please");
x.t("factory","name");
x.t("factory","private");
x.t("factory","getqueueconnectionfactory");
x.t("factory","queueconnectionfactory");
x.t("factory","given");
x.t("factory","var");
x.t("hashtable","string");
x.t("session.client_acknowledge","close");
x.t("(jmsmessage)","catch");
x.t("tools","user");
x.t("tools","interface");
x.t("tools","startable");
x.t("transport\u2019s","main");
x.t("main","task");
x.t("main","startable");
x.t("right-click","interface");
x.t("value","stopped");
x.t("similar","start");
x.t("javax.jms.message","uses");
x.t("javax.jms.message","var");
x.t("jmsexamplebase","implements");
x.t("jmsexamplebase","private");
x.t("running","anonymous");
x.t("running","//");
x.t("(factory)","catch");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","type");
x.t("implementation","note");
x.t("implementation","itself");
x.t("send","queue");
x.t("send","jms");
x.t("send","outgoing");
x.t("send","message");
x.t("depending","method");
x.t("depending","needs");
x.t("depending","whether");
x.t("specific","user");
x.t("writable","bundle");
x.t("writable","entity");
x.t("queuereceiver","try");
x.t("queuereceiver","null");
x.t("view","provide");
x.t("view","status");
x.t("process","custom");
x.t("extends","testbase");
x.t("extends","jmsexamplebase");
x.t("exception","jmsexception.tostring");
x.t("client.send","hello");
x.t("runs","just");
x.t("runs","start");
x.t("runs","due");
x.t("runs","server");
x.t("services","(soap)");
x.t("(soap)","claimcenter");
x.t("takes","care");
x.t("takes","no");
x.t("takes","argument");
x.t("hello","world");
x.t("(queuesendername)","return");
x.t("context.provider_url","jms_url");
x.t("gw.api.util.dateutil","@runlevel");
x.t("page","property");
x.t("page","stop");
x.t("page","error");
x.t("location","slightly");
x.t("location","configuration");
x.t("show","state");
x.t("context","need");
x.t("context","simplest");
x.t("separate","bundle");
x.t("gw.api.database.query.make","(user)");
x.t("helloworldstartableplugin","goodbye");
x.t("helloworldstartableplugin","implements");
x.t("helloworldstartableplugin","hello");
x.t("queueconnection","null");
x.t("_queuesender.send","(jmsmessage)");
x.t("messaging","reply");
x.t("messaging","transport\u2019s");
x.t("messaging","system");
x.t("data","example");
x.t("data","within");
x.t("data","likely");
x.t("data","want");
x.t("data","changes");
x.t("information","bundles");
x.t("information","remote");
x.t("information","register");
x.t("information","working");
x.t("information","gosu");
x.t("information","web");
x.t("information","system");
x.t("information","startable");
x.t("privileges","view");
x.t("correct","jms");
x.t("correct","(default)");
x.t("(default)","database");
x.t("query","results");
x.t("query","remember");
x.t("query","find");
x.t("query","//variable");
x.t("query","var");
x.t("gw.transaction.transaction","class");
x.t("send_queue_name","try");
x.t("send_queue_name","string");
x.t("createqueuesender","(send_queue_name)");
x.t("createqueuesender","queuesendername");
x.t("gw.testharness.donotruninharness","uses");
x.t("defined","variable");
x.t("save","result");
x.t("result","original");
x.t("result","bundle.add");
x.t("runtimeexception","failed");
x.t("runtimeexception","error");
x.t("runtimeexception","(jmse)");
x.t("received","_queuesession");
x.t("received","message");
x.t("examples","private");
x.t("_queuesession.createmessage","jmsmessage.setstringproperty");
x.t("_queuesession.createreceiver","(replyqueue)");
x.t("queuesendername","name");
x.t("queuesendername","string");
x.t("case","real-world");
x.t("application","sets");
x.t("(user)","//");
x.t("values","current");
x.t("stopping","jms");
x.t("prevent","further");
x.t("properties.put","context.initial_context_factory");
x.t("properties.put","context.provider_url");
x.t("choose","add");
x.t("called","execute");
x.t("called","system");
x.t("called","run");
x.t("destroys","listener");
x.t("structure","creating");
x.t("javax.jms.queueconnection","uses");
x.t("jmsexception","protected");
x.t("jmsexception","_logger.error");
x.t("jmsexception","occurs");
x.t("jmsexception","throw");
x.t("jmsexception","jmsexception");
x.t("jmsexception","//");
x.t("replyqueue","_queuesession.createqueue");
x.t("org.exolab.jms.jndi.initialcontextfactory","properties.put");
x.t("gw.testharness.productundertest","uses");
x.t("plugins","plugin");
x.t("plugins","register");
x.t("plugins","need");
x.t("plugins","simplest");
x.t("plugins","gw");
x.t("plugins","function");
x.t("plugins","cluster");
x.t("plugins","editor");
x.t("plugins","define");
x.t("plugins","configuration");
x.t("plugins","main");
x.t("plugins","operate");
x.t("plugins","run");
x.t("plugins","similarities");
x.t("plugins","startable");
x.t("sense","typically");
x.t("note","integrations");
x.t("note","need");
x.t("note","location");
x.t("note","gw.transaction.transaction");
x.t("users","different");
x.t("users","administration");
x.t("administration","user");
x.t("administration","privileges");
x.t("transaction","application");
x.t("handler\u2019s","execute");
x.t("topics","override");
x.t("classes","library");
x.t("classes","gosu");
x.t("classes","implementing");
x.t("startup","form");
x.t("startup","however");
x.t("startup","startable");
x.t("startup","server");
x.t("typically","imple");
x.t("comes","server");
x.t("messagebody","messagereceived.getstringproperty");
x.t("messagebody","_callback.execute");
x.t("messagebody","information");
x.t("work","//");
x.t("resetqueues","@param");
x.t("resetqueues","exceptionlister");
x.t("resetqueues","void");
x.t("resetqueues","_queuesender");
x.t("_logger","loggercategory");
x.t("factory.createqueueconnection","_queueconnection.start");
x.t("itself","java");
x.t("itself","following");
x.t("operate","batch");
x.t("package","gw.api.startableplugin");
x.t("_callback.log","started");
x.t("_callback.log","error");
x.t("_callback.log","starting");
x.t("_callback.log","stopped");
x.t("_callback.log","helloworldstartableplugin");
x.t("_callback.log","received");
x.t("_callback.log","stopping");
x.t("initqueues","void");
x.t("initqueues","public");
x.t("initqueues","reset");
x.t("initqueues","_queuesender");
x.t("call","execute");
x.t("myblock=new","gwrunnable");
x.t("run","system.out.println");
x.t("run","method");
x.t("run","current");
x.t("run","batch");
x.t("run","instead");
x.t("run","code");
x.t("run","query");
x.t("system","parameter");
x.t("system","however");
x.t("system","entities");
x.t("system","listen");
x.t("system","startup");
x.t("service","write");
x.t("service","instead");
x.t("service","code");
x.t("service","startup");
x.t("service","server");
x.t("following","complex");
x.t("following","create");
x.t("following","shows");
x.t("following","complete");
x.t("following","methods");
x.t("following","location");
x.t("following","class");
x.t("special","type");
x.t("special","service");
x.t("entity","example");
x.t("entity","related");
x.t("entity","//note");
x.t("entity","readonly");
x.t("entity","string");
x.t("entity","writable");
x.t("entity","data");
x.t("anonymous","inner");
x.t("anonymous","java");
x.t("anonymous","class");
x.t("signatures","execute");
x.t("either","user");
x.t("analogous","standard");
x.t("using","block");
x.t("using","internal");
x.t("using","event");
x.t("class","java.lang.runnable");
x.t("class","alternate");
x.t("class","thing");
x.t("class","deploying");
x.t("class","libraries");
x.t("class","gosu");
x.t("class","standard");
x.t("class","implements");
x.t("class","jmsclient");
x.t("class","jmsclienttest");
x.t("class","java");
x.t("class","jmsstartableplugin");
x.t("class","jmsexamplebase");
x.t("class","helloworldstartableplugin");
x.t("class","//");
x.t("class","var");
x.t("class","generates");
x.t("typelist","startablepluginstate");
x.t("//","create");
x.t("//","init");
x.t("//","current");
x.t("//","close");
x.t("//","connection");
x.t("//","however");
x.t("//","property");
x.t("//","add");
x.t("//","assume");
x.t("//","_state");
x.t("//","initialize");
x.t("//","jndi");
x.t("//","setup");
x.t("//","private");
x.t("//","important");
x.t("//","return");
x.t("//","send");
x.t("//","query");
x.t("//","prevent");
x.t("//","work");
x.t("//","run");
x.t("//","modify");
x.t("//","acknowledge");
x.t("//","specify");
x.t("additionally","start");
x.t("additionally","stop");
x.t("setting","property");
x.t("your_block_body","user");
x.t("jndicontext.lookup","(connection_factory_name)");
x.t("similarities","messaging");
x.t("returns","typecode");
x.t("pass","callback");
x.t("pass","execute");
x.t("pass","either");
x.t("q.select","//");
x.t("catch","namingexception");
x.t("catch","(jmse)");
x.t("catch","(e)");
x.t("catch","jmse");
x.t("catch","jmsexception");
x.t("modify","properties");
x.t("modify","var");
x.t("associated","contexts");
x.t("world","dateutil.currentdate");
x.t("world","override");
x.t("messagereceived","message");
x.t("tcp://localhost:3035/","protected");
x.t("initqueueconnectionandsession","factory");
x.t("initqueueconnectionandsession","(factory)");
x.t("closejmsconnection","throw");
x.t("closejmsconnection","_queueconnection");
x.t("closejmsconnection","resetqueues");
x.t("acknowledge","messages");
x.t("var","receiver");
x.t("var","properties");
x.t("var","_callback");
x.t("var","jms_url");
x.t("var","body_property_name");
x.t("var","gw.transaction.transaction.current");
x.t("var","_queuesession");
x.t("var","sendqueue");
x.t("var","_state");
x.t("var","text_val=eval");
x.t("var","_queuereceiver");
x.t("var","jmsmessage");
x.t("var","_queuesender");
x.t("var","_queueconnection");
x.t("var","e_in_new_bundle");
x.t("var","client");
x.t("var","jndicontext");
x.t("var","connection_factory_name");
x.t("var","factory");
x.t("var","gw.api.database.query.make");
x.t("var","send_queue_name");
x.t("var","replyqueue");
x.t("var","messagebody");
x.t("var","_logger");
x.t("cbh","_state");
x.t("cbh","_callback.execute");
x.t("cbh","startableplugincallbackhandler");
x.t("commit","bundle");
x.t("isstartingup","parameter");
x.t("including","preupdate");
x.t("runwithnewbundle","method");
x.t("runwithnewbundle","pass");
x.t("javax.jms.exceptionlistener","uses");
x.t("jmsmessage.setstringproperty","body_property_name");
x.t("startable","plugin");
x.t("startable","istartableplugin");
x.t("startable","plugins");
x.t("shutting","down");
x.t("gw.api.startable.startablepluginstate","class");
x.t("queuesender","null");
x.t("queuesender","//");
x.t("generates","messages");
x.t("(message)","//");
x.t("server","starting");
x.t("server","important");
x.t("server","return");
x.t("server","tools");
x.t("server","running");
x.t("server","_queuesender.send");
x.t("server","startup");
x.t("server","var");
x.t("server","startable");
x.t("server","shutting");
x.t("threads","jms");
x.t("plugin\u2019s","start");
x.t("e_in_new_bundle.department","example");
x.t("specify","object");
x.t("object","discussed");
x.t("object","message");
x.t("initializationexception","jmsexception");
x.t("contains","single");
}
