function FileData_Pairs(x)
{
x.t("complex","object");
x.t("example","intercept");
x.t("example","uses");
x.t("example","extend");
x.t("example","multiple");
x.t("example","no");
x.t("example","@servlet");
x.t("example","servlet");
x.t("example","resp.writer.append");
x.t("example","responds");
x.t("example","following");
x.t("safely","contact");
x.t("coding","servlets");
x.t("mime","type");
x.t("root","directory");
x.t("considerations","implement");
x.t("possible","security");
x.t("parameter","parentheses");
x.t("method","string");
x.t("method","actual");
x.t("method","takes");
x.t("properties","object");
x.t("-------------","//");
x.t("serialization","deserialization");
x.t("pattern","intercept");
x.t("pattern","servlet");
x.t("annotation","line");
x.t("annotation","using");
x.t("annotation","pass");
x.t("implement","useful");
x.t("implement","authentication");
x.t("every","character");
x.t("full","documentation");
x.t("shown","previous");
x.t("integration","guide");
x.t("contact","guidewire");
x.t("refer","sun");
x.t("resp.contenttype","text/plain");
x.t("ensures","basic");
x.t("required","//");
x.t("regular","expression");
x.t("intercept","single");
x.t("intercept","urls");
x.t("execute","want");
x.t("abstractbasicauthenticationservlet","ensures");
x.t("abstractbasicauthenticationservlet","authenticates");
x.t("questions","safely");
x.t("user","url");
x.t("user","authentication");
x.t("testingservlet","extends");
x.t("uses","abstractbasicauthenticationservlet");
x.t("uses","standard");
x.t("uses","gw.servlet.servlet");
x.t("uses","javax.servlet.http.httpservletrequest");
x.t("uses","gw.api.util.logger");
x.t("uses","javax.servlet.http.httpservlet");
x.t("uses","javax.servlet.http.httpservletresponse");
x.t("line","http");
x.t("line","class");
x.t("rectories","example");
x.t("text_val.select","link");
x.t("points","custom");
x.t("necessary","execute");
x.t("support","extremely");
x.t("support","call");
x.t("displays","following");
x.t("authenticates","using");
x.t("basic","http");
x.t("basic","design");
x.t("basic","authentication");
x.t("type","status");
x.t("type","authentication");
x.t("type","pass");
x.t("customer","support");
x.t("change","port");
x.t("owns","request");
x.t("response","sets");
x.t("response","absolutely");
x.t("response","ok");
x.t("response","using");
x.t("response","object");
x.t("authenticate","guidewire");
x.t("hierarchy","shown");
x.t("inside","claimcenter");
x.t("extend","abstractgwauthservlet");
x.t("browser","http://localhost:8080/cc/service/test/is/this/working");
x.t("multiple","page");
x.t("guidewire","customer");
x.t("guidewire","pcf");
x.t("guidewire","server");
x.t("structured","warning");
x.t("protect","information");
x.t("text","byte");
x.t("text","/test/");
x.t("property","response");
x.t("property","hangs");
x.t("back","pathinfo");
x.t("link","directly");
x.t("want","implement");
x.t("want","write");
x.t("translate","security");
x.t("start","text");
x.t("start","string");
x.t("objects","full");
x.t("single","root");
x.t("single","page");
x.t("block","regular");
x.t("block","block");
x.t("block","determine");
x.t("block","takes");
x.t("block","returns");
x.t("hierarchies","single");
x.t("messsage","claimcenter");
x.t("http","basic");
x.t("http","response");
x.t("http","entry");
x.t("http","request");
x.t("http","authentication");
x.t("security","considerations");
x.t("security","servlet");
x.t("security","headers");
x.t("security","implications");
x.t("status","response");
x.t("text/plain","resp.setstatus");
x.t("file","hierarchy");
x.t("file","hierarchies");
x.t("add","@servlet");
x.t("substring","identified");
x.t("/my_magic_subfolder_one_level_down","match");
x.t("guide","servlets");
x.t("simple","response");
x.t("simple","http");
x.t("simple","web");
x.t("simple","servlet");
x.t("entry","points");
x.t("sun","javadoc");
x.t("go","url");
x.t("http://localhost:8080/cc/servlet/test1/my_magic_subfolder_one_level_down","http://localhost:8080/cc/servlet/test2/my_magic_subfolder_one_level_down");
x.t("http://localhost:8080/cc/servlet/test2/my_magic_subfolder_one_level_down","http://localhost:8080/cc/servlet/test3/my_magic_subfolder_one_level_down");
x.t("soap","protocol");
x.t("url","browser");
x.t("url","substring");
x.t("url","path");
x.t("url","string");
x.t("url","entire");
x.t("url","syntax");
x.t("url","long");
x.t("url","whether");
x.t("url","httpservletrequest.requesturi");
x.t("url","important");
x.t("url","client");
x.t("url","substrings");
x.t("url","matches");
x.t("url","protocol");
x.t("large","security");
x.t("/test","example");
x.t("/test","class");
x.t("doget","method");
x.t("doget","req");
x.t("mycompany.test","uses");
x.t("directly","page");
x.t("true","user");
x.t("true","test");
x.t("desired","work");
x.t("specified","request");
x.t("byte","stream");
x.t("test","url");
x.t("test","launch");
x.t("test","query");
x.t("text_val.focus","text_val.select");
x.t("no","complex");
x.t("no","security");
x.t("no","authentication");
x.t("definition","parameter");
x.t("path","example");
x.t("path","every");
x.t("path","pathinfo");
x.t("path","string");
x.t("path","servlet");
x.t("path","information");
x.t("name","up");
x.t("name","match");
x.t("name","word");
x.t("name","port");
x.t("pathinfo","property");
x.t("pathinfo","returns");
x.t("isauthenticationrequired","req");
x.t("gosu","block");
x.t("gosu","class");
x.t("resp","httpservletresponse");
x.t("custom","code");
x.t("base","servlet");
x.t("handles","optionally");
x.t("part","request\u2019s");
x.t("part","matches");
x.t("enumeration","string");
x.t("virtual","file");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","absolutely");
x.t("alternatively","base");
x.t("useful","code");
x.t("entrypoint","write");
x.t("httpservletresponse","respectively");
x.t("httpservletresponse","print");
x.t("boolean","//");
x.t("determine","url");
x.t("standard","java");
x.t("identified","your_servlet_string");
x.t("requesturi","returns");
x.t("up","query");
x.t("writer","property");
x.t("httpservletrequest.querystring","resp.contenttype");
x.t("web","servlets");
x.t("web","services");
x.t("web","page");
x.t("web","application");
x.t("(httpservletresponse.sc_ok)","want");
x.t("(httpservletresponse.sc_ok)","resp.writer.append");
x.t("claimcenter","integration");
x.t("claimcenter","application");
x.t("critical","understand");
x.t("integrity","questions");
x.t("write","block");
x.t("write","http");
x.t("write","gosu");
x.t("write","output");
x.t("string","type");
x.t("string","change");
x.t("string","objects");
x.t("string","httpservletrequest.querystring");
x.t("string","write");
x.t("string","first");
x.t("string","/test/");
x.t("string","path.matches");
x.t("string","contained");
x.t("sets","content");
x.t("entire","virtual");
x.t("absolutely","no");
x.t("absolutely","critical");
x.t("understand","large");
x.t("requesturl","reconstructs");
x.t("extra","path");
x.t("stream","writer");
x.t("@servlet","annotation");
x.t("@servlet","path");
x.t("request","response");
x.t("request","authenticate");
x.t("request","url");
x.t("request","no");
x.t("request","requesturl");
x.t("request","querystring");
x.t("request","headers");
x.t("request","header");
x.t("request","object");
x.t("servlet","example");
x.t("servlet","response");
x.t("servlet","url");
x.t("servlet","test");
x.t("servlet","handles");
x.t("servlet","entrypoint");
x.t("servlet","string");
x.t("servlet","request");
x.t("servlet","simply");
x.t("servlet","responds");
x.t("servlet","query");
x.t("servlet","class");
x.t("servlet","gets");
x.t("querystring","returns");
x.t("error","occurred");
x.t("todo","-------------");
x.t("javax.servlet.http","define");
x.t("syntax","http://localhost:8080/cc/service/");
x.t("respectively","desired");
x.t("req.pathinfo","override");
x.t("feature","define");
x.t("long","define");
x.t("headers","request");
x.t("headers","return");
x.t("headers","returns");
x.t("servlet/","words");
x.t("first","line");
x.t("gw.servlet.servlet","uses");
x.t("guidewire_selectall","var");
x.t("number","server");
x.t("function","doget");
x.t("function","isauthenticationrequired");
x.t("function","guidewire_selectall");
x.t("approach","separate");
x.t("true/false","user");
x.t("design","pattern");
x.t("define","simple");
x.t("define","gosu");
x.t("define","servlet");
x.t("define","arbitrary");
x.t("define","extremely");
x.t("define","urls");
x.t("whether","owns");
x.t("words","servlet");
x.t("launch","application");
x.t("servlets","inside");
x.t("servlets","large");
x.t("servlets","claimcenter");
x.t("servlets","function");
x.t("servlets","define");
x.t("servlets","servlets");
x.t("servlets","extending");
x.t("servlets","consider");
x.t("arbitrary","code");
x.t("resp.setstatus","(httpservletresponse.sc_ok)");
x.t("pcf","entrypoints");
x.t("request\u2019s","url");
x.t("httpservletrequest.requesturi","print");
x.t("match","application");
x.t("match","following");
x.t("directory","subdi");
x.t("httpservletrequest","resp");
x.t("httpservletrequest","httpservletresponse");
x.t("httpservletrequest","boolean");
x.t("important","properties");
x.t("important","part");
x.t("simply","echos");
x.t("code","structured");
x.t("code","triggered");
x.t("code","using");
x.t("client","used");
x.t("client","sent");
x.t("javax.servlet.http.httpservletrequest","uses");
x.t("override","doget");
x.t("override","function");
x.t("substrings","start");
x.t("return","true");
x.t("return","true/false");
x.t("triggered","url");
x.t("matches","method");
x.t("matches","pattern");
x.t("matches","servlet");
x.t("header","enumeration");
x.t("previous","example");
x.t("java","classes");
x.t("extending","httpservlet");
x.t("parentheses","annotation");
x.t("actual","work");
x.t("documentation","class");
x.t("occurred","messsage");
x.t("extremely","simple");
x.t("extremely","careful");
x.t("entrypoints","feature");
x.t("consider","possible");
x.t("made","request");
x.t("resp.writer.append","hello");
x.t("resp.writer.append","page");
x.t("instances","httpservletrequest");
x.t("include","requesturi");
x.t("gw.api.util.logger","@servlet");
x.t("req","httpservletrequest");
x.t("httpservlet","provides");
x.t("/test/is/this/working","basic");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","uses");
x.t("responds","servlet");
x.t("responds","urls");
x.t("/test/","url");
x.t("/test/","servlet");
x.t("/test/","incoming");
x.t("--","todo");
x.t("deserialization","done");
x.t("extends","class");
x.t("extends","gw.servlet.abstractbasicauthenticationservlet");
x.t("computer","name");
x.t("services","soap");
x.t("authentication","required");
x.t("authentication","necessary");
x.t("authentication","type");
x.t("authentication","choose");
x.t("authentication","package");
x.t("authentication","system");
x.t("takes","url");
x.t("takes","servlet");
x.t("expression","example");
x.t("expression","/my_magic_subfolder_one_level_down");
x.t("expression","define");
x.t("word","servlet/");
x.t("http://java.sun.com/webservices/docs/1.6/api/javax/servlet/http/httpservletrequest.html","write");
x.t("hello","world");
x.t("read","headers");
x.t("page","displays");
x.t("page","url");
x.t("page","error");
x.t("page","req.pathinfo");
x.t("page","/test/is/this/working");
x.t("page","http://java.sun.com/webservices/docs/1.6/api/javax/servlet/http/httpservletrequest.html");
x.t("page","urls");
x.t("separate","guidewire");
x.t("separate","web");
x.t("output","text");
x.t("output","following");
x.t("information","data");
x.t("information","associated");
x.t("data","integrity");
x.t("javax.servlet.http.httpservlet","uses");
x.t("javax.servlet.http.httpservlet","add");
x.t("urls","regular");
x.t("urls","support");
x.t("urls","start");
x.t("urls","http://localhost:8080/cc/servlet/test1/my_magic_subfolder_one_level_down");
x.t("urls","described");
x.t("query","path");
x.t("query","string");
x.t("echos","back");
x.t("traditional","file");
x.t("subdi","rectories");
x.t("application","go");
x.t("application","name");
x.t("application","web");
x.t("application","define");
x.t("application","using");
x.t("implications","simple");
x.t("implications","using");
x.t("path.matches","/test");
x.t("values","specified");
x.t("javadoc","page");
x.t("abstractgwauthservlet","translate");
x.t("choose","implement");
x.t("character","computer");
x.t("port","web");
x.t("port","number");
x.t("print","servlet");
x.t("http://localhost:8080/cc/service/test/is/this/working","note");
x.t("described","traditional");
x.t("protocol","name");
x.t("protocol","implementation");
x.t("protocol","separate");
x.t("done","soap");
x.t("classes","package");
x.t("ok","resp.contenttype");
x.t("note","text");
x.t("optionally","block");
x.t("http://localhost:8080/cc/service/","your_servlet_string");
x.t("work","doget");
x.t("work","using");
x.t("package","mycompany.test");
x.t("package","javax.servlet.http");
x.t("call","matches");
x.t("incoming","url");
x.t("system","example");
x.t("system","protect");
x.t("following","example");
x.t("following","simple");
x.t("following","url");
x.t("following","page");
x.t("following","urls");
x.t("used","request");
x.t("contained","request");
x.t("hangs","response");
x.t("---------------------","return");
x.t("using","http");
x.t("using","@servlet");
x.t("using","request");
x.t("using","servlet");
x.t("using","approach");
x.t("using","servlets");
x.t("class","refer");
x.t("class","abstractbasicauthenticationservlet");
x.t("class","testingservlet");
x.t("class","definition");
x.t("class","extends");
x.t("class","javax.servlet.http.httpservlet");
x.t("warning","servlets");
x.t("//","--");
x.t("//","read");
x.t("//","---------------------");
x.t("pass","regular");
x.t("pass","gosu");
x.t("returns","true");
x.t("returns","part");
x.t("returns","extra");
x.t("returns","query");
x.t("returns","values");
x.t("associated","url");
x.t("world","output");
x.t("var","text_val=eval");
x.t("your_servlet_string","override");
x.t("your_servlet_string","following");
x.t("javax.servlet.http.httpservletresponse","uses");
x.t("careful","coding");
x.t("sent","made");
x.t("gw.servlet.abstractbasicauthenticationservlet","override");
x.t("object","example");
x.t("object","serialization");
x.t("object","servlet");
x.t("object","important");
x.t("object","instances");
x.t("object","include");
x.t("object","contains");
x.t("server","name");
x.t("server","alternatively");
x.t("gets","servlet");
x.t("reconstructs","url");
x.t("content","mime");
x.t("contains","path");
}
