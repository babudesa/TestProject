function FileData_Pairs(x)
{
x.t("example","suppose");
x.t("example","may");
x.t("example","arbitrary");
x.t("example","20");
x.t("example","specify");
x.t("eur=1.0","gbp");
x.t("moment","either");
x.t("transactions","multiple");
x.t("transactions","require");
x.t("method","retrieving");
x.t("method","populate");
x.t("method","need");
x.t("method","createexchangerateset");
x.t("method","invokes");
x.t("method","gw.api.util.currencyutil.invokemarketexchangeratesetplugin");
x.t("method","subsequent");
x.t("provide","conversions");
x.t("provide","exchange");
x.t("rocal","note");
x.t("creation","exchangerates");
x.t("er.rate","extractrate");
x.t("er.rate",".04156103");
x.t("else","er.rate");
x.t("else","return");
x.t("1/value","invoking");
x.t("non-reporting","currency");
x.t("combinations","two");
x.t("pattern","package");
x.t("just","return");
x.t("defaultcurrency.code.touppercase","return");
x.t("needs","describing");
x.t("retrieving","exchange");
x.t("within","frbny:obs_value");
x.t("integration","financial");
x.t("integration","guide");
x.t("integration","function");
x.t("integration","exchange");
x.t("create","exchangerateset");
x.t("create","entity");
x.t("create","exchangerate");
x.t("commits","claimcenter");
x.t("commits","database");
x.t("commits","exchangerateset");
x.t("commits","newly");
x.t("newyorkfed.org","doesn't");
x.t("newyorkfed.org","provides");
x.t("\\x","x.elementname");
x.t("static","method");
x.t("maintenance_tools.bat","-password");
x.t("financial","transactions");
x.t("eur=1.5","usd");
x.t("required","minimum");
x.t("related","batch");
x.t("arguments","returns");
x.t("current","currency");
x.t("currency","provide");
x.t("currency","non-reporting");
x.t("currency","required");
x.t("currency","currency");
x.t("currency","==");
x.t("currency","float");
x.t("currency","secondary");
x.t("currency","claimcenter");
x.t("currency","typekey.currency.typekeys");
x.t("currency","conversions");
x.t("currency","exchange");
x.t("currency","erset.addtoexchangerates");
x.t("currency","private");
x.t("currency","defaultcurrency");
x.t("currency","system");
x.t("currency","er.pricecurrency");
x.t("plugin","commits");
x.t("plugin","creates");
x.t("plugin","interface");
x.t("plugin","functionality");
x.t("plugin","illustrates");
x.t("plugin","claimcenter");
x.t("plugin","iexchangeratesetplugin");
x.t("plugin","implementation");
x.t("creates","user");
x.t("creates","exchangerate");
x.t("federal","reserve");
x.t("frbny:obs_value","element");
x.t("frbny:obs_value","gw.api.xml.xmlnode");
x.t("erset","new");
x.t("erset","@return");
x.t("user","interface");
x.t("uses","newyorkfed.org");
x.t("uses","java.util.date");
x.t("uses","rate");
x.t("uses","gw.api.util.currencyutil");
x.t("uses","gw.plugin.exchangerate.iexchangeratesetplugin");
x.t("uses","soap.exchangerateservice.api.fxws");
x.t("(er)","erset.name");
x.t("(response)","var");
x.t("line","maintenance_tools.bat");
x.t("-password","gw");
x.t("text_val.select","link");
x.t("interface","method");
x.t("interface","whose");
x.t("interface","transaction");
x.t("provided","federal");
x.t("node.findfirst","\\x");
x.t("populate","least");
x.t("populate","exchangerateset");
x.t("gbp=0.33","final");
x.t("gbp=0.33","gbp");
x.t("sample","example");
x.t("sample","plugin");
x.t("sample","gosu");
x.t("sample","exchange");
x.t("sample","exchangerateservice");
x.t("sample","value");
x.t("java.util.date","uses");
x.t("batch","processes");
x.t("batch","process");
x.t("explicitly","specified");
x.t("calls","third-party");
x.t("response","external");
x.t("response","api.getlatestnoonrate");
x.t("response","service");
x.t("calculation","done");
x.t("recip","rocal");
x.t("public","override");
x.t("er","new");
x.t("external","service");
x.t("rate","within");
x.t("rate","integration");
x.t("rate","plugin");
x.t("rate","batch");
x.t("rate","explicitly");
x.t("rate","want");
x.t("rate","reporting");
x.t("rate","changes");
x.t("rate","data");
x.t("rate","information");
x.t("rate","two");
x.t("rate","eur");
x.t("rate","//");
x.t("multiple","currencies");
x.t("total","number");
x.t("total","least");
x.t("trigger","related");
x.t("entities","total");
x.t("entities","encapsulated");
x.t("entities","20");
x.t("entities","remaining");
x.t("encapsulated","exchangerateset");
x.t("automatically","creates");
x.t("automatically","compute");
x.t("default","create");
x.t("default","new");
x.t("invoking","exchange");
x.t("require","exchange");
x.t("link","directly");
x.t("19","entities");
x.t("new","features");
x.t("new","exchangerateset");
x.t("new","fxws");
x.t("new","york");
x.t("new","exchangerate");
x.t("element","additional");
x.t("element","usd");
x.t("element","//");
x.t("want","number");
x.t("want","may");
x.t("want","reciprocal");
x.t("exchangerates","added");
x.t("==","defaultcurrency.code.touppercase");
x.t("==","frbny:obs_value");
x.t("==","typekey.currency.tc_rub");
x.t("==","frbny:series");
x.t("document","exchange");
x.t("document","//");
x.t("command","line");
x.t("messsage","claimcenter");
x.t("outbound","soap");
x.t("doesn't","provide");
x.t("need","update");
x.t("around","world");
x.t("usd=2.0","usd");
x.t("guide","financials");
x.t("api","new");
x.t("api","fxws");
x.t("api","defaultcurrency");
x.t("float","var");
x.t("features","including");
x.t("soap","calls");
x.t("er.basecurrency","currency");
x.t("units","defaultcurrency");
x.t("directly","page");
x.t("specified","example");
x.t("specified","sample");
x.t("guarantee","service");
x.t("reserve","bank");
x.t("test","exchangerateset");
x.t("true","erset.effectivedate");
x.t("queues","using");
x.t("text_val.focus","text_val.select");
x.t("no","arguments");
x.t("connects","service");
x.t("functionality","gosu");
x.t("approximate","values");
x.t("gosu","static");
x.t("gosu","implementation");
x.t("conversion","rate");
x.t("java.lang.float.valueof","(match.text)");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("secondary","currency");
x.t("provides","method");
x.t("provides","sample");
x.t("provides","//");
x.t("illustrates","useful");
x.t("useful","new");
x.t("implementations","follow");
x.t("overriding","exchange");
x.t("final","exchangerateset");
x.t("gw","-startprocess");
x.t("web","services");
x.t("claimcenter","needs");
x.t("claimcenter","integration");
x.t("claimcenter","commits");
x.t("claimcenter","automatically");
x.t("claimcenter","guarantee");
x.t("claimcenter","provides");
x.t("claimcenter","exposes");
x.t("extractrate","api");
x.t("allow","optional");
x.t("minus","describe");
x.t("three","currencies");
x.t("sampleexchangeratesetplugin","implements");
x.t("sampleexchangeratesetplugin","erset.marketrates");
x.t("typekey.currency.typekeys","currency");
x.t("attribute","frbny:series");
x.t("typekey.currency.tc_rub","//");
x.t("error","occurred");
x.t("registered","number");
x.t("registered","currencies");
x.t("queries","works");
x.t("createexchangerateset","exchangerateset");
x.t("createexchangerateset","takes");
x.t("suppose","usd");
x.t("suppose","application");
x.t("suppose","specify");
x.t("invokes","plugin");
x.t("minimum","specify");
x.t("typekey.currency.tc_usd","var");
x.t("unit","currency");
x.t("unit","node.findfirst");
x.t("unit","==");
x.t("unit","attribute");
x.t("unit","unit");
x.t("guidewire_selectall","var");
x.t("number","within");
x.t("number","units");
x.t("number","fewer");
x.t("number","currencies");
x.t("conversions","example");
x.t("conversions","reporting");
x.t("conversions","exchangerateset");
x.t("fewer","three");
x.t("fewer","registered");
x.t("gbp=1.0","may");
x.t("processing","important");
x.t("gw.api.util.currencyutil.invokemarketexchangeratesetplugin","method");
x.t("function","extractrate");
x.t("function","createexchangerateset");
x.t("function","guidewire_selectall");
x.t("reporting","currency");
x.t("implements","iexchangeratesetplugin");
x.t("-startprocess","exchangerate");
x.t("exchange","rate");
x.t("exchange","rates");
x.t("words","create");
x.t("may","recip");
x.t("may","actual");
x.t("may","work");
x.t("may","specify");
x.t("erset.addtoexchangerates","(er)");
x.t("private","function");
x.t("screens","allow");
x.t("processes","work");
x.t("maintenance","web");
x.t("instead","uses");
x.t("bank","new");
x.t("gw.plugin.exchangerate.impl","uses");
x.t("arbitrary","sample");
x.t("changes","words");
x.t("xml","document");
x.t("xml","processing");
x.t("match","node.findfirst");
x.t("(match.text)","var");
x.t("describing","current");
x.t("important","sample");
x.t("important","information");
x.t("works","given");
x.t("added","newly");
x.t(".04156103","else");
x.t("node","gw.api.xml.xmlnode.parse");
x.t("calling","method");
x.t("iexchangeratesetplugin","interface");
x.t("iexchangeratesetplugin","public");
x.t("task","create");
x.t("follow","general");
x.t("override","function");
x.t("erset.effectivedate","gw.api.util.dateutil.currentdate");
x.t("return","1/value");
x.t("return","erset");
x.t("return","value");
x.t("@return","number");
x.t("reciprocal","value");
x.t("least","total");
x.t("least","19");
x.t("database","claimcenter");
x.t("database","2=9");
x.t("gbp","eur=1.5");
x.t("gbp","suppose");
x.t("gbp","gbp=1.0");
x.t("gbp","usd=3.0");
x.t("given","moment");
x.t("whose","main");
x.t("20","minus");
x.t("20","registered");
x.t("usd=3.0","eur");
x.t("actual","rate");
x.t("occurred","messsage");
x.t("currencies","plugin");
x.t("currencies","response");
x.t("currencies","claimcenter");
x.t("currencies","minus");
x.t("currencies","suppose");
x.t("currencies","usd");
x.t("currencies","application");
x.t("currencies","real");
x.t("currencies","directions");
x.t("currencies","including");
x.t("exchangerateset","method");
x.t("exchangerateset","commits");
x.t("exchangerateset","plugin");
x.t("exchangerateset","number");
x.t("exchangerateset","erset.description");
x.t("exchangerateset","entity");
x.t("exchangerateset","//");
x.t("exchangerateset","var");
x.t("exchangerateset","exchangerate");
x.t("exchangerateset","specify");
x.t("financials","integration");
x.t("eur=0.5","usd");
x.t("eur=0.5","eur");
x.t("2=9","rates");
x.t("exchangerateservice","uses");
x.t("fxws","defaultcurrency");
x.t("fxws","var");
x.t("main","task");
x.t("additional","calculation");
x.t("additional","conversions");
x.t("value","er.rate");
x.t("value","else");
x.t("value","want");
x.t("value","java.lang.float.valueof");
x.t("value","may");
x.t("value","//");
x.t("value","var");
x.t("running","batch");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","populate");
x.t("implementation","connects");
x.t("implementation","claimcenter");
x.t("implementation","exchange");
x.t("gw.api.xml.xmlnode","var");
x.t("rates","explicitly");
x.t("rates","around");
x.t("rates","usd");
x.t("rates","rubles");
x.t("rates","two");
x.t("rates","following");
x.t("exposes","plugin");
x.t("process","batch");
x.t("process","trigger");
x.t("process","using");
x.t("takes","no");
x.t("usd","gbp=0.33");
x.t("usd","automatically");
x.t("usd","conversion");
x.t("usd","instead");
x.t("usd","eur=0.5");
x.t("usd","application");
x.t("usd","eur");
x.t("usd","usd=1.0");
x.t("usd","var");
x.t("third-party","service");
x.t("services","maintenance");
x.t("services","information");
x.t("page","error");
x.t("york","service");
x.t("gw.api.util.currencyutil","uses");
x.t("rubles","//");
x.t("erset.description","sampleexchangeratesetplugin");
x.t("x.elementname","==");
x.t("information","default");
x.t("information","running");
x.t("information","multicurrency");
x.t("frbny:series","element");
x.t("frbny:series",".attributes");
x.t("data","calling");
x.t("optional","overriding");
x.t("future","sample");
x.t("newly","created");
x.t("gw.api.util.dateutil.currentdate","return");
x.t("application","default");
x.t("application","guide");
x.t("application","three");
x.t("values","currency");
x.t("values","usd");
x.t("defaultcurrency","currency");
x.t("defaultcurrency","typekey.currency.tc_usd");
x.t("defaultcurrency","per");
x.t("defaultcurrency","var");
x.t("gw.plugin.exchangerate.iexchangeratesetplugin","uses");
x.t("two","fewer");
x.t("two","currencies");
x.t("two","rates");
x.t("done","value");
x.t("note","creation");
x.t("erset.name","test");
x.t("otherwise","just");
x.t("transaction","screens");
x.t("permutations","currencies");
x.t("work","queues");
x.t("work","currencies");
x.t("api.getlatestnoonrate","(currency.code)");
x.t("gw.api.xml.xmlnode.parse","(response)");
x.t("eur","eur=1.0");
x.t("eur","usd=2.0");
x.t("eur","gbp");
x.t("eur","usd");
x.t("eur","eur");
x.t("eur","gbp=0.66");
x.t("usd=1.0","eur");
x.t("created","exchangerateset");
x.t("real","implementations");
x.t("package","gw.plugin.exchangerate.impl");
x.t("erset.marketrates","true");
x.t("entity","non-reporting");
x.t("entity","important");
x.t("entity","database");
x.t("system","main/default");
x.t("following","approximate");
x.t("compute","rate");
x.t("compute","rates");
x.t("service","provided");
x.t("service","provides");
x.t("service","queries");
x.t("service","xml");
x.t("either","future");
x.t("(currency.code)","//");
x.t("using","command");
x.t("using","web");
x.t("using","exchange");
x.t("remaining","permutations");
x.t("general","pattern");
x.t("class","sampleexchangeratesetplugin");
x.t("//","example");
x.t("//","newyorkfed.org");
x.t("//","sample");
x.t("//","response");
x.t("//","want");
x.t("//","unit");
x.t("//","exchange");
x.t("//","value");
x.t("//","otherwise");
x.t("returns","exchangerateset");
x.t("soap.exchangerateservice.api.fxws","class");
x.t("per","unit");
x.t("subsequent","financial");
x.t("world","using");
x.t("directions","example");
x.t("gbp=0.66","gbp");
x.t("var","erset");
x.t("var","currency");
x.t("var","er");
x.t("var","response");
x.t("var","api");
x.t("var","text_val=eval");
x.t("var","unit");
x.t("var","match");
x.t("var","node");
x.t("var","value");
x.t("var","defaultcurrency");
x.t("describe","rate");
x.t("describe","exchange");
x.t("main/default","currency");
x.t("including","combinations");
x.t("including","outbound");
x.t(".attributes","unit");
x.t("multicurrency","multiple");
x.t("exchangerate","entities");
x.t("exchangerate","er.basecurrency");
x.t("exchangerate","information");
x.t("exchangerate","values");
x.t("specify","additional");
x.t("specify","usd");
x.t("specify","two");
x.t("specify","exchangerate");
x.t("er.pricecurrency","defaultcurrency");
x.t("update","exchange");
}
